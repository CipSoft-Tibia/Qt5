/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page multimediaoverview.html
\title Multimedia
\brief A set of APIs for working with audio, video, radio and camera devices.

Multimedia support in Qt is provided by the \l{Qt Multimedia} module. The Qt
Multimedia module provides a rich feature set that enables you to easily take
advantage of a platform's multimedia capabilities such as media playback and
the use of camera and radio devices.

\section1 Features

Here are some examples of what can be done with Qt Multimedia APIs:

\list
\li Access raw audio devices for input and output
\li Play low latency sound effects
\li Play media files in playlists (such as compressed audio or video files)
\li Record audio and compress it
\li Tune and listen to radio stations
\li Use a camera, including viewfinder, image capture, and movie recording
\li Play 3D positional audio with \l{Qt Audio Engine QML Types}{Qt Audio Engine}
\li Decode audio media files into memory for processing
\li Accessing video frames or audio buffers as they are played or recorded
\endlist

\section1 Multimedia Components

Qt's multimedia APIs are categorized into four main components.  More
information (including background information and class references) is
available here:

\list
\li \l {Audio Overview}
\li \l {Video Overview}
\li \l {Camera Overview}
\li \l {Radio Overview}
\endlist

\section1 Multimedia Recipes

For some quick recipes, look at the overviews above and consult this table:

\table 70%
    \header
        \li Use case
        \li Examples
        \li QML Types
        \li C++ Classes
    \row
        \li Playing a sound effect
        \li
        \li
        \li QSoundEffect
    \row
        \li Playing low latency audio
        \li \l{Audio Input Example}{audioinput},
            \l{Spectrum Example}{spectrum}
        \li
        \li QAudioOutput
    \row
        \li Playing encoded audio (MP3, AAC etc)
        \li \l{Media Player Example}{player}
        \li \l Audio, \l {MediaPlayer}
        \li QMediaPlayer
    \row
        \li Accessing raw audio input data
        \li \l{Spectrum Example}{spectrum},
            \l{Audio Input Example}{audioinput}
        \li
        \li QAudioInput
    \row
        \li Recording encoded audio data
        \li \l{Audio Recorder Example}{audiorecorder}
        \li
        \li QAudioRecorder
    \row
        \li Discovering raw audio devices
        \li \l{Audio Devices Example}{audiodevices}
        \li
        \li QAudioDeviceInfo
    \row
        \li Video Playback
        \li \l{Media Player Example}{player},
            \l{QML Video Example}{qmlvideo},
            \l{QML Video Shader Effects Example}{qmlvideofx}
        \li \l MediaPlayer, \l VideoOutput, \l Video
        \li QMediaPlayer, QVideoWidget, QGraphicsVideoItem
    \row
        \li Video Processing
        \li \l {QML Video Example}{qmlvideofx}
        \li \l {MediaPlayer}, \l VideoOutput
        \li QMediaPlayer, QAbstractVideoSurface, QVideoFrame
    \row
        \li Listening to the radio
        \li \l {Declarative Radio Example}{declarative-radio}
        \li \l Radio, \l RadioData
        \li QRadioTuner, QRadioData
    \row
        \li Accessing camera viewfinder
        \li \l {Camera Example}{camera},
            \l {QML Camera Example}{declarative-camera}
        \li \l Camera, \l VideoOutput
        \li QCamera, QVideoWidget, QGraphicsVideoItem
    \row
        \li Viewfinder processing
        \li
        \li \l Camera, \l VideoOutput
        \li QCamera, QAbstractVideoSurface, QVideoFrame
    \row
        \li Capturing photos
        \li \l {Camera Example}{camera},
            \l {QML Camera Example}{declarative-camera}
        \li \l Camera
        \li QCamera, QCameraImageCapture
    \row
        \li Capturing movies
        \li \l {Camera Example}{camera},
            \l {QML Camera Example}{declarative-camera}
        \li \l Camera
        \li QCamera, QMediaRecorder
    \row
        \li 3D sound sources
        \li
        \li \l {AudioEngine Example}{Audio Engine}
        \li \l {AudioEngine}, \l Sound
        \li
\endtable

\section1 Limitations

The Qt Multimedia APIs build upon the multimedia framework of the underlying
platform. This can mean that support for various codecs or containers can vary
between machines, depending on what the end user has installed.

\section1 Advanced Usage

For developers wishing to access some platform specific settings, or to port the
Qt Multimedia APIs to a new platform or technology, see \l{Multimedia Backend
Development}.

\section1 Changes from Previous Versions

If you previously used Qt Multimedia in Qt 4, or used Qt Multimedia Kit in
Qt Mobility, please see \l {Changes in Qt Multimedia} for more information on
what changed, and what you might need to change when porting code.

\section1 Reference Documentation

\section2 QML Types
The QML types are accessed by using:
\code
import QtMultimedia 5.8
\endcode
\annotatedlist multimedia_qml
The following types are accessed by using \l{Qt Audio Engine QML Types}{Qt Audio Engine}:
\code
import QtAudioEngine 1.1
\endcode
\annotatedlist multimedia_audioengine

\section2 Multimedia Classes

\annotatedlist multimedia

*/
