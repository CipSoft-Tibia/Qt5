/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qt-embedded-kmap2qmap.html
    \title kmap2qmap
    \ingroup qt-embedded-linux

    \c kmap2qmap is a tool to generate keymaps for use on Embedded Linux.
    The source files have to be in standard Linux \c kmap format that is
    e.g.  understood by the kernel's \c loadkeys command.  This means you
    can use the following sources to generate \c qmap files:

    \list
    \li The \l {http://lct.sourceforge.net/}{Linux Console Tools (LCT)} project.
    \li \l {http://www.x.org/}{Xorg} X11 keymaps can be converted to the \c
    kmap format with the \c ckbcomp utility.
    \li Since \c kmap files are plain text files, they can also be hand crafted.
    \endlist

    The generated \c qmap files are size optimized binary files.

    \c kmap2qmap is a command line program, that needs at least 2 files as
    parameters.  The last one will be the generated \c .qmap file, while all
    the others will be parsed as input \c .kmap files.  For example:

    \code
    kmap2qmap i386/qwertz/de-latin1-nodeadkeys.kmap include/compose.latin1.inc de-latin1-nodeadkeys.qmap
    \endcode

    \c kmap2qmap does not support all the (pseudo) symbols that the Linux
    kernel supports.  If you are converting a standard keymap you will get a
    lot of warnings for things like \c Show_Registers, \c Hex_A, etc.: you
    can safely ignore those.

    It also doesn't support numeric symbols (e.g. \c{keycode 1 = 4242},
    instead of \c{keycode 1 = colon}), since these are deprecated and can
    change from one kernel version to the other.
*/
