/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

//! [all]
\section1 Desktop Platforms
//! [desktop]

\section2 \l{Qt for Linux/X11}{Linux/X11}
//! [linux]
\table 80%
    \header \li Distribution \li Architecture \li Compiler \li Notes
    \row \li openSUSE 42.3
        \li \c x86_64
        \li GCC 4.8, \b {GCC 7}, \b {ICC}
        \li
    \row \li Red Hat Enterprise Linux 7.4
        \li \c x86_64
        \li \b {GCC 5.3.1}
        \li devtoolset-4
    \row \li Ubuntu 18.04
        \li \c x86_64
        \li GCC as provided by Canonical, \b {GCC 7.3.0}
        \li
    \row \li Ubuntu 16.04
        \li \c x86_64
        \li GCC as provided by Canonical, \b {GCC 5.4.0}
        \li
    \row \li Generic Linux
        \li \c x86 and \c x86_64
        \li GCC 4.8, GCC 4.9, GCC 5, GCC 6, GCC 7
        \li
\endtable
//! [linux]

\section2 \l{Qt for macOS}{\macos}
//! [macos]
\table 80%
    \header \li Target Platform \li Architecture \li Build Environment
    \row \li \macos 10.12, 10.13, \b 10.14
        \li \c x86_64 and \c x86_64h
        \li \b {Xcode 10} (10.14 SDK), Xcode 9\raisedaster (10.13 SDK)
\endtable
    \br
    \b{Note:} Xcode 9 is only supported for application development (to be able to opt out
    of features such as layer-backing and dark mode), not for development of Qt itself.
//! [macos]

\section2 \l{Qt for Windows}{Windows}
//! [windows]
\table 80%
    \header \li Operating System \li Architecture \li Compiler \li Notes
    \row \li Windows 10
        \li \c x86 and \c x86_64
        \li \b {MSVC 2017}, \b {MSVC 2015}, MinGW 7.3
        \li Tested on \e {Windows 10 Creators Update}
    \row \li Windows 8.1
        \li \c x86 and \c x86_64
        \li MSVC 2017, \b {MSVC 2015}, MinGW 7.3
        \li
    \row \li Windows 7
        \li \c x86 and \c x86_64
        \li MSVC 2017, MSVC 2015, \b {MinGW 7.3}
        \li \l{https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/7.3.0/threads-posix/dwarf/i686-7.3.0-release-posix-dwarf-rt_v5-rev0.7z/download}{MinGW-builds GCC 7.3.0 (x86)}
\endtable

//! [windows]

//! [desktop]

\section1 Mobile Platforms
//! [mobile]

\section2 \l{Qt for Android}{Android}
//! [android]
\table 80%
    \header \li Platform Version \li Architecture \li Compiler \li Build Environment
    \row \li Android 4.1, 5, 6, 7, 8 (API Level 16)
        \li \c armv7 and \c x86
        \li \b {Clang as provided by Google}, \b {MinGW 7.3}
        \li \b {RHEL 7.4 (x86_64)}, \b{\macos 10.13}, \b {Windows 7 (x86_64)}
\endtable
//! [android]

\section2 \l{Qt for iOS}{iOS/tvOS/watchOS}
//! [ios]
\table 80%
    \header \li Target Platform \li Architecture \li Build Environment \li Notes
    \row \li iOS 11, \b{iOS 12}
        \li \c armv8 (\c arm64)
        \li \b {Xcode 10} (iOS 12 SDK)
        \li
    \row \li tvOS 11, \b{tvOS 12}
        \li \c armv8 (\c arm64)
        \li \b {Xcode 10} (tvOS 12 SDK)
        \li Technology Preview
    \row \li watchOS 4, \b{watchOS 5}
        \li \c armv7k
        \li \b {Xcode 10} (watchOS 5 SDK)
        \li Technology Preview. No UI.
\endtable
//! [ios]

\section2 \l{Qt for WinRT}{WinRT}
//! [winrt]
\table 80%
    \header \li Platform Version \li Architecture \li Compiler \li Build Environment
    \row \li Universal Windows Platform 10
        \li \c x86, \c x86_64, and \c armv7
        \li \b{MSVC 2017}, \b{MSVC 2015}
        \li \b{Windows 10} Creators Update
\endtable

\br
Universal Windows Platforms include Windows 10, Windows 10 IoT devices, Xbox
One, and HoloLens.

//! [winrt]

//! [mobile]

\section1 Embedded Platforms
//! [embedded]

For embedded platform support, including \l{Qt for Embedded Linux}{Embedded Linux},
\l{Qt for INTEGRITY}{INTEGRITY}, \l{Qt for QNX}{QNX}, and \l{Qt for VxWorks}{VxWorks},
please consult the \l {http://doc.qt.io/QtForDeviceCreation}{Qt for Device Creation}
documentation.

//! [embedded]

//! [all]

*/
