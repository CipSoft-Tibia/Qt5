// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page uic.html
    \title User Interface Compiler (uic)
    \ingroup qttools
    \keyword uic

    \omit KEEP THIS FILE SYNCHRONIZED WITH uic help \endomit

    This page documents the \e{User Interface Compiler} for the \l{Qt Widgets}
    module. The \c uic reads an XML format user interface definition
    (\c .ui) file as generated by \l{Qt Designer Manual}{Qt
    Designer} and creates a corresponding C++ header file or Python source file.

    Usage:
    \snippet snippets/code/doc_src_uic.qdoc 0

    \section1 Options

    The following table lists the command-line options recognized by
    \c uic.

    \table
    \header \li Option \li Description
    \row \li \c{-h, --help}                     \li Displays help on commandline options.
    \row \li \c{-help-all}                      \li Displays help including Qt specific options.
    \row \li \c{-v, --version}                  \li Displays version information.
    \row \li \c{-d, --dependencies}             \li Display the dependencies.
    \row \li \c{-o, --output <file>}            \li Place the output into <file>
    \row \li \c{-a, --no-autoconnection}        \li Do not generate a call to QObject::connectSlotsByName().
    \row \li \c{-p, --no-protection}            \li Disable header protection.
    \row \li \c{-n, --no-implicit-includes}     \li Disable generation of #include-directives.
    \row \li \c{--postfix <postfix>}            \li Postfix to add to all generated classnames.
    \row \li \c{--tr, --translate <function>}   \li Use <function> for i18n.
    \row \li \c{--include <include-file>}       \li Add #include <include-file> to <file>.
    \row \li \c{-g, --generator <python|cpp>}   \li Select generator.
    \row \li \c{-c, --connections <pmf|string>} \li Connection syntax.
    \row \li \c{--idbased}                      \li Use id based function for i18n
    \row \li \c{--from-imports}                 \li Python: generate imports relative to '.'
    \row \li \c{--absolute-imports}             \li Python: generate absolute imports
    \row \li \c{--rc-prefix}                    \li Python: Generate "rc_file" instead of "file_rc" import
    \row \li \c{--star-imports}                 \li Python: Use * imports
    \row \li \c{--python-paths <pathlist>}      \li Python paths for --absolute-imports.
    \endtable

    \section1 Usage

    See \l {Using a Designer UI File in Your C++ Application} or
    \l{Using a Designer UI File in Your Qt for Python Application}.
*/
