<test-group xmlns="http://www.w3.org/2005/02/query-test-XQTSCatalog" is-XPath2="false" name="FLWORExprSI">
   <GroupInfo>
      <title>FLWOR Expressions that requires a schema import</title>
      <description/>
   </GroupInfo>
   <test-case is-XPath2="false" name="ForExprType025" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (attribute type). Interleave type integer|decimal -&gt; decimal.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType025" date="2005-09-13">
         <description>FLWOR expressions with type declaration (attribute type). Interleave type integer|decimal -&gt; decimal</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType025.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType026" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (attribute type). Match user defined simple type on attribute.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType026" date="2005-09-13">
         <description>FLWOR expressions with type declaration (attribute type). Match user defined simple type on attribute</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType026.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType027" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (attribute type). Wildcard match on user defined simple type on attribute.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType027" date="2005-09-13">
         <description>FLWOR expressions with type declaration (attribute type). Wildcard match on user defined simple type on attribute</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType027.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType037" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Simple element name test (no type).</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType037" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Simple element name test (no type)</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType037.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType038" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Match complex, user defined type.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType038" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Match complex, user defined type</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType038.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType039" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Wildcard for name on matching complex, user defined type.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType039" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Wildcard for name on matching complex, user defined type</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType039.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType040" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Match user defined simple type on element.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType040" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Match user defined simple type on element</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType040.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType041" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Wildcard match on user defined simple type on element.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType041" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Wildcard match on user defined simple type on element</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType041.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType042" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Interleave value type integer|decimal -&gt; decimal.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType042" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Interleave value type integer|decimal -&gt; decimal</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Fragment">ForExprType042.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType043" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). Union type integer|decimal -&gt; decimal.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType043" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). Union type integer|decimal -&gt; decimal</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType043.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType044" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration (element type). List type.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType044" date="2005-09-13">
         <description>FLWOR expressions with type declaration (element type). List type</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="XML">ForExprType044.xml</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType048" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration. Non-trivial value type promotion: anyAtomicType value type -&gt; anyAtomicType.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType048" date="2005-09-13">
         <description>FLWOR expressions with type declaration. Non-trivial value type promotion: anyAtomicType value type -&gt; anyAtomicType</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType048.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType049" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration. Non-trivial value type promotion: Interleave value type integer|decimal -&gt; decimal.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType049" date="2005-09-13">
         <description>FLWOR expressions with type declaration. Non-trivial value type promotion: Interleave value type integer|decimal -&gt; decimal</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType049.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType050" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration. Non-trivial value type promotion: Union type integer|decimal -&gt; decimal.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType050" date="2005-09-13">
         <description>FLWOR expressions with type declaration. Non-trivial value type promotion: Union type integer|decimal -&gt; decimal</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType050.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType051" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration. Non-trivial value type promotion: List type.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType051" date="2005-09-13">
         <description>FLWOR expressions with type declaration. Non-trivial value type promotion: List type</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType051.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType052" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration. Non-trivial value type promotion: User defined simple type.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType052" date="2005-09-13">
         <description>FLWOR expressions with type declaration. Non-trivial value type promotion: User defined simple type</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType052.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="ForExprType053" FilePath="SchemaImport/FLWORExprSI/" scenario="standard" Creator="Mike Rorke">
      <description>FLWOR expressions with type declaration. Non-trivial value type promotion: User defined simple type on attribute.</description>
      <spec-citation spec="XQuery" section-number="3.8.1" section-title="For and Let Clauses" section-pointer="id-for-let"/>
      <query name="ForExprType053" date="2005-09-13">
         <description>FLWOR expressions with type declaration. Non-trivial value type promotion: User defined simple type on attribute</description>
      </query>
      <input-file role="principal-data" variable="input-context">SpecialTypes</input-file>
      <output-file role="principal" compare="Text">ForExprType053.txt</output-file>
   </test-case>
</test-group>