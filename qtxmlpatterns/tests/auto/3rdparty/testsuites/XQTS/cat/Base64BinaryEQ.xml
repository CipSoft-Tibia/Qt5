<test-group xmlns="http://www.w3.org/2005/02/query-test-XQTSCatalog" name="Base64BinaryEQ" featureOwner="Frans Englich">
   <GroupInfo>
      <title>op:base64Binary-equal</title>
      <description/>
   </GroupInfo>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-1" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(lower bound) $value2 = xs:base64Binary(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-2" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(mid range) $value2 = xs:base64Binary(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-3" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(upper bound) $value2 = xs:base64Binary(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-4" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(lower bound) $value2 = xs:base64Binary(mid range).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-5" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(lower bound) $value2 = xs:base64Binary(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-6" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(lower bound) $value2 = xs:base64Binary(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-6" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-6.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-7" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(mid range) $value2 = xs:base64Binary(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-7" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-7.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-8" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(upper bound) $value2 = xs:base64Binary(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-8" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-8.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-9" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(lower bound) $value2 = xs:base64Binary(mid range).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-9" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-9.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="op-base64Binary-equal2args-10" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "op:base64Binary-equal" operator with the arguments set as follows: $value1 = xs:base64Binary(lower bound) $value2 = xs:base64Binary(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="op-base64Binary-equal2args-10" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">op-base64Binary-equal2args-10.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-1" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "and" operator. Uses the "eq" operator.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-1" date="2005-09-02"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-2" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "or" operator. Uses the "eq" operator.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-2" date="2005-09-02"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-3" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates and operation using "xs:base64Binary" values as argument to an "fn:not" function. Uses "eq" operator.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-3" date="2005-09-02"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-4" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "and" operator. Uses the "eq" operator and "fn:true()".</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-4" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64binaryequal-5" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "and" operator. Uses the "eq" operator and "fn:false()".</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64binaryequal-5" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-6" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "or" operator. Uses the "eq" operator and "fn:true" function.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-6" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-6.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-7" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "or" operator. Uses the "eq" operator and "fn:false" function.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-7" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-7.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-8" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "and" operator. Uses the "ne" operator.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-8" date="2005-09-02"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-8.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-9" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "or" operator. Uses the "ne" operator.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-9" date="2005-09-02"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-9.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-10" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates an operation on "xs:base64Binary" values as argument to an "fn:not" function. Uses "ne" operator.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-10" date="2005-09-02"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-10.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-11" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "and" operator. Uses the "ne" operator and "fn:true()".</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-11" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-11.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-12" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "and" operator. Uses the "ne" operator and "fn:false()".</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-12" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-12.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-13" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "or" operator. Uses the "ne" operator and "fn:true" function.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-13" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-13.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="base64BinaryEqual-14" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates "xs:base64Binary" values in conjunction with a logical expression, "or" operator. Uses the "ne" operator and "fn:false" function.</description>
      <spec-citation spec="FuncOps" section-number="12.1.2" section-title="op:base64Binary-equal" section-pointer="func-base64Binary-equal"/>
      <query name="base64BinaryEqual-14" date="2005-09-06"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">base64BinaryEqual-14.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-Base64BinaryEQ-1" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard">
      <description>A test whose essence is: `xs:base64Binary(xs:hexBinary("03")) eq xs:base64Binary(xs:hexBinary("03"))`.</description>
      <query name="K-Base64BinaryEQ-1" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-Base64BinaryEQ-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-Base64BinaryEQ-2" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard">
      <description>A test whose essence is: `xs:base64Binary(xs:hexBinary("03")) ne xs:base64Binary(xs:hexBinary("13"))`.</description>
      <query name="K-Base64BinaryEQ-2" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-Base64BinaryEQ-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-Base64BinaryEQ-3" FilePath="Expressions/Operators/CompExpr/ValComp/BinaryOp/Base64BinaryEQ/" scenario="standard">
      <description>A test whose essence is: `xs:hexBinary(xs:base64Binary("/w==")) eq xs:hexBinary("FF")`.</description>
      <query name="K-Base64BinaryEQ-3" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-Base64BinaryEQ-3.txt</output-file>
   </test-case>
</test-group>