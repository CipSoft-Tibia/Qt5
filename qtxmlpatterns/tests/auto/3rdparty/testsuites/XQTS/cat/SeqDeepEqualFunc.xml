<test-group xmlns="http://www.w3.org/2005/02/query-test-XQTSCatalog" name="SeqDeepEqualFunc" featureOwner="Frans Englich">
   <GroupInfo>
      <title>fn:deep-equal</title>
      <description/>
   </GroupInfo>
   <test-case is-XPath2="true" name="fn-deep-equalint2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:int(lower bound) $parameter2 = xs:int(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalint2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalint2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalint2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:int(mid range) $parameter2 = xs:int(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalint2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalint2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalint2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:int(upper bound) $parameter2 = xs:int(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalint2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalint2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalint2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:int(lower bound) $parameter2 = xs:int(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalint2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalint2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalint2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:int(lower bound) $parameter2 = xs:int(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalint2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalint2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalintg2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:integer(lower bound) $parameter2 = xs:integer(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalintg2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalintg2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalintg2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:integer(mid range) $parameter2 = xs:integer(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalintg2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalintg2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalintg2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:integer(upper bound) $parameter2 = xs:integer(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalintg2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalintg2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalintg2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:integer(lower bound) $parameter2 = xs:integer(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalintg2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalintg2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalintg2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:integer(lower bound) $parameter2 = xs:integer(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalintg2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalintg2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldec2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:decimal(lower bound) $parameter2 = xs:decimal(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldec2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldec2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldec2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:decimal(mid range) $parameter2 = xs:decimal(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldec2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldec2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldec2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:decimal(upper bound) $parameter2 = xs:decimal(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldec2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldec2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldec2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:decimal(lower bound) $parameter2 = xs:decimal(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldec2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldec2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldec2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:decimal(lower bound) $parameter2 = xs:decimal(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldec2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldec2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldbl2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:double(lower bound) $parameter2 = xs:double(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldbl2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldbl2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldbl2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:double(mid range) $parameter2 = xs:double(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldbl2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldbl2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldbl2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:double(upper bound) $parameter2 = xs:double(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldbl2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldbl2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldbl2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:double(lower bound) $parameter2 = xs:double(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldbl2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldbl2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equaldbl2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:double(lower bound) $parameter2 = xs:double(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equaldbl2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equaldbl2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalflt2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:float(lower bound) $parameter2 = xs:float(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalflt2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalflt2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalflt2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:float(mid range) $parameter2 = xs:float(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalflt2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalflt2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalflt2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:float(upper bound) $parameter2 = xs:float(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalflt2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalflt2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalflt2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:float(lower bound) $parameter2 = xs:float(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalflt2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalflt2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalflt2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:float(lower bound) $parameter2 = xs:float(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalflt2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalflt2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equallng2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:long(lower bound) $parameter2 = xs:long(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equallng2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equallng2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equallng2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:long(mid range) $parameter2 = xs:long(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equallng2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equallng2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equallng2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:long(upper bound) $parameter2 = xs:long(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equallng2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equallng2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equallng2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:long(lower bound) $parameter2 = xs:long(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equallng2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equallng2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equallng2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:long(lower bound) $parameter2 = xs:long(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equallng2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equallng2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalusht2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedShort(lower bound) $parameter2 = xs:unsignedShort(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalusht2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalusht2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalusht2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedShort(mid range) $parameter2 = xs:unsignedShort(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalusht2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalusht2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalusht2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedShort(upper bound) $parameter2 = xs:unsignedShort(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalusht2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalusht2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalusht2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedShort(lower bound) $parameter2 = xs:unsignedShort(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalusht2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalusht2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalusht2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedShort(lower bound) $parameter2 = xs:unsignedShort(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalusht2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalusht2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnint2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:negativeInteger(lower bound) $parameter2 = xs:negativeInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnint2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnint2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnint2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:negativeInteger(mid range) $parameter2 = xs:negativeInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnint2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnint2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnint2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:negativeInteger(upper bound) $parameter2 = xs:negativeInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnint2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnint2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnint2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:negativeInteger(lower bound) $parameter2 = xs:negativeInteger(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnint2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnint2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnint2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:negativeInteger(lower bound) $parameter2 = xs:negativeInteger(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnint2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnint2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalpint2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:positiveInteger(lower bound) $parameter2 = xs:positiveInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalpint2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalpint2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalpint2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:positiveInteger(mid range) $parameter2 = xs:positiveInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalpint2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalpint2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalpint2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:positiveInteger(upper bound) $parameter2 = xs:positiveInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalpint2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalpint2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalpint2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:positiveInteger(lower bound) $parameter2 = xs:positiveInteger(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalpint2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalpint2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalpint2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:positiveInteger(lower bound) $parameter2 = xs:positiveInteger(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalpint2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalpint2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalulng2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedLong(lower bound) $parameter2 = xs:unsignedLong(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalulng2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalulng2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalulng2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedLong(mid range) $parameter2 = xs:unsignedLong(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalulng2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalulng2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalulng2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedLong(upper bound) $parameter2 = xs:unsignedLong(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalulng2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalulng2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalulng2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedLong(lower bound) $parameter2 = xs:unsignedLong(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalulng2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalulng2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalulng2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:unsignedLong(lower bound) $parameter2 = xs:unsignedLong(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalulng2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalulng2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnpi2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonPositiveInteger(lower bound) $parameter2 = xs:nonPositiveInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnpi2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnpi2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnpi2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonPositiveInteger(mid range) $parameter2 = xs:nonPositiveInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnpi2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnpi2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnpi2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonPositiveInteger(upper bound) $parameter2 = xs:nonPositiveInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnpi2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnpi2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnpi2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonPositiveInteger(lower bound) $parameter2 = xs:nonPositiveInteger(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnpi2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnpi2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnpi2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonPositiveInteger(lower bound) $parameter2 = xs:nonPositiveInteger(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnpi2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnpi2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnni2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonNegativeInteger(lower bound) $parameter2 = xs:nonNegativeInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnni2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnni2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnni2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonNegativeInteger(mid range) $parameter2 = xs:nonNegativeInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnni2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnni2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnni2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonNegativeInteger(upper bound) $parameter2 = xs:nonNegativeInteger(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnni2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnni2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnni2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonNegativeInteger(lower bound) $parameter2 = xs:nonNegativeInteger(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnni2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnni2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalnni2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:nonNegativeInteger(lower bound) $parameter2 = xs:nonNegativeInteger(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalnni2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalnni2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalsht2args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:short(lower bound) $parameter2 = xs:short(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalsht2args-1" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalsht2args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalsht2args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:short(mid range) $parameter2 = xs:short(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalsht2args-2" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalsht2args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalsht2args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:short(upper bound) $parameter2 = xs:short(lower bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalsht2args-3" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalsht2args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalsht2args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:short(lower bound) $parameter2 = xs:short(mid range).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalsht2args-4" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalsht2args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equalsht2args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Carmelo Montanez">
      <description>Evaluates the "deep-equal" function with the arguments set as follows: $parameter1 = xs:short(lower bound) $parameter2 = xs:short(upper bound).</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equalsht2args-5" date="2004-12-13"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equalsht2args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-001" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>The order of elements in sequence is important.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-001" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-001.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-002" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Two sequences are deep-equal if items have same value and same order.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-002" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-002.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-003" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arguments of type string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-003" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-003.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-004" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Arg of type string, but case is different.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-004" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-004.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-005" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Arg1: string, arg2: sequence with 1 element of type string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-005" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-005.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-006" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing null strings.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-006" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-006.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-007" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing null sequences.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-007" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-007.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-008" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing nested null and a null sequence.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-008" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-008.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-009" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1: sequence with a space with agr2: empty sequence.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-009" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-009.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-010" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing strings with different value.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-010" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-010.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-011" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1: anyURI, arg2: string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-011" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-011.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-012" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:anyURI and arg2:string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-012" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-012.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-013" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:integer and arg2:decimal.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-013" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-013.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-014" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comapring integer args with different values.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-014" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-014.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-015" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:integer and arg2:float.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-015" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-015.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-016" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:integer, arg2:double.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-016" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-016.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-017" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:decimal , arg2:float.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-017" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-017.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-018" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:decimal, arg2:double.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-018" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-018.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-019" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:float , arg2:double.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-019" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-019.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-020" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:float, arg2:double values INF.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-020" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-020.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-021" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:float, arg2:double values -INF.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-021" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-021.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-022" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:float, arg2:double values NaN.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-022" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-022.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-023" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing two boolean args.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-023" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-023.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-024" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing two boolean args.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-024" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-024.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-025" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:boolean arg2:value returned by true fn.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-025" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-025.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-026" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing two boolean args.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-026" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-026.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-027" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:boolean arg2:value of false fn.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-027" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-027.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-028" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:date, arg2: string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-028" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-028.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-029" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:date, arg2: string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-029" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-029.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-030" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:dateTime, arg2: string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-030" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-030.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-deep-equal-mix-args-031" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Pulkita Tyagi">
      <description>Comparing arg1:time, arg2: string.</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-mix-args-031" date="2005-05-24"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-mix-args-031.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-deep-equal-node-args-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Andrew Eisenberg">
      <description>Apply deep-equal to nodes</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-node-args-1" date="2006-09-25"/>
      <input-file role="principal-data" variable="input-context">bib</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-node-args-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-deep-equal-node-args-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Andrew Eisenberg">
      <description>Apply deep-equal to nodes</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-node-args-2" date="2006-09-25"/>
      <input-file role="principal-data" variable="input-context">bib</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-node-args-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-deep-equal-node-args-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Andrew Eisenberg">
      <description>Apply deep-equal to nodes</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-node-args-3" date="2006-09-25"/>
      <input-file role="principal-data" variable="input-context">bib</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-node-args-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-deep-equal-node-args-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Andrew Eisenberg">
      <description>Apply deep-equal to nodes</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-node-args-4" date="2006-09-25"/>
      <input-file role="principal-data" variable="input-context">bib</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-node-args-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-deep-equal-node-args-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard" Creator="Andrew Eisenberg">
      <description>Apply deep-equal to nodes</description>
      <spec-citation spec="FuncOps" section-number="15.3.1" section-title="fn:deep-equal" section-pointer="func-deep-equal"/>
      <query name="fn-deep-equal-node-args-5" date="2006-09-25"/>
      <input-file role="principal-data" variable="input-context">bib</input-file>
      <output-file role="principal" compare="Text">fn-deep-equal-node-args-5.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>A test whose essence is: `deep-equal()`.</description>
      <query name="K-SeqDeepEqualFunc-1" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>A test whose essence is: `deep-equal("a string")`.</description>
      <query name="K-SeqDeepEqualFunc-2" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>A test whose essence is: `deep-equal("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint", "wrong param")`.</description>
      <query name="K-SeqDeepEqualFunc-3" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>A test whose essence is: `deep-equal("a string", "a string", "http://www.example.com/COLLATION/NOT/SUPPORTED")`.</description>
      <query name="K-SeqDeepEqualFunc-4" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>FOCH0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>A test whose essence is: `deep-equal("a string", "a string", ())`.</description>
      <query name="K-SeqDeepEqualFunc-5" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0004</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-6" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal("a string", "a string", "http://www.w3.org/2005/xpath-functions/collation/codepoint")`.</description>
      <query name="K-SeqDeepEqualFunc-6" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-6.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-7" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((), ()) eq true()`.</description>
      <query name="K-SeqDeepEqualFunc-7" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-7.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-8" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(xs:float("NaN"), xs:float("NaN"))`.</description>
      <query name="K-SeqDeepEqualFunc-8" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-8.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-9" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(xs:double("NaN"), xs:double("NaN"))`.</description>
      <query name="K-SeqDeepEqualFunc-9" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-9.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-10" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(xs:float("NaN"), xs:double("NaN"))`.</description>
      <query name="K-SeqDeepEqualFunc-10" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-10.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-11" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(xs:double("NaN"), xs:float("NaN"))`.</description>
      <query name="K-SeqDeepEqualFunc-11" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-11.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-12" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(xs:float("NaN"), xs:float(0)))`.</description>
      <query name="K-SeqDeepEqualFunc-12" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-12.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-13" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(xs:float(0), xs:float("NaN")))`.</description>
      <query name="K-SeqDeepEqualFunc-13" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-13.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-14" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(xs:double(0), xs:double("NaN")))`.</description>
      <query name="K-SeqDeepEqualFunc-14" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-14.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-15" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(xs:double("NaN"), xs:double(0)))`.</description>
      <query name="K-SeqDeepEqualFunc-15" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-15.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-16" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(xs:decimal("1"), xs:anyURI("example.com")))`.</description>
      <query name="K-SeqDeepEqualFunc-16" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-16.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-17" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(QName("example.com", "ncname"), 3e2))`.</description>
      <query name="K-SeqDeepEqualFunc-17" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-17.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-18" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 2, xs:anyURI("example.com")), (1, 2, 3)))`.</description>
      <query name="K-SeqDeepEqualFunc-18" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-18.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-19" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, xs:decimal("2.2"), 3), (1, 2, 3)))`.</description>
      <query name="K-SeqDeepEqualFunc-19" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-19.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-20" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((true(), 2, 3), (1, 2, 3)))`.</description>
      <query name="K-SeqDeepEqualFunc-20" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-20.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-21" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 2, 3), (1, 2, QName("example.com", "ncname"))))`.</description>
      <query name="K-SeqDeepEqualFunc-21" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-21.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-22" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 2, 3), (1, xs:hexBinary("FF"), 3)))`.</description>
      <query name="K-SeqDeepEqualFunc-22" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-22.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-23" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 2, 3), (xs:base64Binary("FFFF"), 2, 3)))`.</description>
      <query name="K-SeqDeepEqualFunc-23" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-23.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-24" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((1, 2, xs:base64Binary("FFFF")), (1, 2, xs:base64Binary("FFFF")))`.</description>
      <query name="K-SeqDeepEqualFunc-24" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-24.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-25" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((1, 1, 1), (1, 1, 1))`.</description>
      <query name="K-SeqDeepEqualFunc-25" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-25.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-26" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 3), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-26" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-26.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-27" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 3, 1), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-27" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-27.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-28" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((3, 1, 1), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-28" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-28.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-29" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), (3, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-29" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-29.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-30" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), (1, 3, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-30" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-30.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-31" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), (1, 1, 3)))`.</description>
      <query name="K-SeqDeepEqualFunc-31" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-31.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-32" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(index-of(20, 20), (1))`.</description>
      <query name="K-SeqDeepEqualFunc-32" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-32.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-33" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(index-of((20, 40), 20), (1))`.</description>
      <query name="K-SeqDeepEqualFunc-33" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-33.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-34" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(index-of((20, 20), 20), (1, 2))`.</description>
      <query name="K-SeqDeepEqualFunc-34" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-34.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-35" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(index-of((20, 40, 20), 20), (1, 3))`.</description>
      <query name="K-SeqDeepEqualFunc-35" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-35.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-36" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((1, 1, "str"), (1, 1, "str"))`.</description>
      <query name="K-SeqDeepEqualFunc-36" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-36.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-37" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((1, "str", 1), (1, "str", 1))`.</description>
      <query name="K-SeqDeepEqualFunc-37" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-37.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-38" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(("str", 1, 1), ("str", 1, 1))`.</description>
      <query name="K-SeqDeepEqualFunc-38" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-38.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-39" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((1, 1, ()), (1, 1, ()))`.</description>
      <query name="K-SeqDeepEqualFunc-39" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-39.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-40" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((1, (), 1), (1, (), 1))`.</description>
      <query name="K-SeqDeepEqualFunc-40" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-40.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-41" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(((), 1, 1), ((), 1, 1))`.</description>
      <query name="K-SeqDeepEqualFunc-41" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-41.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-42" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, ()), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-42" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-42.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-43" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, (), 1), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-43" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-43.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-44" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal(((), 1, 1), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-44" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-44.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-45" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), (1, 1, ())))`.</description>
      <query name="K-SeqDeepEqualFunc-45" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-45.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-46" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), (1, (), 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-46" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-46.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-47" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), ((), 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-47" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-47.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-48" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-48" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-48.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-49" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), (1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-49" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-49.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-50" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((), (1, 1, 1)))`.</description>
      <query name="K-SeqDeepEqualFunc-50" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-50.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-51" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `not(deep-equal((1, 1, 1), ()))`.</description>
      <query name="K-SeqDeepEqualFunc-51" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-51.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-52" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((), reverse(0 to -5))`.</description>
      <query name="K-SeqDeepEqualFunc-52" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-52.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-53" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal((), 0 to -5)`.</description>
      <query name="K-SeqDeepEqualFunc-53" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-53.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-54" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(reverse(0 to -5), ())`.</description>
      <query name="K-SeqDeepEqualFunc-54" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-54.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K-SeqDeepEqualFunc-55" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A test whose essence is: `deep-equal(0 to -5, ())`.</description>
      <query name="K-SeqDeepEqualFunc-55" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K-SeqDeepEqualFunc-55.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-SeqDeepEqualFunc-1" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Two date/time values that never will compare equal.</description>
      <query name="K2-SeqDeepEqualFunc-1" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-1.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-2" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A date and node value that never will compare equal.</description>
      <query name="K2-SeqDeepEqualFunc-2" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-2.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-3" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>A date and node value that never will compare equal(#2).</description>
      <query name="K2-SeqDeepEqualFunc-3" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-SeqDeepEqualFunc-4" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Time values that never will compare equal.</description>
      <query name="K2-SeqDeepEqualFunc-4" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-4.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-5" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Comparing mixed content.</description>
      <query name="K2-SeqDeepEqualFunc-5" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-5.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-6" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Comparing mixed content(#2).</description>
      <query name="K2-SeqDeepEqualFunc-6" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-6.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-7" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Comparing mixed content(#3).</description>
      <query name="K2-SeqDeepEqualFunc-7" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-7.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-SeqDeepEqualFunc-8" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>fn:deep-equal() takes two arguments, not zero.</description>
      <query name="K2-SeqDeepEqualFunc-8" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-SeqDeepEqualFunc-9" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="runtime-error">
      <description>fn:deep-equal() takes two arguments, not one.</description>
      <query name="K2-SeqDeepEqualFunc-9" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-10" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>fn:deep-equal() with two sequence of nodes.</description>
      <query name="K2-SeqDeepEqualFunc-10" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-10.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-11" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>fn:deep-equal() with two sequence of nodes(#2).</description>
      <query name="K2-SeqDeepEqualFunc-11" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-11.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-12" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>fn:deep-equal() with two sequence of nodes(#3).</description>
      <query name="K2-SeqDeepEqualFunc-12" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-12.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-13" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>fn:deep-equal() with two sequence of nodes(#4).</description>
      <query name="K2-SeqDeepEqualFunc-13" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-13.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-14" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Ensure processing instructions are ignored if children of a document node.</description>
      <query name="K2-SeqDeepEqualFunc-14" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-14.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-15" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Ensure processing instructions are ignored if children of a document node(#2).</description>
      <query name="K2-SeqDeepEqualFunc-15" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-15.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-16" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Ensure processing instructions are ignored if children of a document node.</description>
      <query name="K2-SeqDeepEqualFunc-16" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-16.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-17" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Ensure processing instructions are ignored if children of a document node(#2).</description>
      <query name="K2-SeqDeepEqualFunc-17" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-17.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-18" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>fn:deep-equal() with mixed content.</description>
      <query name="K2-SeqDeepEqualFunc-18" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-18.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-19" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>fn:deep-equal() with mixed content(#2).</description>
      <query name="K2-SeqDeepEqualFunc-19" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-19.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-20" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>One of the operands has two text nodes, and hence it evaluate to false.</description>
      <query name="K2-SeqDeepEqualFunc-20" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-20.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-21" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Processing instructions inside elements are ignored.</description>
      <query name="K2-SeqDeepEqualFunc-21" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-21.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-22" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>One of the operands has two text nodes besides the comment, and hence it evaluate to false.</description>
      <query name="K2-SeqDeepEqualFunc-22" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-22.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-23" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Comments inside elements are ignored.</description>
      <query name="K2-SeqDeepEqualFunc-23" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-23.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-24" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Compare attribute nodes.</description>
      <query name="K2-SeqDeepEqualFunc-24" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-24.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-25" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Compare attribute nodes in a weird order.</description>
      <query name="K2-SeqDeepEqualFunc-25" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-25.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-26" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Compare operands with attributes nodes of different size.</description>
      <query name="K2-SeqDeepEqualFunc-26" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-26.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-27" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Compare operands with attributes nodes of different size(#2).</description>
      <query name="K2-SeqDeepEqualFunc-27" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-27.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-28" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Test deep-equalness of two attribute nodes.</description>
      <query name="K2-SeqDeepEqualFunc-28" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-28.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-29" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Test deep-equalness of two attribute nodes.</description>
      <query name="K2-SeqDeepEqualFunc-29" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-29.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-30" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Test deep-equalness of two attribute nodes that has the same name, but different string values.</description>
      <query name="K2-SeqDeepEqualFunc-30" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-30.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-31" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Test deep-equalness of two attribute nodes that has same text content but different names.</description>
      <query name="K2-SeqDeepEqualFunc-31" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-31.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqDeepEqualFunc-32" FilePath="Functions/SeqFunc/SeqDeepEqualFunc/" scenario="standard">
      <description>Test deep-equalness of two attribute nodes that has identical text content but different names.</description>
      <query name="K2-SeqDeepEqualFunc-32" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqDeepEqualFunc-32.txt</output-file>
   </test-case>
</test-group>