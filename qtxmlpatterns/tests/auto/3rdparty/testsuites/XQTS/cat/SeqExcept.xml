<test-group xmlns="http://www.w3.org/2005/02/query-test-XQTSCatalog" name="SeqExcept" featureOwner="Frans Englich">
   <GroupInfo>
      <title>op:except</title>
      <description/>
   </GroupInfo>
   <test-case is-XPath2="true" name="fn-except-node-args-001" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-001" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-001.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-002" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: incorrect nodes.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-002" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-002.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-003" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-003" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="XML">fn-except-node-args-003.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-004" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: text node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-004" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-004.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-005" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: processing-instruction node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-005" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-005.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-006" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: processing-instruction node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-006" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-006.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-007" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: comment node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-007" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-007.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-008" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: text node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-008" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-008.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-009" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: processing-instruction node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-009" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-009.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-010" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: processing-instruction node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-010" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-010.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-011" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: comment node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-011" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-011.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-012" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and non existing node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-012" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-012.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-013" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and empty sequence.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-013" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-013.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-014" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: empty sequence and empty sequence.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-014" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-014.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-015" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-015" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">atomic</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-015.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-016" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-016" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context1">atomic</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-016.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-017" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-017" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">atomic</input-file>
      <output-file role="principal" compare="XML">fn-except-node-args-017.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-018" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: text node and text node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-018" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">atomic</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-018.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-019" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: text node and text node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-019" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">atomic</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-019.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-020" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: text node and text node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-020" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">atomic</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-020.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-021" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: text node and text node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-021" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">atomic</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-021.txt</output-file>
   </test-case>
   <test-case is-XPath2="false" name="fn-except-node-args-022" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-022" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Fragment">fn-except-node-args-022.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="fn-except-node-args-023" FilePath="Expressions/Operators/SeqOp/SeqExcept/" scenario="standard" Creator="Ravindranath Chennoju">
      <description>Arg: node and node.</description>
      <spec-citation spec="FuncOps" section-number="15.3.4" section-title="op:except" section-pointer="func-except"/>
      <query name="fn-except-node-args-023" date="2005-06-14"/>
      <input-file role="principal-data" variable="input-context">bib2</input-file>
      <output-file role="principal" compare="Text">fn-except-node-args-023.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-SeqExcept-1" FilePath="Operators/SeqOp/SeqExcept/" scenario="runtime-error">
      <description>Only nodes are allowed.</description>
      <query name="K2-SeqExcept-1" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0004</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-2" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, text, to test query parsing.</description>
      <query name="K2-SeqExcept-2" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-2.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-3" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, node, to test query parsing.</description>
      <query name="K2-SeqExcept-3" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-3.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-4" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, element, to test query parsing.</description>
      <query name="K2-SeqExcept-4" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-4.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-5" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, attribute, to test query parsing.</description>
      <query name="K2-SeqExcept-5" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-5.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-6" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, document-node, to test query parsing.</description>
      <query name="K2-SeqExcept-6" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-6.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-7" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, comment, to test query parsing.</description>
      <query name="K2-SeqExcept-7" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-7.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-8" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, processing-instruction, to test query parsing.</description>
      <query name="K2-SeqExcept-8" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-8.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-9" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, item, to test query parsing.</description>
      <query name="K2-SeqExcept-9" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-9.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-10" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, document, to test query parsing.</description>
      <query name="K2-SeqExcept-10" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-10.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-11" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, if, to test query parsing.</description>
      <query name="K2-SeqExcept-11" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-11.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-12" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, then, to test query parsing.</description>
      <query name="K2-SeqExcept-12" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-12.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-13" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, mod, to test query parsing.</description>
      <query name="K2-SeqExcept-13" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-13.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-14" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, div, to test query parsing.</description>
      <query name="K2-SeqExcept-14" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-14.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-15" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, empty-sequence, to test query parsing.</description>
      <query name="K2-SeqExcept-15" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-15.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-16" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, schema-attribute, to test query parsing.</description>
      <query name="K2-SeqExcept-16" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-16.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-17" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a node kind keyword, schema-element, to test query parsing.</description>
      <query name="K2-SeqExcept-17" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-17.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-18" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand.</description>
      <query name="K2-SeqExcept-18" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-18.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-19" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand(#2).</description>
      <query name="K2-SeqExcept-19" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-19.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-20" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand.</description>
      <query name="K2-SeqExcept-20" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-20.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-21" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand(#2).</description>
      <query name="K2-SeqExcept-21" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-21.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-22" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand.</description>
      <query name="K2-SeqExcept-22" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-22.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-23" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand.</description>
      <query name="K2-SeqExcept-23" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-23.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-24" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand.</description>
      <query name="K2-SeqExcept-24" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-24.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-25" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a computed attribute constructor as right operand.</description>
      <query name="K2-SeqExcept-25" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-25.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-26" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the descendant axis as right operand.</description>
      <query name="K2-SeqExcept-26" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-26.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-27" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the attribute axis as right operand.</description>
      <query name="K2-SeqExcept-27" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-27.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-28" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the self axis as right operand.</description>
      <query name="K2-SeqExcept-28" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-28.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-29" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the descendant-or-self axis as right operand.</description>
      <query name="K2-SeqExcept-29" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-29.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-30" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the following-sibling axis as right operand.</description>
      <query name="K2-SeqExcept-30" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-30.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-31" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the following axis as right operand.</description>
      <query name="K2-SeqExcept-31" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-31.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-32" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the preceding-sibling axis as right operand.</description>
      <query name="K2-SeqExcept-32" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-32.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-33" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the preceding axis as right operand.</description>
      <query name="K2-SeqExcept-33" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-33.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-34" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the parent axis as right operand.</description>
      <query name="K2-SeqExcept-34" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-34.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-35" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the ancestor axis as right operand.</description>
      <query name="K2-SeqExcept-35" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-35.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-36" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the ancestor axis as right operand.</description>
      <query name="K2-SeqExcept-36" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-36.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-37" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use a name test that is the ancestor-or-self axis as right operand.</description>
      <query name="K2-SeqExcept-37" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-37.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-38" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Use 'declare as right operand.</description>
      <query name="K2-SeqExcept-38" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-38.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-SeqExcept-39" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Extract the boolean value from an except expression.</description>
      <query name="K2-SeqExcept-39" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context1">acme_corp</input-file>
      <output-file role="principal" compare="Text">K2-SeqExcept-39.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-40" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Explicitly sort the result of an except expression.</description>
      <query name="K2-SeqExcept-40" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context1">acme_corp</input-file>
      <output-file role="principal" compare="XML">K2-SeqExcept-40.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-41" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Compare two nodes from different trees.</description>
      <query name="K2-SeqExcept-41" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-SeqExcept-41.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-SeqExcept-42" FilePath="Operators/SeqOp/SeqExcept/" scenario="standard">
      <description>Ensure node deduplication is done.</description>
      <query name="K2-SeqExcept-42" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-SeqExcept-42.txt</output-file>
   </test-case>
</test-group>