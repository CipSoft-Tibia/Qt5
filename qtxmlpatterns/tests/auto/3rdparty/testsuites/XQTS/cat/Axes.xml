<test-group xmlns="http://www.w3.org/2005/02/query-test-XQTSCatalog" name="Axes" featureOwner="Frans Englich">
   <GroupInfo>
      <title>Axes</title>
      <description>Tests in this group focus on the axes named in XQuery 3.2.1.1 and the / and // step operators of 3.2.1. Abbreviated versions (@ vs. attribute::) are included. NodeTests are typically *, node(), or a name.</description>
   </GroupInfo>
   <test-case is-XPath2="true" name="Axes001-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children for child::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes001" date="2003-02-25">
         <description>Path 'child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes001-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes001-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 child for child::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes001" date="2003-02-25">
         <description>Path 'child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes001-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes001-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for child::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes001" date="2003-02-25">
         <description>Path 'child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes001-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes002-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children, child::name gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes002" date="2003-02-25">
         <description>Path 'child::' with element name from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes002-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes002-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>child::name gets none, none of that name exist.</description>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <query name="Axes002" date="2003-02-25">
         <description>Path 'child::' with element name from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes002-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes002-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>child::name gets 1 child.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes002" date="2003-02-25">
         <description>Path 'child::' with element name from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes002-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes002-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for child::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes002" date="2003-02-25">
         <description>Path 'child::' with element name from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes002-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes003-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children of any kind, child::node() gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes003" date="2003-02-25">
         <description>Path 'child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes003-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes003-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>child::node() gets 1 text node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes003" date="2003-02-25">
         <description>Path 'child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes003-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes003-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>child::node() gets 1 child element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes003" date="2003-02-25">
         <description>Path 'child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes003-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes003-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several nodes for child::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes003" date="2003-02-25">
         <description>Path 'child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes003-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes004-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children for *.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes004" date="2003-02-25">
         <description>Test implied child axis in '*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes004-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes004-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 child for *.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes004" date="2003-02-25">
         <description>Test implied child axis in '*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes004-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes004-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for *.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes004" date="2003-02-25">
         <description>Test implied child axis in '*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes004-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes005-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children, implied child with name gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes005" date="2003-02-25">
         <description>Test implied child axis with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes005-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes005-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Implied child with name gets none, none of that name exist.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes005" date="2003-02-25">
         <description>Test implied child axis with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes005-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes005-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Implied child with name gets 1 child.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes005" date="2003-02-25">
         <description>Test implied child axis with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes005-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes005-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for implied child with name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes005" date="2003-02-25">
         <description>Test implied child axis with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes005-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes006-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children, implied child with node() gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes006" date="2003-02-25">
         <description>Test implied child axis in 'node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes006-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes006-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Implied child with node() gets 1 text node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes006" date="2003-02-25">
         <description>Test implied child axis in 'node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes006-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes006-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Implied child with node() gets 1 child element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes006" date="2003-02-25">
         <description>Test implied child axis in 'node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes006-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes006-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several nodes for implied child with node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes006" date="2003-02-25">
         <description>Test implied child axis in 'node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes006-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes007-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for attribute::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes007" date="2003-02-25">
         <description>Path 'attribute::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes007-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes007-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for attribute::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes007" date="2003-02-25">
         <description>Path 'attribute::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes007-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes007-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for attribute::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes007" date="2003-02-25">
         <description>Path 'attribute::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes007-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes008-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes, attribute::name gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes008" date="2003-02-25">
         <description>Path 'attribute::' with name of attribute, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes008-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes008-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attribute satisfies attribute::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes008" date="2003-02-25">
         <description>Path 'attribute::' with name of attribute, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes008-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes008-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for attribute::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes008" date="2003-02-25">
         <description>Path 'attribute::' with name of attribute, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes008-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes009-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for attribute::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes009" date="2003-02-25">
         <description>Path 'attribute::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes009-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes009-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for attribute::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes009" date="2003-02-25">
         <description>Path 'attribute::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes009-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes009-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for attribute::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes009" date="2003-02-25">
         <description>Path 'attribute::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes009-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes010-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for @*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes010" date="2003-02-25">
         <description>Path '@*' (abbreviated syntax) from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes010-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes010-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for @*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes010" date="2003-02-25">
         <description>Path '@*' (abbreviated syntax) from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes010-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes010-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for @*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes010" date="2003-02-25">
         <description>Path '@*' (abbreviated syntax) from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes010-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes011-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes, @name gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes011" date="2003-02-25">
         <description>Path '@' with name of attribute, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes011-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes011-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attribute satisfies @name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes011" date="2003-02-25">
         <description>Path '@' with name of attribute, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes011-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes011-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for @name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes011" date="2003-02-25">
         <description>Path '@' with name of attribute, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes011-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes012-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="parse-error" Creator="David Marston">
      <description>Get root node from / alone.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes012" date="2003-02-25"/>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" name="Axes013-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from parent::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes013" date="2003-02-25">
         <description>Path 'parent::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes013-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes014-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get no nodes from parent::* at top of tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes014" date="2003-02-25">
         <description>Path 'parent::*' from document element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes014-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes015-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from parent::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes015" date="2003-02-25">
         <description>Path 'parent::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes015-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes016-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get no nodes from parent::name when name is not parent's name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes016" date="2003-02-25">
         <description>Path 'parent::' with specified element name that is not found, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes016-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes017-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from parent::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes017" date="2003-02-25">
         <description>Path 'parent::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes017-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes018-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get root node from parent::node() at top of tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes018" date="2003-02-25">
         <description>Path 'parent::node()' from document element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes018-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes019-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes019" date="2003-02-25">
         <description>Test abbreviated '..' syntax from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes019-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes020-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from self::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes020" date="2003-02-25">
         <description>Path 'self::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes020-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes021-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from self::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes021" date="2003-02-25">
         <description>Path 'self::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes021-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes023-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 element from self::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes023" date="2003-02-25">
         <description>Path 'self::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes023-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes027-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 attribute from self::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes027" date="2003-02-25">
         <description>Path 'self::node()' axis from an attribute.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes027-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes030-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>text()/self::node() gets no nodes when no such text node exists.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes030" date="2003-02-25">
         <description>Path 'self::node()' from a text node.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes030-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes030-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Get 1 text node from self::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes030" date="2003-02-25">
         <description>Path 'self::node()' from a text node.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes030-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes031-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No subtree, descendant::* gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes031" date="2003-02-25">
         <description>Path 'descendant::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes031-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes031-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant::* gets none when there are no element children.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes031" date="2003-02-25">
         <description>Path 'descendant::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes031-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes031-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant::* gets the 1 child.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes031" date="2003-02-25">
         <description>Path 'descendant::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes031-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes031-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several descendant elements found by descendant::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes031" date="2003-02-25">
         <description>Path 'descendant::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes031-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes032-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No subtree, descendant::name gets nothing.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes032" date="2003-02-25">
         <description>Path 'descendant::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes032-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes032-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant::name gets none when no elements have that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes032" date="2003-02-25">
         <description>Path 'descendant::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes032-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes032-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant::name gets the 1 child.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes032" date="2003-02-25">
         <description>Path 'descendant::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes032-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes032-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for descendant::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes032" date="2003-02-25">
         <description>Path 'descendant::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes032-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes033-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No subtree, descendant::node() gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes033" date="2003-02-25">
         <description>Path 'descendant::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes033-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes033-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant::node() gets 1 text child.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes033" date="2003-02-25">
         <description>Path 'descendant::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes033-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes033-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant::node() gets 1 element child.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes033" date="2003-02-25">
         <description>Path 'descendant::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes033-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes033-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several descendant elements found by descendant::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes033" date="2003-02-25">
         <description>Path 'descendant::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes033-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes034-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::* from an element gets 1 element (self).</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes034" date="2003-02-25">
         <description>Path 'descendant-or-self::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes034-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes034-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::* from an element gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes034" date="2003-02-25">
         <description>Path 'descendant-or-self::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes034-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes035-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::name gets nothing when no sub-tree and self has different name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes035" date="2003-02-25">
         <description>Path 'descendant-or-self::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes035-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes035-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::name gets none when no elements have that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes035" date="2003-02-25">
         <description>Path 'descendant-or-self::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes035-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes035-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes035" date="2003-02-25">
         <description>Path 'descendant-or-self::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes035-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes035-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes035" date="2003-02-25">
         <description>Path 'descendant-or-self::' with specified element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes035-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes036-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::name gets self of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes036" date="2003-02-25">
         <description>Path 'descendant-or-self::' with self specified.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes036-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes036-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::name gets several elements, including self.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes036" date="2003-02-25">
         <description>Path 'descendant-or-self::' with self specified.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes036-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes037-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No descendants, descendant-or-self::node() gets self.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes037" date="2003-02-25">
         <description>Path 'descendant-or-self::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes037-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes037-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::node() gets several nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes037" date="2003-02-25">
         <description>Path 'descendant-or-self::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes037-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes041-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::node() from an attribute gets the attribute.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes041" date="2003-02-25">
         <description>Path 'descendant-or-self::node()' from an attribute.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes041-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes043-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>text()/descendant-or-self::node() gets no nodes when no such text node exists.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes043" date="2003-02-25">
         <description>Path 'descendant-or-self::node()' from a text node.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes043-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes043-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>descendant-or-self::node() from a text node gets that node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes043" date="2003-02-25">
         <description>Path 'descendant-or-self::node()' from a text node.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes043-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes044-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/child::* on typical tree gets just 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes044" date="2003-02-25">
         <description>Test '/child::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes044-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes044-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/child::* on tree with top-level nodes gets just 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes044" date="2003-02-25">
         <description>Test '/child::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes044-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes045-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/child::name on tree with top-level non-element nodes gets nothing.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes045" date="2003-02-25">
         <description>Absolute path '/child::' with element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes045-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes045-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/child::name on typical tree gets 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes045" date="2003-02-25">
         <description>Absolute path '/child::' with element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes045-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes046-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/child::node() on typical tree gets 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes046" date="2003-02-25">
         <description>Test '/child::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes046-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes046-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/child::node() on tree with top-level nodes gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes046" date="2003-02-25">
         <description>Test '/child::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes046-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes047-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/* on typical tree gets just 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes047" date="2003-02-25">
         <description>Test implied child axis in '/*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes047-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes047-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/* on tree with top-level nodes gets just 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes047" date="2003-02-25">
         <description>Test implied child axis in '/*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes047-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes048-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/name on tree with top-level non-element nodes gets nothing.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes048" date="2003-02-25">
         <description>Test implied child axis with element name after /.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes048-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes048-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/name on typical tree gets 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes048" date="2003-02-25">
         <description>Test implied child axis with element name after /.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes048-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes049-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/node() on typical tree gets 1 (document) element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes049" date="2003-02-25">
         <description>Test implied child axis in '/node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes049-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes049-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/node() on tree with top-level nodes gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes049" date="2003-02-25">
         <description>Test implied child axis in '/node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes049-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes055-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/self::node() gets root node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes055" date="2003-02-25">
         <description>Test '/self::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes055-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes056-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::* gets just the document element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes056" date="2003-02-25">
         <description>Test '/descendant::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes056-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes056-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::* gets many nodes from a typical tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes056" date="2003-02-25">
         <description>Test '/descendant::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes056-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes056-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::* gets many nodes from a tree with top-level nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes056" date="2003-02-25">
         <description>Test '/descendant::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes056-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes057-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::name gets nothing when no element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes057" date="2003-02-25">
         <description>Absolute path '/descendant::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes057-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes057-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::name gets 1 top-level element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes057" date="2003-02-25">
         <description>Absolute path '/descendant::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes057-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes057-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes057" date="2003-02-25">
         <description>Absolute path '/descendant::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes057-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes057-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes057" date="2003-02-25">
         <description>Absolute path '/descendant::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes057-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes058-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::node() gets 1 top-level element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes058" date="2003-02-25">
         <description>Test '/descendant::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes058-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes058-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::node() on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes058" date="2003-02-25">
         <description>Test '/descendant::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes058-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes058-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant::node() gets many nodes from a tree with top-level nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes058" date="2003-02-25">
         <description>Test '/descendant::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes058-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes059-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::* gets 1 element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes059" date="2003-02-25">
         <description>Test '/descendant-or-self::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes059-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes059-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::* on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes059" date="2003-02-25">
         <description>Test '/descendant-or-self::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes059-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes060-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::name gets nothing when no element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes060" date="2003-02-25">
         <description>Absolute path '/descendant-or-self::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes060-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes060-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::name gets 1 top-level element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes060" date="2003-02-25">
         <description>Absolute path '/descendant-or-self::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes060-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes060-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes060" date="2003-02-25">
         <description>Absolute path '/descendant-or-self::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes060-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes060-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes060" date="2003-02-25">
         <description>Absolute path '/descendant-or-self::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes060-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes061-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::node() on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes061" date="2003-02-25">
         <description>Test '/descendant-or-self::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes061-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes061-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>/descendant-or-self::node() gets many nodes from a tree with top-level nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes061" date="2003-02-25">
         <description>Test '/descendant-or-self::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes061-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes062-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::* gets 1 element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes062" date="2003-02-25">
         <description>Test '//child::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes062-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes062-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::* on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes062" date="2003-02-25">
         <description>Test '//child::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes062-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes063-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::name gets nothing when no element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes063" date="2003-02-25">
         <description>Absolute path '//child::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes063-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes063-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::name gets 1 top-level element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes063" date="2003-02-25">
         <description>Absolute path '//child::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes063-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes063-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes063" date="2003-02-25">
         <description>Absolute path '//child::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes063-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes063-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes063" date="2003-02-25">
         <description>Absolute path '//child::' with specified element name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes063-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes064-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::node() gets 1 element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes064" date="2003-02-25">
         <description>Test '//child::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes064-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes064-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::node() on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes064" date="2003-02-25">
         <description>Test '//child::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes064-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes064-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//child::node() gets many nodes from a tree with top-level nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes064" date="2003-02-25">
         <description>Test '//child::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes064-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes065-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//* gets 1 element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes065" date="2003-02-25">
         <description>Test implied child axis in '//*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes065-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes065-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//* on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes065" date="2003-02-25">
         <description>Test implied child axis in '//*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes065-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes066-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//name gets nothing when no element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes066" date="2003-02-25">
         <description>Absolute path with element name after // implies child axis.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes066-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes066-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//name gets 1 top-level element of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes066" date="2003-02-25">
         <description>Absolute path with element name after // implies child axis.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes066-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes066-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes066" date="2003-02-25">
         <description>Absolute path with element name after // implies child axis.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes066-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes066-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes066" date="2003-02-25">
         <description>Absolute path with element name after // implies child axis.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes066-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes067-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//node() gets 1 element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes067" date="2003-02-25">
         <description>Test implied child axis in '//node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes067-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes067-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//node() on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes067" date="2003-02-25">
         <description>Test implied child axis in '//node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes067-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes067-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//node() gets many nodes from a tree with top-level nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes067" date="2003-02-25">
         <description>Test implied child axis in '//node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes067-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes068-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//attribute::* gets nothing when no attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes068" date="2003-02-25">
         <description>Test '//attribute::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes068-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes068-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//attribute::* gets 1 attribute from document element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes068" date="2003-02-25">
         <description>Test '//attribute::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes068-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes068-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//attribute::* gets many attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes068" date="2003-02-25">
         <description>Test '//attribute::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes068-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes069-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//attribute::name gets nothing when no attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes069" date="2003-02-25">
         <description>Absolute path '//attribute::' with specified name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes069-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes069-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//attribute::name gets 1 attribute from document element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes069" date="2003-02-25">
         <description>Absolute path '//attribute::' with specified name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes069-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes069-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//attribute::name gets many attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes069" date="2003-02-25">
         <description>Absolute path '//attribute::' with specified name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes069-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes070-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//@* gets nothing when no attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes070" date="2003-02-25">
         <description>Absolute path '//@*' has abbreviated syntax.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes070-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes070-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//@* gets 1 attribute from document element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes070" date="2003-02-25">
         <description>Absolute path '//@*' has abbreviated syntax.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes070-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes070-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//@* gets many attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes070" date="2003-02-25">
         <description>Absolute path '//@*' has abbreviated syntax.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes070-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes071-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//@name gets nothing when no attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes071" date="2003-02-25">
         <description>Absolute path '//@' with specified name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes071-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes071-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//@name gets 1 attribute from document element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes071" date="2003-02-25">
         <description>Absolute path '//@' with specified name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes071-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes071-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//@name gets many attributes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes071" date="2003-02-25">
         <description>Absolute path '//@' with specified name.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes071-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes072-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//self::* gets 1 element from a 1-element tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes072" date="2003-02-25">
         <description>Test '//self::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeEmpty</input-file>
      <output-file role="principal" compare="Text">Axes072-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes072-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//self::* on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes072" date="2003-02-25">
         <description>Test '//self::*' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes072-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes073-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//self::node() on typical tree gets many nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes073" date="2003-02-25">
         <description>Test '//self::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes073-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes073-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>//self::node() gets many nodes from a tree with top-level nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes073" date="2003-02-25">
         <description>Test '//self::node()' absolute path.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TopMany</input-file>
      <output-file role="principal" compare="Text">Axes073-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes074-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children of any kind, elem//child::* gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes074" date="2003-02-25">
         <description>Path '//child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes074-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes074-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::* gets nothing when no element children.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes074" date="2003-02-25">
         <description>Path '//child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes074-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes074-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::* gets 1 child element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes074" date="2003-02-25">
         <description>Path '//child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes074-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes074-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::* gets several nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes074" date="2003-02-25">
         <description>Path '//child::*' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes074-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes075-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::name gets nothing when no sub-tree.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes075" date="2003-02-25">
         <description>Path '//child::' with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes075-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes075-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::name gets none when no elements have that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes075" date="2003-02-25">
         <description>Path '//child::' with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes075-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes075-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes075" date="2003-02-25">
         <description>Path '//child::' with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes075-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes075-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes075" date="2003-02-25">
         <description>Path '//child::' with element name, from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes075-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes076-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children, elem//child::node() gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes076" date="2003-02-25">
         <description>Path '//child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes076-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes076-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::node() gets 1 child element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes076" date="2003-02-25">
         <description>Path '//child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes076-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes076-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//child::node() gets 1 child text node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes076" date="2003-02-25">
         <description>Path '//child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes076-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes076-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for elem//child::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes076" date="2003-02-25">
         <description>Path '//child::node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes076-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes077-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children for elem//*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes077" date="2003-02-25">
         <description>Test implied child axis in '//*' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes077-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes077-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 child for elem//*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes077" date="2003-02-25">
         <description>Test implied child axis in '//*' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes077-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes077-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Many children for elem//*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes077" date="2003-02-25">
         <description>Test implied child axis in '//*' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes077-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes078-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//name gets none when there are no children.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes078" date="2003-02-25">
         <description>Test implied child axis in element//element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes078-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes078-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//name gets none when no elements have that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes078" date="2003-02-25">
         <description>Test implied child axis in element//element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes078-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes078-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//name gets the 1 descendant of that name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes078" date="2003-02-25">
         <description>Test implied child axis in element//element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes078-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes078-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//name gets several elements.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes078" date="2003-02-25">
         <description>Test implied child axis in element//element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeStack</input-file>
      <output-file role="principal" compare="Text">Axes078-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes079-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No children, elem//node() gets none.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes079" date="2003-02-25">
         <description>Test implied child axis in '//node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes079-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes079-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//node() gets 1 child element.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes079" date="2003-02-25">
         <description>Test implied child axis in '//node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes079-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes079-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>elem//node() gets 1 child text node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes079" date="2003-02-25">
         <description>Test implied child axis in '//node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="Text">Axes079-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes079-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several children for elem//node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes079" date="2003-02-25">
         <description>Test implied child axis in '//node()' from an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes079-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes080-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//attribute::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes080" date="2003-02-25">
         <description>Path '//attribute::*' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes080-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes080-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for elem//attribute::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes080" date="2003-02-25">
         <description>Path '//attribute::*' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes080-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes080-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for elem//attribute::*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes080" date="2003-02-25">
         <description>Path '//attribute::*' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes080-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes081-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//attribute::name, due to none existing at all.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes081" date="2003-02-25">
         <description>Path '//attribute::' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes081-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes081-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//attribute::name, none of that name exist.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes081" date="2003-02-25">
         <description>Path '//attribute::' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes081-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes081-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for elem//attribute::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes081" date="2003-02-25">
         <description>Path '//attribute::' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes081-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes081-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for elem//attribute::name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes081" date="2003-02-25">
         <description>Path '//attribute::' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes081-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes082-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//attribute::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes082" date="2003-02-25">
         <description>Path '//attribute::node()' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes082-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes082-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for elem//attribute::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes082" date="2003-02-25">
         <description>Path '//attribute::node()' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes082-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes082-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for elem//attribute::node().</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes082" date="2003-02-25">
         <description>Path '//attribute::node()' after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes082-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes083-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//@*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes083" date="2003-02-25">
         <description>Path '//@*' (abbreviated syntax) after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes083-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes083-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for elem//@*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes083" date="2003-02-25">
         <description>Path '//@*' (abbreviated syntax) after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes083-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes083-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for elem//@*.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes083" date="2003-02-25">
         <description>Path '//@*' (abbreviated syntax) after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes083-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes084-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//@name, due to none existing at all.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes084" date="2003-02-25">
         <description>Path '//@' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeTrunc</input-file>
      <output-file role="principal" compare="Text">Axes084-1.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes084-2" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>No attributes for elem//@name, none of that name exist.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes084" date="2003-02-25">
         <description>Path '//@' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Child</input-file>
      <output-file role="principal" compare="Text">Axes084-2.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes084-3" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>1 attribute for elem//@name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes084" date="2003-02-25">
         <description>Path '//@' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeCompass</input-file>
      <output-file role="principal" compare="Text">Axes084-3.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes084-4" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="David Marston">
      <description>Several attributes for elem//@name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes084" date="2003-02-25">
         <description>Path '//@' with name of attribute, after an element.</description>
      </query>
      <input-file role="principal-data" variable="input-context">TreeRepeat</input-file>
      <output-file role="principal" compare="Text">Axes084-4.txt</output-file>
   </test-case>
   <test-case name="Axes085" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Asad Jawahar" is-XPath2="false">
      <description>Use of // to get all elements of a given name.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes085" date="2003-02-25">
         <description>Use of // to get all elements of a given name</description>
      </query>
      <input-file role="principal-data" variable="input-context">nw_Customers</input-file>
      <output-file role="principal" compare="XML">Axes085.xml</output-file>
   </test-case>
   <test-case name="Axes086" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Asad Jawahar" is-XPath2="false">
      <description>Parent of attribute node.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes086" date="2003-02-25">
         <description>Parent of attribute node</description>
      </query>
      <input-file role="principal-data" variable="input-context">Tree1Text</input-file>
      <output-file role="principal" compare="XML">Axes086.xml</output-file>
   </test-case>
   <test-case name="Axes087" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Asad Jawahar" is-XPath2="false">
      <description>Parent of text nodes.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes087" date="2003-02-25">
         <description>Parent of text nodes</description>
      </query>
      <input-file role="principal-data" variable="input-context">xq311B</input-file>
      <output-file role="principal" compare="XML">Axes087.xml</output-file>
   </test-case>
   <test-case is-XPath2="true" name="Axes088" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="parse-error" Creator="Asad Jawahar">
      <description>Empty step should result in parse error.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes088" date="2003-02-25">
         <description>Empty step should result in parse error</description>
      </query>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="false" name="Axes089" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Frans Englich">
      <description>A query that performs a Night's tour of the chessboard, originally written by Michael Kay.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="Axes089" date="2007-10-02">
         <description>A query that performs a Night's tour of the chessboard, originally written by Michael Kay.</description>
      </query>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">Axes089.xml</output-file>
   </test-case>
	<test-case is-XPath2="false" name="Axes090" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one element node with name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<query name="Axes090" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes090.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes091" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one element node with local name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<query name="Axes091" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes091.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes092" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one element node with namespace test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<query name="Axes092" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes092.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes093" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one attribute node with name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<query name="Axes093" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes093.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes094" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one attribute node with local name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<query name="Axes094" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes094.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes095" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one attribute node with namespace test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<query name="Axes095" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes095.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes096" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one element node with name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4242</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4581</reflects-resolution>
		<query name="Axes096" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes096.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes097" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one element node with local name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4242</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4581</reflects-resolution>
		<query name="Axes097" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes097.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes098" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one element node with namespace test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4242</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4581</reflects-resolution>
		<query name="Axes098" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes098.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes099" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one attribute node with name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4242</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4581</reflects-resolution>
		<query name="Axes099" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes099.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes100" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one attribute node with local name test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4242</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4581</reflects-resolution>
		<query name="Axes100" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes100.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes101" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Self axis on exactly one attribute node with namespace test that does not match.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4242</reflects-resolution>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4261</reflects-resolution> 
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4581</reflects-resolution>
		<query name="Axes101" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes101.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes102" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Assert that the static type of a wild name test on an element with a type annotation is computed correctly.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes102" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes102.txt</output-file>
	</test-case>
	<test-case is-XPath2="false" name="Axes103" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Wild name test on a comment node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes103" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes103.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes104" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Name test on a comment node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes104" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes104.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes105" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Local name test on a comment node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes105" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes105.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes106" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Namespace test on a comment node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes106" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes106.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes107" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Wild name test on a processing instruction node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes107" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes107.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes108" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Name test on a processing instruction node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes108" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes108.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes109" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Local name test on a processing instruction node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes109" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes109.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes110" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Namespace test on a processing instruction node.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes110" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes110.txt</output-file>
		<expected-error>XPST0005</expected-error>
	</test-case>
	<test-case is-XPath2="false" name="Axes111" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="standard" Creator="Oliver Hallam">
		<description>Assert that the static type of a wild name test on an attribute with a type annotation is computed correctly.</description>
		<spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
		<spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
		<reflects-resolution>http://www.w3.org/Bugs/Public/show_bug.cgi?id=4512</reflects-resolution>
		<query name="Axes111" date="2010-03-16" />
		<input-file role="principal-data" variable="input-context">emptydoc</input-file>
		<output-file role="principal" compare="Text">Axes111.txt</output-file>
	</test-case>
   <test-case name="axis-err-1" FilePath="Expressions/PathExpr/Steps/Axes/" scenario="runtime-error" Creator="Carmelo Montanez" is-XPath2="false">
      <description>Evaluation of a step axis, which operates on a non node context item.</description>
      <spec-citation spec="XQuery" section-number="3.2.1.1" section-title="Axes" section-pointer="axes"/>
      <spec-citation spec="XQuery" section-number="3.2.1" section-title="Steps" section-pointer="id-steps"/>
      <query name="axis-err-1" date="2005-12-07"/>
      <input-file role="principal-data" variable="input-context1">emptydoc</input-file>
      <expected-error>XPTY0020</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-1" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>A complex set of root path expressions.</description>
      <query name="K2-Axes-1" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-1.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-2" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>A complex set of root path expressions for where the context item is not a document node.</description>
      <query name="K2-Axes-2" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPDY0050</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-3" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Path expression where the last step in an xs:integer.</description>
      <query name="K2-Axes-3" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-3.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-4" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Path expression where the last step in an xs:integer(#2).</description>
      <query name="K2-Axes-4" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-4.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-5" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Whitespace: comment can't appear between the ncname and the colon.</description>
      <query name="K2-Axes-5" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-6" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>A comment can't appear between the ncname and the colon.</description>
      <query name="K2-Axes-6" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-7" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Whitespace can't appear between the wildcard and the colon.</description>
      <query name="K2-Axes-7" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-8" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>A comment can't appear between the wildcard and the colon.</description>
      <query name="K2-Axes-8" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-9" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Whitespace can't appear between the ncname and the colon.</description>
      <query name="K2-Axes-9" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-10" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>A comment can't appear between the ncname and the colon.</description>
      <query name="K2-Axes-10" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-11" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Whitespace can't appear between the wildcard and the colon.</description>
      <query name="K2-Axes-11" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-12" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Whitespace can't appear between the wildcard and the colon.</description>
      <query name="K2-Axes-12" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-13" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>A comment can't appear between the wildcard and the colon.</description>
      <query name="K2-Axes-13" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-14" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>A comment can't appear between the wildcard and the colon.</description>
      <query name="K2-Axes-14" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-15" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Whitespace can't appear between the wildcard, colon and ncname.</description>
      <query name="K2-Axes-15" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-16" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Comments can't appear between wildcards and ncnames.</description>
      <query name="K2-Axes-16" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-17" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>A nametest cannot with a colon.</description>
      <query name="K2-Axes-17" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-18" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a computed text constructor.</description>
      <query name="K2-Axes-18" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-18.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-19" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a computed processing instruction constructor.</description>
      <query name="K2-Axes-19" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-19.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-20" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a computed attribute constructor.</description>
      <query name="K2-Axes-20" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-20.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-21" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a computed attribute constructor.</description>
      <query name="K2-Axes-21" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-21.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-22" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a computed comment constructor.</description>
      <query name="K2-Axes-22" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-22.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-23" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a direct element constructor.</description>
      <query name="K2-Axes-23" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-23.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-24" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a direct element constructor's text-child.</description>
      <query name="K2-Axes-24" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-24.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-25" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a direct element constructor's text-child.</description>
      <query name="K2-Axes-25" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-25.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-26" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a direct element constructor's attribute.</description>
      <query name="K2-Axes-26" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-26.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-27" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a direct element constructor's processing-instruction-child.</description>
      <query name="K2-Axes-27" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-27.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-28" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the parent axis to a direct element constructor's comment-child.</description>
      <query name="K2-Axes-28" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-28.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-29" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>No axis by name preceding-or-ancestor exists.</description>
      <query name="K2-Axes-29" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-30" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply axis '..' to the return value of fn:root().</description>
      <query name="K2-Axes-30" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-30.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-31" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply axis '..' to a directly constructed element.</description>
      <query name="K2-Axes-31" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-31.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-32" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply axis '..' to the return value of fn:root().</description>
      <query name="K2-Axes-32" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-32.txt</output-file>
      <expected-error>XPST0005</expected-error>
      <expected-error>XPDY0050</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-33" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply axis '..' to a '/' step.</description>
      <query name="K2-Axes-33" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-33.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-34" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>'//' at the end of a path expression is a syntax error.</description>
      <query name="K2-Axes-34" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-35" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>'/' at the end of a path expression is a syntax error.</description>
      <query name="K2-Axes-35" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-36" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>'/' at the end of a path expression is a syntax error(#2).</description>
      <query name="K2-Axes-36" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-37" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>'self()' is an invalid note test.</description>
      <query name="K2-Axes-37" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-38" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>'..' inside a predicate where the context item is of wrong type.</description>
      <query name="K2-Axes-38" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0020</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-39" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>'element()' inside a predicate where the context item is of wrong type.</description>
      <query name="K2-Axes-39" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0020</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-40" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>'..' inside a predicate where the context item is of wrong type(#2).</description>
      <query name="K2-Axes-40" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0020</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-41" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>'..' inside a predicate where the context item is of wrong type(#3).</description>
      <query name="K2-Axes-41" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0020</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-42" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure a parent axis inside a predicate where the source is a direct element constructor, evaluate to the empty sequence.</description>
      <query name="K2-Axes-42" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-42.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-43" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure '5 * /' is parsed properly.</description>
      <query name="K2-Axes-43" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-43.txt</output-file>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-44" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure '/' is parsed properly.</description>
      <query name="K2-Axes-44" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-44.txt</output-file>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-45" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure '/' is parsed properly(#2).</description>
      <query name="K2-Axes-45" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-45.txt</output-file>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-46" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>'//' by itself is not a valid expression.</description>
      <query name="K2-Axes-46" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-47" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply '/' to a variable.</description>
      <query name="K2-Axes-47" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-47.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-48" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply '/' to a variable, with an xs:integer at the end.</description>
      <query name="K2-Axes-48" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-48.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-49" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply '/' to a variable, with fn:number() at the end. That is, an implicit dependency on the next-last step.</description>
      <query name="K2-Axes-49" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-49.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-50" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>'1/3' is a type error.</description>
      <query name="K2-Axes-50" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0019</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-51" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>'xs:string/3' is a type error.</description>
      <query name="K2-Axes-51" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0019</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-52" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>A type error in a complex path expression. Some implementations may optimize away the error.</description>
      <query name="K2-Axes-52" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-52.txt</output-file>
      <expected-error>XPST0005</expected-error>
      <expected-error>XPTY0019</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-53" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>Many atomic values with predicates in a path expression.</description>
      <query name="K2-Axes-53" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPTY0019</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-54" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>The namespace axis is not recognized in XQuery.</description>
      <query name="K2-Axes-54" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-55" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the attribute axis to the empty sequence.</description>
      <query name="K2-Axes-55" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-55.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-56" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the child axis to the empty sequence.</description>
      <query name="K2-Axes-56" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-56.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-57" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>The context item invokes sorting and duplicate elimination.</description>
      <query name="K2-Axes-57" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-57.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-58" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Content being duplicated with the comma operator..</description>
      <query name="K2-Axes-58" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-58.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-59" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Evaluate the child node from the last node in a tree.</description>
      <query name="K2-Axes-59" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-59.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-60" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the child axis on a document whose last nodes are attributes.</description>
      <query name="K2-Axes-60" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-60.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-61" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the child axis on an element that has attributes only.</description>
      <query name="K2-Axes-61" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-61.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-62" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply descendant-or-self to a node set constructed with element constructors.</description>
      <query name="K2-Axes-62" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-62.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-63" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the child axis to an element who has one attribute, combined with the sequence iterator.</description>
      <query name="K2-Axes-63" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-63.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-64" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Invoke the child axis on two elements with one attribute.</description>
      <query name="K2-Axes-64" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-64.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-65" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Invoke the child axis on two elements with one attribute.</description>
      <query name="K2-Axes-65" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-65.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-66" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Invoke the child axis on mixed content.</description>
      <query name="K2-Axes-66" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-66.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-67" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the descendant axis on an element, as operand to the comma operator.</description>
      <query name="K2-Axes-67" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-67.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-68" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the descendant-or-self axis on an element, as operand to the comma operator.</description>
      <query name="K2-Axes-68" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-68.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-69" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the descendant axis on an element that has an attribute, as operand to the comma operator.</description>
      <query name="K2-Axes-69" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-69.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-70" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply the descendant-or-self axis on an element that has an attribute, as operand to the comma operator.</description>
      <query name="K2-Axes-70" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-70.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-71" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply function fn:empty() on the descendant axis applied on an element constructor.</description>
      <query name="K2-Axes-71" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-71.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-72" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply function fn:empty() on the descendant-or-self axis applied on an element constructor.</description>
      <query name="K2-Axes-72" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-72.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-73" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply function fn:empty() on the descendant axis applied on an element constructor that has an attribute.</description>
      <query name="K2-Axes-73" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-73.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-74" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply function fn:empty() on the descendant-or-self axis applied on an element constructor that has an attribute.</description>
      <query name="K2-Axes-74" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-74.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-75" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Combine axis descendant-or-self, function last() and axis ancestor.</description>
      <query name="K2-Axes-75" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-75.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-76" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Combine axis descendant-or-self and function last().</description>
      <query name="K2-Axes-76" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-76.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-77" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>There is no axis by name 'preceeding'.</description>
      <query name="K2-Axes-77" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-78" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply fn:count() to a set of nodes involving the parent axis.</description>
      <query name="K2-Axes-78" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-78.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-79" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply fn:count() to a set of nodes involving the descendant axis.</description>
      <query name="K2-Axes-79" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-79.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-80" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Apply fn:count() to a set of nodes involving the descendant axis.</description>
      <query name="K2-Axes-80" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-80.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-81" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure that an element name test after an attribute test matches.</description>
      <query name="K2-Axes-81" static-name="K2-Axes-81-static-cbcl" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-81.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-82" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure that an element name test after an attribute with abbreviated syntax test matches.</description>
      <query name="K2-Axes-82" static-name="K2-Axes-82-static-cbcl" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-82.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-83" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Simple parser test of the attribute() test appearing after the attribute axis.</description>
      <query name="K2-Axes-83" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-83.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-84" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>Simple parser test of the schema-attribute() test appearing after the attribute axis.</description>
      <query name="K2-Axes-84" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0008</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-85" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>The attribute name isn't optional.</description>
      <query name="K2-Axes-85" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-86" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>A significant set of path expressions with different combinations of source values, axes and node tests, that always evaluate to the empty sequence, no matter what document structure that is being walked. The list is not guaranteed to be exhaustive. Some implementations detect this and rewrite away such combinations or warn the user about such constructs. Since static typing implementations may infer these expressions to the empty sequence, they may raise XPST0005.</description>
      <query name="K2-Axes-86" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context1">TopMany</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-86.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-87" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure node sorting is applied when the left operand is the result of the comma operator.</description>
      <query name="K2-Axes-87" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-87.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-88" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure node sorting is applied when the left operand is the result of the comma operator, while using variable references.</description>
      <query name="K2-Axes-88" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-88.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-89" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Ensure attribute tests match, and that attributes are properly copied when combined with a default element namespace declaration.</description>
      <query name="K2-Axes-89" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-89.txt</output-file>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-90" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>An incorrectly ending QName.</description>
      <query name="K2-Axes-90" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-91" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>An incorrectly ending QName, with space.</description>
      <query name="K2-Axes-91" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-92" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Test parsing of 'gt'.</description>
      <query name="K2-Axes-92" static-name="K2-Axes-92-static-cbcl" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-92.txt</output-file>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-93" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Space is disallowed after the first angle bracket in a direct element constructor.</description>
      <query name="K2-Axes-93" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-94" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>Use a single 'declare' nametest.</description>
      <query name="K2-Axes-94" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-95" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Use an invalid function declaration.</description>
      <query name="K2-Axes-95" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-96" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Use an invalid function declaration(#2).</description>
      <query name="K2-Axes-96" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-97" FilePath="PathExpr/Steps/Axes/" scenario="parse-error">
      <description>Use an invalid function declaration(#3).</description>
      <query name="K2-Axes-97" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPST0003</expected-error>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case is-XPath2="true" Creator="Frans Englich" name="K2-Axes-98" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>Use a set of reserved keywords as nametests.</description>
      <query name="K2-Axes-98" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XPDY0002</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-99" FilePath="PathExpr/Steps/Axes/" scenario="runtime-error">
      <description>Use an invalid function declaration(#3).</description>
      <query name="K2-Axes-99" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <expected-error>XQST0045</expected-error>
      <expected-error>XPST0017</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-100" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Do a peculiar combination between axis self and last().</description>
      <query name="K2-Axes-100" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="Text">K2-Axes-100.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-101" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Do a peculiar combination between axis self and last().</description>
      <query name="K2-Axes-101" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-101.txt</output-file>
      <expected-error>XPST0005</expected-error>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-102" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Execute a query in several different ways.</description>
      <query name="K2-Axes-102" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context1">XMarkAuction</input-file>
      <output-file role="principal" compare="Fragment">K2-Axes-102.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-103" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Combine a function call with paths that requires sorting.</description>
      <query name="K2-Axes-103" static-name="K2-Axes-103-static-cbcl" date="2007-11-26+01:00"/>
      <input-file role="principal-data" variable="input-context1">CPPGlobals</input-file>
      <output-file role="principal" compare="Text">K2-Axes-103.txt</output-file>
   </test-case>
   <test-case Creator="Frans Englich" is-XPath2="false" name="K2-Axes-104" FilePath="PathExpr/Steps/Axes/" scenario="standard">
      <description>Use the focus from within an element constructor.</description>
      <query name="K2-Axes-104" date="2008-02-11+01:00"/>
      <input-file role="principal-data" variable="input-context">emptydoc</input-file>
      <output-file role="principal" compare="XML">K2-Axes-104.txt</output-file>
   </test-case>
</test-group>