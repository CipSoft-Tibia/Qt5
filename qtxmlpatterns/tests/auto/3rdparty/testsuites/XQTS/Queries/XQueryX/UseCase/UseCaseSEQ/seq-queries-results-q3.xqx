<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:varDecl>
        <xqx:varName>input-context</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>i2</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:sequenceExpr>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>input-context</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                          <xqx:anyKindTest/>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>child</xqx:xpathAxis>
                          <xqx:nameTest>incision</xqx:nameTest>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:sequenceExpr>
                  </xqx:filterExpr>
                  <xqx:predicates>
                    <xqx:integerConstantExpr>
                      <xqx:value>2</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:predicates>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:forClause>
          <xqx:forClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>a</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:forExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:sequenceExpr>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>input-context</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                          <xqx:anyKindTest/>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>child</xqx:xpathAxis>
                          <xqx:nameTest>action</xqx:nameTest>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:sequenceExpr>
                  </xqx:filterExpr>
                  <xqx:predicates>
                    <xqx:nodeAfterOp>
                      <xqx:firstOperand>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:contextItemExpr/>
                            </xqx:filterExpr>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:firstOperand>
                      <xqx:secondOperand>
                        <xqx:varRef>
                          <xqx:name>i2</xqx:name>
                        </xqx:varRef>
                      </xqx:secondOperand>
                    </xqx:nodeAfterOp>
                    <xqx:lessThanOrEqualOp>
                      <xqx:firstOperand>
                        <xqx:functionCallExpr>
                          <xqx:functionName>position</xqx:functionName>
                          <xqx:arguments>
                          </xqx:arguments>
                        </xqx:functionCallExpr>
                      </xqx:firstOperand>
                      <xqx:secondOperand>
                        <xqx:integerConstantExpr>
                          <xqx:value>2</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:secondOperand>
                    </xqx:lessThanOrEqualOp>
                  </xqx:predicates>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:forExpr>
          </xqx:forClauseItem>
        </xqx:forClause>
        <xqx:returnClause>
          <xqx:pathExpr>
            <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:varRef>
                  <xqx:name>a</xqx:name>
                </xqx:varRef>
              </xqx:filterExpr>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
              <xqx:anyKindTest/>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>child</xqx:xpathAxis>
              <xqx:nameTest>instrument</xqx:nameTest>
            </xqx:stepExpr>
          </xqx:pathExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
