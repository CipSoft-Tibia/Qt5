<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:varDecl>
        <xqx:varName>input-context</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">summary</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>emps</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:elementTest>
                <xqx:elementName>
                  <xqx:QName>employee</xqx:QName>
                </xqx:elementName>
                <xqx:typeName xqx:prefix="xs">untyped</xqx:typeName>
              </xqx:elementTest>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:elementTest>
            <xqx:elementName>
              <xqx:QName>dept</xqx:QName>
            </xqx:elementName>
          </xqx:elementTest>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:flworExpr>
            <xqx:forClause>
              <xqx:forClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>d</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:forExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName>distinct-values</xqx:functionName>
                    <xqx:arguments>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>emps</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>child</xqx:xpathAxis>
                          <xqx:nameTest>deptno</xqx:nameTest>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:forExpr>
              </xqx:forClauseItem>
            </xqx:forClause>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>e</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>emps</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>deptno</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>d</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:elementConstructor>
                <xqx:tagName>dept</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>deptno</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:varRef>
                        <xqx:name>d</xqx:name>
                      </xqx:varRef>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>headcount</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:functionCallExpr>
                        <xqx:functionName>count</xqx:functionName>
                        <xqx:arguments>
                          <xqx:varRef>
                            <xqx:name>e</xqx:name>
                          </xqx:varRef>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>payroll</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:functionCallExpr>
                        <xqx:functionName>sum</xqx:functionName>
                        <xqx:arguments>
                          <xqx:pathExpr>
                            <xqx:stepExpr>
                              <xqx:filterExpr>
                                <xqx:varRef>
                                  <xqx:name>e</xqx:name>
                                </xqx:varRef>
                              </xqx:filterExpr>
                            </xqx:stepExpr>
                            <xqx:stepExpr>
                              <xqx:xpathAxis>child</xqx:xpathAxis>
                              <xqx:nameTest>salary</xqx:nameTest>
                            </xqx:stepExpr>
                          </xqx:pathExpr>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:functionCallExpr>
        <xqx:functionName xqx:prefix="local">summary</xqx:functionName>
        <xqx:arguments>
          <xqx:pathExpr>
            <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:varRef>
                  <xqx:name>input-context</xqx:name>
                </xqx:varRef>
              </xqx:filterExpr>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
              <xqx:anyKindTest/>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>child</xqx:xpathAxis>
              <xqx:nameTest>employee</xqx:nameTest>
              <xqx:predicates>
                <xqx:equalOp>
                  <xqx:firstOperand>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>location</xqx:nameTest>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:firstOperand>
                  <xqx:secondOperand>
                    <xqx:stringConstantExpr>
                      <xqx:value>Denver</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:secondOperand>
                </xqx:equalOp>
              </xqx:predicates>
            </xqx:stepExpr>
          </xqx:pathExpr>
        </xqx:arguments>
      </xqx:functionCallExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
