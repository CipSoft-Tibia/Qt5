<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">follows-not-descendant</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>a</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>b</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:andOp>
            <xqx:firstOperand>
              <xqx:nodeAfterOp>
                <xqx:firstOperand>
                  <xqx:varRef>
                    <xqx:name>a</xqx:name>
                  </xqx:varRef>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:varRef>
                    <xqx:name>b</xqx:name>
                  </xqx:varRef>
                </xqx:secondOperand>
              </xqx:nodeAfterOp>
            </xqx:firstOperand>
            <xqx:secondOperand>
              <xqx:functionCallExpr>
                <xqx:functionName>empty</xqx:functionName>
                <xqx:arguments>
                  <xqx:intersectOp>
                    <xqx:firstOperand>
                      <xqx:varRef>
                        <xqx:name>b</xqx:name>
                      </xqx:varRef>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>a</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                        </xqx:stepExpr>
                        <xqx:stepExpr>
                          <xqx:xpathAxis>ancestor</xqx:xpathAxis>
                          <xqx:anyKindTest/>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:secondOperand>
                  </xqx:intersectOp>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:secondOperand>
          </xqx:andOp>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>in-xml</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>authors</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>author</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>fName</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>Kate</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>lName</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>Jones</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>author</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>fName</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>John</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>lName</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>Doe</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:functionCallExpr>
            <xqx:functionName xqx:prefix="functx">follows-not-descendant</xqx:functionName>
            <xqx:arguments>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>in-xml</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>author</xqx:nameTest>
                  <xqx:predicates>
                    <xqx:integerConstantExpr>
                      <xqx:value>1</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:predicates>
                </xqx:stepExpr>
              </xqx:pathExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>in-xml</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>author</xqx:nameTest>
                  <xqx:predicates>
                    <xqx:integerConstantExpr>
                      <xqx:value>2</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:predicates>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
