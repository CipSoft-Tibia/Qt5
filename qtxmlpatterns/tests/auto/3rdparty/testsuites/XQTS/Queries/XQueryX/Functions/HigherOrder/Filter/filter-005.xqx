<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:versionDecl>
    <xqx:version>1.1</xqx:version>
    <!-- encoding: null -->
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">index-of-node</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>seqParam</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>srchParam</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:functionCallExpr>
            <xqx:functionName>filter</xqx:functionName>
            <xqx:arguments>
              <xqx:inlineFunctionItemExpr>
                <xqx:paramList>
                  <xqx:param>
                    <xqx:varName>this</xqx:varName>
                    <xqx:typeDeclaration>
                      <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
                    </xqx:typeDeclaration>
                  </xqx:param>
                </xqx:paramList>
                <xqx:typeDeclaration>
                  <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
                </xqx:typeDeclaration>
                <xqx:functionBody>
                  <xqx:isOp>
                    <xqx:firstOperand>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>seqParam</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                          <xqx:predicates>
                            <xqx:varRef>
                              <xqx:name>this</xqx:name>
                            </xqx:varRef>
                          </xqx:predicates>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:varRef>
                        <xqx:name>srchParam</xqx:name>
                      </xqx:varRef>
                    </xqx:secondOperand>
                  </xqx:isOp>
                </xqx:functionBody>
              </xqx:inlineFunctionItemExpr>
              <xqx:rangeSequenceExpr>
                <xqx:startExpr>
                  <xqx:integerConstantExpr>
                    <xqx:value>1</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:startExpr>
                <xqx:endExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName>count</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>seqParam</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:endExpr>
              </xqx:rangeSequenceExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>nodes</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:sequenceExpr>
                <xqx:elementConstructor>
                  <xqx:tagName>a</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>b</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>c</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>d</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>f</xqx:tagName>
                </xqx:elementConstructor>
              </xqx:sequenceExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>perm</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:sequenceExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>2</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>3</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>2</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>4</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>2</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
              </xqx:sequenceExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:elementConstructor>
            <xqx:tagName>indexes</xqx:tagName>
            <xqx:elementContent>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="local">index-of-node</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>perm</xqx:name>
                  </xqx:varRef>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>nodes</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:integerConstantExpr>
                          <xqx:value>2</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:elementContent>
          </xqx:elementConstructor>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
