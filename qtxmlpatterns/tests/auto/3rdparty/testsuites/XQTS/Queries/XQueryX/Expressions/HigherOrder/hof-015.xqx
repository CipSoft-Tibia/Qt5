<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:versionDecl>
    <xqx:version>1.1</xqx:version>
    <!-- encoding: null -->
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">case</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>x</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:typedFunctionTest>
            <xqx:paramTypeList>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
                <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
              </xqx:sequenceType>
            </xqx:paramTypeList>
            <xqx:sequenceType>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:sequenceType>
          </xqx:typedFunctionTest>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:varRef>
                <xqx:name>x</xqx:name>
              </xqx:varRef>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:literalFunctionItemExpr>
                <xqx:QName xqx:prefix="fn">upper-case</xqx:QName>
                <xqx:integerConstantExpr>
                  <xqx:value>1</xqx:value>
                </xqx:integerConstantExpr>
              </xqx:literalFunctionItemExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:literalFunctionItemExpr>
                <xqx:QName xqx:prefix="fn">lower-case</xqx:QName>
                <xqx:integerConstantExpr>
                  <xqx:value>1</xqx:value>
                </xqx:integerConstantExpr>
              </xqx:literalFunctionItemExpr>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:sequenceExpr>
        <xqx:pathExpr>
          <xqx:stepExpr>
            <xqx:filterExpr>
              <xqx:dynamicFunctionInvocationExpr>
                <xqx:functionItem>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="local">case</xqx:functionName>
                    <xqx:arguments>
                      <xqx:functionCallExpr>
                        <xqx:functionName>true</xqx:functionName>
                        <xqx:arguments>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:functionItem>
                <xqx:arguments>
                  <xqx:stringConstantExpr>
                    <xqx:value>Mike</xqx:value>
                  </xqx:stringConstantExpr>
                </xqx:arguments>
              </xqx:dynamicFunctionInvocationExpr>
            </xqx:filterExpr>
          </xqx:stepExpr>
        </xqx:pathExpr>
        <xqx:pathExpr>
          <xqx:stepExpr>
            <xqx:filterExpr>
              <xqx:dynamicFunctionInvocationExpr>
                <xqx:functionItem>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="local">case</xqx:functionName>
                    <xqx:arguments>
                      <xqx:functionCallExpr>
                        <xqx:functionName>false</xqx:functionName>
                        <xqx:arguments>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:functionItem>
                <xqx:arguments>
                  <xqx:stringConstantExpr>
                    <xqx:value>Mike</xqx:value>
                  </xqx:stringConstantExpr>
                </xqx:arguments>
              </xqx:dynamicFunctionInvocationExpr>
            </xqx:filterExpr>
          </xqx:stepExpr>
        </xqx:pathExpr>
      </xqx:sequenceExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
