<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:schemaImport>
        <xqx:namespacePrefix>ipo</xqx:namespacePrefix>
        <xqx:targetNamespace>http://www.example.com/IPO</xqx:targetNamespace>
      </xqx:schemaImport>
      <xqx:varDecl>
        <xqx:varName>input-context</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">deadbeat</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>b</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:elementTest>
                <xqx:elementName>
                  <xqx:QName>billTo</xqx:QName>
                </xqx:elementName>
                <xqx:typeName xqx:prefix="ipo">USAddress</xqx:typeName>
              </xqx:elementTest>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:equalOp>
            <xqx:firstOperand>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>b</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>name</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:firstOperand>
            <xqx:secondOperand>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName>doc</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>http://www.usa-deadbeats.com/current</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>deadbeats</xqx:nameTest>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>row</xqx:nameTest>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>name</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:secondOperand>
          </xqx:equalOp>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:forClause>
          <xqx:forClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>p</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:forExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>input-context</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:elementTest>
                    <xqx:elementName>
                      <xqx:QName xqx:prefix="ipo">purchaseOrder</xqx:QName>
                    </xqx:elementName>
                  </xqx:elementTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:forExpr>
          </xqx:forClauseItem>
        </xqx:forClause>
        <xqx:whereClause>
          <xqx:andOp>
            <xqx:firstOperand>
              <xqx:equalOp>
                <xqx:firstOperand>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>p</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>attribute</xqx:xpathAxis>
                      <xqx:nameTest>orderDate</xqx:nameTest>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>date</xqx:functionName>
                    <xqx:arguments>
                      <xqx:stringConstantExpr>
                        <xqx:value>2004-12-01</xqx:value>
                      </xqx:stringConstantExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:secondOperand>
              </xqx:equalOp>
            </xqx:firstOperand>
            <xqx:secondOperand>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="local">deadbeat</xqx:functionName>
                <xqx:arguments>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>p</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:elementTest>
                        <xqx:elementName>
                          <xqx:QName>billTo</xqx:QName>
                        </xqx:elementName>
                      </xqx:elementTest>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:secondOperand>
          </xqx:andOp>
        </xqx:whereClause>
        <xqx:returnClause>
          <xqx:elementConstructor>
            <xqx:tagName>warning</xqx:tagName>
            <xqx:elementContent>
              <xqx:sequenceExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>p</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>child</xqx:xpathAxis>
                    <xqx:nameTest>billTo</xqx:nameTest>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>child</xqx:xpathAxis>
                    <xqx:nameTest>name</xqx:nameTest>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:stringConstantExpr>
                  <xqx:value>is a known deadbeat!</xqx:value>
                </xqx:stringConstantExpr>
              </xqx:sequenceExpr>
            </xqx:elementContent>
          </xqx:elementConstructor>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
