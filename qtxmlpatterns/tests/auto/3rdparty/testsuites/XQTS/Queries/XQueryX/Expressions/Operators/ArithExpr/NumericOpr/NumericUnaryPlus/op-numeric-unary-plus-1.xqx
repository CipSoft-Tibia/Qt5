<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:forClause>
          <xqx:forClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>x</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:forExpr>
              <xqx:sequenceExpr>
                <xqx:integerConstantExpr>
                  <xqx:value>1</xqx:value>
                </xqx:integerConstantExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">decimal</xqx:functionName>
                  <xqx:arguments>
                    <xqx:integerConstantExpr>
                      <xqx:value>2</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">float</xqx:functionName>
                  <xqx:arguments>
                    <xqx:integerConstantExpr>
                      <xqx:value>3</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">double</xqx:functionName>
                  <xqx:arguments>
                    <xqx:integerConstantExpr>
                      <xqx:value>4</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">untypedAtomic</xqx:functionName>
                  <xqx:arguments>
                    <xqx:integerConstantExpr>
                      <xqx:value>5</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:sequenceExpr>
            </xqx:forExpr>
          </xqx:forClauseItem>
        </xqx:forClause>
        <xqx:returnClause>
          <xqx:typeswitchExpr>
            <xqx:argExpr>
              <xqx:unaryPlusOp>
                <xqx:operand>
                  <xqx:varRef>
                    <xqx:name>x</xqx:name>
                  </xqx:varRef>
                </xqx:operand>
              </xqx:unaryPlusOp>
            </xqx:argExpr>
            <xqx:typeswitchExprCaseClause>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
              </xqx:sequenceType>
              <xqx:resultExpr>
                <xqx:stringConstantExpr>
                  <xqx:value>integer</xqx:value>
                </xqx:stringConstantExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprCaseClause>
            <xqx:typeswitchExprCaseClause>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">decimal</xqx:atomicType>
              </xqx:sequenceType>
              <xqx:resultExpr>
                <xqx:stringConstantExpr>
                  <xqx:value>decimal</xqx:value>
                </xqx:stringConstantExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprCaseClause>
            <xqx:typeswitchExprCaseClause>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">float</xqx:atomicType>
              </xqx:sequenceType>
              <xqx:resultExpr>
                <xqx:stringConstantExpr>
                  <xqx:value>float</xqx:value>
                </xqx:stringConstantExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprCaseClause>
            <xqx:typeswitchExprCaseClause>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">double</xqx:atomicType>
              </xqx:sequenceType>
              <xqx:resultExpr>
                <xqx:stringConstantExpr>
                  <xqx:value>double</xqx:value>
                </xqx:stringConstantExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprCaseClause>
            <xqx:typeswitchExprDefaultClause>
              <xqx:resultExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName>error</xqx:functionName>
                  <xqx:arguments>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:resultExpr>
            </xqx:typeswitchExprDefaultClause>
          </xqx:typeswitchExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
