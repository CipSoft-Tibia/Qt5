<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:versionDecl>
    <xqx:version>1.1</xqx:version>
    <!-- encoding: null -->
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:varDecl>
        <xqx:varName>sep</xqx:varName>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:external>
          <xqx:varValue>
            <xqx:stringConstantExpr>
              <xqx:value>\s</xqx:value>
            </xqx:stringConstantExpr>
          </xqx:varValue>
        </xqx:external>
      </xqx:varDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">splitter</xqx:functionName>
        <xqx:paramList/>
        <xqx:typeDeclaration>
          <xqx:parenthesizedItemType>
            <xqx:typedFunctionTest>
              <xqx:paramTypeList>
                <xqx:sequenceType>
                  <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
                </xqx:sequenceType>
              </xqx:paramTypeList>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
                <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
              </xqx:sequenceType>
            </xqx:typedFunctionTest>
          </xqx:parenthesizedItemType>
          <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:inlineFunctionItemExpr>
            <xqx:paramList>
              <xqx:param>
                <xqx:varName>x</xqx:varName>
                <xqx:typeDeclaration>
                  <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
                </xqx:typeDeclaration>
              </xqx:param>
            </xqx:paramList>
            <xqx:functionBody>
              <xqx:flworExpr>
                <xqx:forClause>
                  <xqx:forClauseItem>
                    <xqx:typedVariableBinding>
                      <xqx:varName>i</xqx:varName>
                    </xqx:typedVariableBinding>
                    <xqx:forExpr>
                      <xqx:functionCallExpr>
                        <xqx:functionName>tokenize</xqx:functionName>
                        <xqx:arguments>
                          <xqx:varRef>
                            <xqx:name>x</xqx:name>
                          </xqx:varRef>
                          <xqx:varRef>
                            <xqx:name>sep</xqx:name>
                          </xqx:varRef>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:forExpr>
                  </xqx:forClauseItem>
                </xqx:forClause>
                <xqx:returnClause>
                  <xqx:functionCallExpr>
                    <xqx:functionName>upper-case</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>i</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:returnClause>
              </xqx:flworExpr>
            </xqx:functionBody>
          </xqx:inlineFunctionItemExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:functionCallExpr>
        <xqx:functionName>string-join</xqx:functionName>
        <xqx:arguments>
          <xqx:pathExpr>
            <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:dynamicFunctionInvocationExpr>
                  <xqx:functionItem>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="local">splitter</xqx:functionName>
                      <xqx:arguments>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:functionItem>
                  <xqx:arguments>
                    <xqx:stringConstantExpr>
                      <xqx:value>A nice cup of tea</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:arguments>
                </xqx:dynamicFunctionInvocationExpr>
              </xqx:filterExpr>
            </xqx:stepExpr>
          </xqx:pathExpr>
          <xqx:stringConstantExpr>
            <xqx:value>|</xqx:value>
          </xqx:stringConstantExpr>
        </xqx:arguments>
      </xqx:functionCallExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
