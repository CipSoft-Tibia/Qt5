<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">max-determine-type</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>seq</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">anyAtomicType</xqx:atomicType>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">anyAtomicType</xqx:atomicType>
          <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:quantifiedExpr>
                <xqx:quantifier>every</xqx:quantifier>
                <xqx:quantifiedExprInClause>
                  <xqx:typedVariableBinding>
                    <xqx:varName>value</xqx:varName>
                  </xqx:typedVariableBinding>
                  <xqx:sourceExpr>
                    <xqx:varRef>
                      <xqx:name>seq</xqx:name>
                    </xqx:varRef>
                  </xqx:sourceExpr>
                </xqx:quantifiedExprInClause>
                <xqx:predicateExpr>
                  <xqx:castableExpr>
                    <xqx:argExpr>
                      <xqx:varRef>
                        <xqx:name>value</xqx:name>
                      </xqx:varRef>
                    </xqx:argExpr>
                    <xqx:singleType>
                      <xqx:atomicType xqx:prefix="xs">double</xqx:atomicType>
                    </xqx:singleType>
                  </xqx:castableExpr>
                </xqx:predicateExpr>
              </xqx:quantifiedExpr>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:functionCallExpr>
                <xqx:functionName>max</xqx:functionName>
                <xqx:arguments>
                  <xqx:flworExpr>
                    <xqx:forClause>
                      <xqx:forClauseItem>
                        <xqx:typedVariableBinding>
                          <xqx:varName>value</xqx:varName>
                        </xqx:typedVariableBinding>
                        <xqx:forExpr>
                          <xqx:varRef>
                            <xqx:name>seq</xqx:name>
                          </xqx:varRef>
                        </xqx:forExpr>
                      </xqx:forClauseItem>
                    </xqx:forClause>
                    <xqx:returnClause>
                      <xqx:functionCallExpr>
                        <xqx:functionName xqx:prefix="xs">double</xqx:functionName>
                        <xqx:arguments>
                          <xqx:varRef>
                            <xqx:name>value</xqx:name>
                          </xqx:varRef>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:returnClause>
                  </xqx:flworExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:functionCallExpr>
                <xqx:functionName>max</xqx:functionName>
                <xqx:arguments>
                  <xqx:flworExpr>
                    <xqx:forClause>
                      <xqx:forClauseItem>
                        <xqx:typedVariableBinding>
                          <xqx:varName>value</xqx:varName>
                        </xqx:typedVariableBinding>
                        <xqx:forExpr>
                          <xqx:varRef>
                            <xqx:name>seq</xqx:name>
                          </xqx:varRef>
                        </xqx:forExpr>
                      </xqx:forClauseItem>
                    </xqx:forClause>
                    <xqx:returnClause>
                      <xqx:functionCallExpr>
                        <xqx:functionName xqx:prefix="xs">string</xqx:functionName>
                        <xqx:arguments>
                          <xqx:varRef>
                            <xqx:name>value</xqx:name>
                          </xqx:varRef>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:returnClause>
                  </xqx:flworExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>in-xml</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>values</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>nums</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>num</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>12</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>num</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>23</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>num</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>115</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>num</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>12.5</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>strings</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>string</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>def</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>string</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>abc</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:functionCallExpr>
            <xqx:functionName xqx:prefix="functx">max-determine-type</xqx:functionName>
            <xqx:arguments>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>in-xml</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>num</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
