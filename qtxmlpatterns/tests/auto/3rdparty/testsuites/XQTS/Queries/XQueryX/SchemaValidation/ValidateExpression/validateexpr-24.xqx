<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>lu</xqx:prefix>
        <xqx:uri>http://www.w3.org/XQueryTest/ListUnionTypes</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:schemaImport>
        <xqx:targetNamespace>http://www.w3.org/XQueryTest/ListUnionTypes</xqx:targetNamespace>
      </xqx:schemaImport>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>v</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:validateExpr>
                <xqx:argExpr>
                  <xqx:elementConstructor>
                    <xqx:tagName xqx:prefix="lu">e</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:stringConstantExpr>
                        <xqx:value>1 1.0e0</xqx:value>
                      </xqx:stringConstantExpr>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:argExpr>
              </xqx:validateExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>dv</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:functionCallExpr>
                <xqx:functionName>data</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>v</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:sequenceExpr>
            <xqx:instanceOfExpr>
              <xqx:argExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>dv</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
              </xqx:argExpr>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
              </xqx:sequenceType>
            </xqx:instanceOfExpr>
            <xqx:instanceOfExpr>
              <xqx:argExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>dv</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>2</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
              </xqx:argExpr>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">float</xqx:atomicType>
              </xqx:sequenceType>
            </xqx:instanceOfExpr>
          </xqx:sequenceExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
