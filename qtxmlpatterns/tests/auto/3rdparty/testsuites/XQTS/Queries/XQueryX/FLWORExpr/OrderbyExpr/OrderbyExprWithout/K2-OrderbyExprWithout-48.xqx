<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>numbers</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:sequenceExpr>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:stringConstantExpr>
                      <xqx:value>NaN</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:stringConstantExpr>
                      <xqx:value>NaN</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:stringConstantExpr>
                      <xqx:value>NaN</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:stringConstantExpr>
                      <xqx:value>INF</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:stringConstantExpr>
                      <xqx:value>NaN</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                </xqx:elementConstructor>
                <xqx:elementConstructor>
                  <xqx:tagName>e</xqx:tagName>
                  <xqx:elementContent>
                    <xqx:stringConstantExpr>
                      <xqx:value>3</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:elementContent>
                </xqx:elementConstructor>
                <xqx:computedCommentConstructor>
                  <xqx:argExpr>
                    <xqx:stringConstantExpr>
                      <xqx:value>3</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:argExpr>
                </xqx:computedCommentConstructor>
              </xqx:sequenceExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:sequenceExpr>
            <xqx:flworExpr>
              <xqx:forClause>
                <xqx:forClauseItem>
                  <xqx:typedVariableBinding>
                    <xqx:varName>i</xqx:varName>
                  </xqx:typedVariableBinding>
                  <xqx:forExpr>
                    <xqx:varRef>
                      <xqx:name>numbers</xqx:name>
                    </xqx:varRef>
                  </xqx:forExpr>
                </xqx:forClauseItem>
              </xqx:forClause>
              <xqx:orderByClause>
                <xqx:orderBySpec>
                  <xqx:orderByExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">double</xqx:functionName>
                      <xqx:arguments>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:varRef>
                                <xqx:name>i</xqx:name>
                              </xqx:varRef>
                            </xqx:filterExpr>
                          </xqx:stepExpr>
                          <xqx:stepExpr>
                            <xqx:xpathAxis>child</xqx:xpathAxis>
                            <xqx:textTest/>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:orderByExpr>
                  <xqx:orderModifier>
                    <xqx:emptyOrderingMode>empty least</xqx:emptyOrderingMode>
                  </xqx:orderModifier>
                </xqx:orderBySpec>
              </xqx:orderByClause>
              <xqx:returnClause>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">double</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>i</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:textTest/>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:returnClause>
            </xqx:flworExpr>
            <xqx:stringConstantExpr>
              <xqx:value>SEP</xqx:value>
            </xqx:stringConstantExpr>
            <xqx:flworExpr>
              <xqx:forClause>
                <xqx:forClauseItem>
                  <xqx:typedVariableBinding>
                    <xqx:varName>i</xqx:varName>
                  </xqx:typedVariableBinding>
                  <xqx:forExpr>
                    <xqx:varRef>
                      <xqx:name>numbers</xqx:name>
                    </xqx:varRef>
                  </xqx:forExpr>
                </xqx:forClauseItem>
              </xqx:forClause>
              <xqx:orderByClause>
                <xqx:orderBySpec>
                  <xqx:orderByExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">double</xqx:functionName>
                      <xqx:arguments>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:varRef>
                                <xqx:name>i</xqx:name>
                              </xqx:varRef>
                            </xqx:filterExpr>
                          </xqx:stepExpr>
                          <xqx:stepExpr>
                            <xqx:xpathAxis>child</xqx:xpathAxis>
                            <xqx:textTest/>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:orderByExpr>
                  <xqx:orderModifier>
                    <xqx:emptyOrderingMode>empty greatest</xqx:emptyOrderingMode>
                  </xqx:orderModifier>
                </xqx:orderBySpec>
              </xqx:orderByClause>
              <xqx:returnClause>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="xs">double</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>i</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:textTest/>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:returnClause>
            </xqx:flworExpr>
          </xqx:sequenceExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
