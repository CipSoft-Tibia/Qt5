<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">get-matches-and-non-matches</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>string</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>regex</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:elementTest/>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:flworExpr>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>iomf</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="functx">index-of-match-first</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>string</xqx:name>
                      </xqx:varRef>
                      <xqx:varRef>
                        <xqx:name>regex</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:ifThenElseExpr>
                <xqx:ifClause>
                  <xqx:functionCallExpr>
                    <xqx:functionName>empty</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>iomf</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:ifClause>
                <xqx:thenClause>
                  <xqx:elementConstructor>
                    <xqx:tagName>non-match</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:varRef>
                        <xqx:name>string</xqx:name>
                      </xqx:varRef>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:thenClause>
                <xqx:elseClause>
                  <xqx:ifThenElseExpr>
                    <xqx:ifClause>
                      <xqx:greaterThanOp>
                        <xqx:firstOperand>
                          <xqx:varRef>
                            <xqx:name>iomf</xqx:name>
                          </xqx:varRef>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:secondOperand>
                      </xqx:greaterThanOp>
                    </xqx:ifClause>
                    <xqx:thenClause>
                      <xqx:sequenceExpr>
                        <xqx:elementConstructor>
                          <xqx:tagName>non-match</xqx:tagName>
                          <xqx:elementContent>
                            <xqx:functionCallExpr>
                              <xqx:functionName>substring</xqx:functionName>
                              <xqx:arguments>
                                <xqx:varRef>
                                  <xqx:name>string</xqx:name>
                                </xqx:varRef>
                                <xqx:integerConstantExpr>
                                  <xqx:value>1</xqx:value>
                                </xqx:integerConstantExpr>
                                <xqx:subtractOp>
                                  <xqx:firstOperand>
                                    <xqx:varRef>
                                      <xqx:name>iomf</xqx:name>
                                    </xqx:varRef>
                                  </xqx:firstOperand>
                                  <xqx:secondOperand>
                                    <xqx:integerConstantExpr>
                                      <xqx:value>1</xqx:value>
                                    </xqx:integerConstantExpr>
                                  </xqx:secondOperand>
                                </xqx:subtractOp>
                              </xqx:arguments>
                            </xqx:functionCallExpr>
                          </xqx:elementContent>
                        </xqx:elementConstructor>
                        <xqx:functionCallExpr>
                          <xqx:functionName xqx:prefix="functx">get-matches-and-non-matches</xqx:functionName>
                          <xqx:arguments>
                            <xqx:functionCallExpr>
                              <xqx:functionName>substring</xqx:functionName>
                              <xqx:arguments>
                                <xqx:varRef>
                                  <xqx:name>string</xqx:name>
                                </xqx:varRef>
                                <xqx:varRef>
                                  <xqx:name>iomf</xqx:name>
                                </xqx:varRef>
                              </xqx:arguments>
                            </xqx:functionCallExpr>
                            <xqx:varRef>
                              <xqx:name>regex</xqx:name>
                            </xqx:varRef>
                          </xqx:arguments>
                        </xqx:functionCallExpr>
                      </xqx:sequenceExpr>
                    </xqx:thenClause>
                    <xqx:elseClause>
                      <xqx:flworExpr>
                        <xqx:letClause>
                          <xqx:letClauseItem>
                            <xqx:typedVariableBinding>
                              <xqx:varName>length</xqx:varName>
                            </xqx:typedVariableBinding>
                            <xqx:letExpr>
                              <xqx:subtractOp>
                                <xqx:firstOperand>
                                  <xqx:functionCallExpr>
                                    <xqx:functionName>string-length</xqx:functionName>
                                    <xqx:arguments>
                                      <xqx:varRef>
                                        <xqx:name>string</xqx:name>
                                      </xqx:varRef>
                                    </xqx:arguments>
                                  </xqx:functionCallExpr>
                                </xqx:firstOperand>
                                <xqx:secondOperand>
                                  <xqx:functionCallExpr>
                                    <xqx:functionName>string-length</xqx:functionName>
                                    <xqx:arguments>
                                      <xqx:functionCallExpr>
                                        <xqx:functionName xqx:prefix="functx">replace-first</xqx:functionName>
                                        <xqx:arguments>
                                          <xqx:varRef>
                                            <xqx:name>string</xqx:name>
                                          </xqx:varRef>
                                          <xqx:varRef>
                                            <xqx:name>regex</xqx:name>
                                          </xqx:varRef>
                                          <xqx:stringConstantExpr>
                                            <xqx:value></xqx:value>
                                          </xqx:stringConstantExpr>
                                        </xqx:arguments>
                                      </xqx:functionCallExpr>
                                    </xqx:arguments>
                                  </xqx:functionCallExpr>
                                </xqx:secondOperand>
                              </xqx:subtractOp>
                            </xqx:letExpr>
                          </xqx:letClauseItem>
                        </xqx:letClause>
                        <xqx:returnClause>
                          <xqx:sequenceExpr>
                            <xqx:elementConstructor>
                              <xqx:tagName>match</xqx:tagName>
                              <xqx:elementContent>
                                <xqx:functionCallExpr>
                                  <xqx:functionName>substring</xqx:functionName>
                                  <xqx:arguments>
                                    <xqx:varRef>
                                      <xqx:name>string</xqx:name>
                                    </xqx:varRef>
                                    <xqx:integerConstantExpr>
                                      <xqx:value>1</xqx:value>
                                    </xqx:integerConstantExpr>
                                    <xqx:varRef>
                                      <xqx:name>length</xqx:name>
                                    </xqx:varRef>
                                  </xqx:arguments>
                                </xqx:functionCallExpr>
                              </xqx:elementContent>
                            </xqx:elementConstructor>
                            <xqx:ifThenElseExpr>
                              <xqx:ifClause>
                                <xqx:greaterThanOp>
                                  <xqx:firstOperand>
                                    <xqx:functionCallExpr>
                                      <xqx:functionName>string-length</xqx:functionName>
                                      <xqx:arguments>
                                        <xqx:varRef>
                                          <xqx:name>string</xqx:name>
                                        </xqx:varRef>
                                      </xqx:arguments>
                                    </xqx:functionCallExpr>
                                  </xqx:firstOperand>
                                  <xqx:secondOperand>
                                    <xqx:varRef>
                                      <xqx:name>length</xqx:name>
                                    </xqx:varRef>
                                  </xqx:secondOperand>
                                </xqx:greaterThanOp>
                              </xqx:ifClause>
                              <xqx:thenClause>
                                <xqx:functionCallExpr>
                                  <xqx:functionName xqx:prefix="functx">get-matches-and-non-matches</xqx:functionName>
                                  <xqx:arguments>
                                    <xqx:functionCallExpr>
                                      <xqx:functionName>substring</xqx:functionName>
                                      <xqx:arguments>
                                        <xqx:varRef>
                                          <xqx:name>string</xqx:name>
                                        </xqx:varRef>
                                        <xqx:addOp>
                                          <xqx:firstOperand>
                                            <xqx:varRef>
                                              <xqx:name>length</xqx:name>
                                            </xqx:varRef>
                                          </xqx:firstOperand>
                                          <xqx:secondOperand>
                                            <xqx:integerConstantExpr>
                                              <xqx:value>1</xqx:value>
                                            </xqx:integerConstantExpr>
                                          </xqx:secondOperand>
                                        </xqx:addOp>
                                      </xqx:arguments>
                                    </xqx:functionCallExpr>
                                    <xqx:varRef>
                                      <xqx:name>regex</xqx:name>
                                    </xqx:varRef>
                                  </xqx:arguments>
                                </xqx:functionCallExpr>
                              </xqx:thenClause>
                              <xqx:elseClause>
                                <xqx:sequenceExpr/>
                              </xqx:elseClause>
                            </xqx:ifThenElseExpr>
                          </xqx:sequenceExpr>
                        </xqx:returnClause>
                      </xqx:flworExpr>
                    </xqx:elseClause>
                  </xqx:ifThenElseExpr>
                </xqx:elseClause>
              </xqx:ifThenElseExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">index-of-match-first</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>arg</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>pattern</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
          <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:functionCallExpr>
                <xqx:functionName>matches</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>arg</xqx:name>
                  </xqx:varRef>
                  <xqx:varRef>
                    <xqx:name>pattern</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:addOp>
                <xqx:firstOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>string-length</xqx:functionName>
                    <xqx:arguments>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:functionCallExpr>
                              <xqx:functionName>tokenize</xqx:functionName>
                              <xqx:arguments>
                                <xqx:varRef>
                                  <xqx:name>arg</xqx:name>
                                </xqx:varRef>
                                <xqx:varRef>
                                  <xqx:name>pattern</xqx:name>
                                </xqx:varRef>
                              </xqx:arguments>
                            </xqx:functionCallExpr>
                          </xqx:filterExpr>
                          <xqx:predicates>
                            <xqx:integerConstantExpr>
                              <xqx:value>1</xqx:value>
                            </xqx:integerConstantExpr>
                          </xqx:predicates>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:integerConstantExpr>
                    <xqx:value>1</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:secondOperand>
              </xqx:addOp>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:sequenceExpr/>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">replace-first</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>arg</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>pattern</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>replacement</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:functionCallExpr>
            <xqx:functionName>replace</xqx:functionName>
            <xqx:arguments>
              <xqx:varRef>
                <xqx:name>arg</xqx:name>
              </xqx:varRef>
              <xqx:functionCallExpr>
                <xqx:functionName>concat</xqx:functionName>
                <xqx:arguments>
                  <xqx:stringConstantExpr>
                    <xqx:value>(^.*?)</xqx:value>
                  </xqx:stringConstantExpr>
                  <xqx:varRef>
                    <xqx:name>pattern</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
              <xqx:functionCallExpr>
                <xqx:functionName>concat</xqx:functionName>
                <xqx:arguments>
                  <xqx:stringConstantExpr>
                    <xqx:value>$1</xqx:value>
                  </xqx:stringConstantExpr>
                  <xqx:varRef>
                    <xqx:name>replacement</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:sequenceExpr>
        <xqx:functionCallExpr>
          <xqx:functionName xqx:prefix="functx">get-matches-and-non-matches</xqx:functionName>
          <xqx:arguments>
            <xqx:stringConstantExpr>
              <xqx:value>abc123def</xqx:value>
            </xqx:stringConstantExpr>
            <xqx:stringConstantExpr>
              <xqx:value>\d+</xqx:value>
            </xqx:stringConstantExpr>
          </xqx:arguments>
        </xqx:functionCallExpr>
        <xqx:functionCallExpr>
          <xqx:functionName xqx:prefix="functx">get-matches-and-non-matches</xqx:functionName>
          <xqx:arguments>
            <xqx:stringConstantExpr>
              <xqx:value>abc123def</xqx:value>
            </xqx:stringConstantExpr>
            <xqx:stringConstantExpr>
              <xqx:value>\d</xqx:value>
            </xqx:stringConstantExpr>
          </xqx:arguments>
        </xqx:functionCallExpr>
        <xqx:functionCallExpr>
          <xqx:functionName xqx:prefix="functx">get-matches-and-non-matches</xqx:functionName>
          <xqx:arguments>
            <xqx:stringConstantExpr>
              <xqx:value>abc123def</xqx:value>
            </xqx:stringConstantExpr>
            <xqx:stringConstantExpr>
              <xqx:value>[a-z]{2}</xqx:value>
            </xqx:stringConstantExpr>
          </xqx:arguments>
        </xqx:functionCallExpr>
      </xqx:sequenceExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
