<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:defaultNamespaceDecl>
        <xqx:defaultNamespaceCategory>function</xqx:defaultNamespaceCategory>
        <xqx:uri>http://example.org</xqx:uri>
      </xqx:defaultNamespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName>fact</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>n</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:lessThanOp>
                <xqx:firstOperand>
                  <xqx:varRef>
                    <xqx:name>n</xqx:name>
                  </xqx:varRef>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:integerConstantExpr>
                    <xqx:value>2</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:secondOperand>
              </xqx:lessThanOp>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:integerConstantExpr>
                <xqx:value>1</xqx:value>
              </xqx:integerConstantExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:multiplyOp>
                <xqx:firstOperand>
                  <xqx:varRef>
                    <xqx:name>n</xqx:name>
                  </xqx:varRef>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>fact</xqx:functionName>
                    <xqx:arguments>
                      <xqx:subtractOp>
                        <xqx:firstOperand>
                          <xqx:varRef>
                            <xqx:name>n</xqx:name>
                          </xqx:varRef>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:secondOperand>
                      </xqx:subtractOp>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:secondOperand>
              </xqx:multiplyOp>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:varDecl>
        <xqx:varName>ten</xqx:varName>
        <xqx:varValue>
          <xqx:functionCallExpr>
            <xqx:functionName>fact</xqx:functionName>
            <xqx:arguments>
              <xqx:integerConstantExpr>
                <xqx:value>10</xqx:value>
              </xqx:integerConstantExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:varValue>
      </xqx:varDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:elementConstructor>
        <xqx:tagName>table</xqx:tagName>
        <xqx:elementContent>
          <xqx:flworExpr>
            <xqx:forClause>
              <xqx:forClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>i</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:forExpr>
                  <xqx:rangeSequenceExpr>
                    <xqx:startExpr>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:startExpr>
                    <xqx:endExpr>
                      <xqx:integerConstantExpr>
                        <xqx:value>10</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:endExpr>
                  </xqx:rangeSequenceExpr>
                </xqx:forExpr>
              </xqx:forClauseItem>
            </xqx:forClause>
            <xqx:returnClause>
              <xqx:elementConstructor>
                <xqx:tagName>tr</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>td</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:stringConstantExpr>
                        <xqx:value>10!/</xqx:value>
                      </xqx:stringConstantExpr>
                      <xqx:varRef>
                        <xqx:name>i</xqx:name>
                      </xqx:varRef>
                      <xqx:stringConstantExpr>
                        <xqx:value>! = </xqx:value>
                      </xqx:stringConstantExpr>
                      <xqx:divOp>
                        <xqx:firstOperand>
                          <xqx:varRef>
                            <xqx:name>ten</xqx:name>
                          </xqx:varRef>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:functionCallExpr>
                            <xqx:functionName>fact</xqx:functionName>
                            <xqx:arguments>
                              <xqx:varRef>
                                <xqx:name>i</xqx:name>
                              </xqx:varRef>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:secondOperand>
                      </xqx:divOp>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:elementContent>
      </xqx:elementConstructor>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
