<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">avg-empty-is-zero</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>values</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">anyAtomicType</xqx:atomicType>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>allNodes</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">double</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:functionCallExpr>
                <xqx:functionName>empty</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>allNodes</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:integerConstantExpr>
                <xqx:value>0</xqx:value>
              </xqx:integerConstantExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:divOp>
                <xqx:firstOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>sum</xqx:functionName>
                    <xqx:arguments>
                      <xqx:pathExpr>
                        <xqx:stepExpr>
                          <xqx:filterExpr>
                            <xqx:varRef>
                              <xqx:name>values</xqx:name>
                            </xqx:varRef>
                          </xqx:filterExpr>
                          <xqx:predicates>
                            <xqx:notEqualOp>
                              <xqx:firstOperand>
                                <xqx:functionCallExpr>
                                  <xqx:functionName>string</xqx:functionName>
                                  <xqx:arguments>
                                    <xqx:pathExpr>
                                      <xqx:stepExpr>
                                        <xqx:filterExpr>
                                          <xqx:contextItemExpr/>
                                        </xqx:filterExpr>
                                      </xqx:stepExpr>
                                    </xqx:pathExpr>
                                  </xqx:arguments>
                                </xqx:functionCallExpr>
                              </xqx:firstOperand>
                              <xqx:secondOperand>
                                <xqx:stringConstantExpr>
                                  <xqx:value></xqx:value>
                                </xqx:stringConstantExpr>
                              </xqx:secondOperand>
                            </xqx:notEqualOp>
                          </xqx:predicates>
                        </xqx:stepExpr>
                      </xqx:pathExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>count</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>allNodes</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:secondOperand>
              </xqx:divOp>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>in-xml</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>prices</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>29.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue>10.00</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>39.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue>6.00</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>69.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>49.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue></xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:functionCallExpr>
            <xqx:functionName xqx:prefix="functx">avg-empty-is-zero</xqx:functionName>
            <xqx:arguments>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>in-xml</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>price</xqx:nameTest>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>attribute</xqx:xpathAxis>
                  <xqx:nameTest>discount</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>in-xml</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>price</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
