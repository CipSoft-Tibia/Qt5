<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">odd</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>x</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:equalOp>
                <xqx:firstOperand>
                  <xqx:varRef>
                    <xqx:name>x</xqx:name>
                  </xqx:varRef>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:integerConstantExpr>
                    <xqx:value>0</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:secondOperand>
              </xqx:equalOp>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:functionCallExpr>
                <xqx:functionName>false</xqx:functionName>
                <xqx:arguments>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="local">even</xqx:functionName>
                <xqx:arguments>
                  <xqx:subtractOp>
                    <xqx:firstOperand>
                      <xqx:varRef>
                        <xqx:name>x</xqx:name>
                      </xqx:varRef>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:secondOperand>
                  </xqx:subtractOp>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">even</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>x</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:equalOp>
                <xqx:firstOperand>
                  <xqx:varRef>
                    <xqx:name>x</xqx:name>
                  </xqx:varRef>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:integerConstantExpr>
                    <xqx:value>0</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:secondOperand>
              </xqx:equalOp>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:functionCallExpr>
                <xqx:functionName>true</xqx:functionName>
                <xqx:arguments>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="local">odd</xqx:functionName>
                <xqx:arguments>
                  <xqx:subtractOp>
                    <xqx:firstOperand>
                      <xqx:varRef>
                        <xqx:name>x</xqx:name>
                      </xqx:varRef>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:secondOperand>
                  </xqx:subtractOp>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:functionCallExpr>
        <xqx:functionName xqx:prefix="local">even</xqx:functionName>
        <xqx:arguments>
          <xqx:integerConstantExpr>
            <xqx:value>4</xqx:value>
          </xqx:integerConstantExpr>
        </xqx:arguments>
      </xqx:functionCallExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
