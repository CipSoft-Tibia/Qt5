<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:versionDecl>
    <xqx:version>1.1</xqx:version>
    <!-- encoding: null -->
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">splitter</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>x</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:parenthesizedItemType>
            <xqx:typedFunctionTest>
              <xqx:paramTypeList>
              </xqx:paramTypeList>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
                <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
              </xqx:sequenceType>
            </xqx:typedFunctionTest>
          </xqx:parenthesizedItemType>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:flworExpr>
            <xqx:forClause>
              <xqx:forClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>sep</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:forExpr>
                  <xqx:sequenceExpr>
                    <xqx:stringConstantExpr>
                      <xqx:value>\s</xqx:value>
                    </xqx:stringConstantExpr>
                    <xqx:stringConstantExpr>
                      <xqx:value>,</xqx:value>
                    </xqx:stringConstantExpr>
                    <xqx:stringConstantExpr>
                      <xqx:value>!</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:sequenceExpr>
                </xqx:forExpr>
              </xqx:forClauseItem>
            </xqx:forClause>
            <xqx:returnClause>
              <xqx:inlineFunctionItemExpr>
                <xqx:paramList/>
                <xqx:functionBody>
                  <xqx:flworExpr>
                    <xqx:forClause>
                      <xqx:forClauseItem>
                        <xqx:typedVariableBinding>
                          <xqx:varName>i</xqx:varName>
                        </xqx:typedVariableBinding>
                        <xqx:forExpr>
                          <xqx:functionCallExpr>
                            <xqx:functionName>tokenize</xqx:functionName>
                            <xqx:arguments>
                              <xqx:varRef>
                                <xqx:name>x</xqx:name>
                              </xqx:varRef>
                              <xqx:varRef>
                                <xqx:name>sep</xqx:name>
                              </xqx:varRef>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:forExpr>
                      </xqx:forClauseItem>
                    </xqx:forClause>
                    <xqx:returnClause>
                      <xqx:flworExpr>
                        <xqx:letClause>
                          <xqx:letClauseItem>
                            <xqx:typedVariableBinding>
                              <xqx:varName>f</xqx:varName>
                            </xqx:typedVariableBinding>
                            <xqx:letExpr>
                              <xqx:inlineFunctionItemExpr>
                                <xqx:paramList/>
                                <xqx:functionBody>
                                  <xqx:functionCallExpr>
                                    <xqx:functionName>concat</xqx:functionName>
                                    <xqx:arguments>
                                      <xqx:varRef>
                                        <xqx:name>sep</xqx:name>
                                      </xqx:varRef>
                                      <xqx:stringConstantExpr>
                                        <xqx:value>:</xqx:value>
                                      </xqx:stringConstantExpr>
                                      <xqx:functionCallExpr>
                                        <xqx:functionName>upper-case</xqx:functionName>
                                        <xqx:arguments>
                                          <xqx:varRef>
                                            <xqx:name>i</xqx:name>
                                          </xqx:varRef>
                                        </xqx:arguments>
                                      </xqx:functionCallExpr>
                                    </xqx:arguments>
                                  </xqx:functionCallExpr>
                                </xqx:functionBody>
                              </xqx:inlineFunctionItemExpr>
                            </xqx:letExpr>
                          </xqx:letClauseItem>
                        </xqx:letClause>
                        <xqx:returnClause>
                          <xqx:pathExpr>
                            <xqx:stepExpr>
                              <xqx:filterExpr>
                                <xqx:dynamicFunctionInvocationExpr>
                                  <xqx:functionItem>
                                    <xqx:varRef>
                                      <xqx:name>f</xqx:name>
                                    </xqx:varRef>
                                  </xqx:functionItem>
                                </xqx:dynamicFunctionInvocationExpr>
                              </xqx:filterExpr>
                            </xqx:stepExpr>
                          </xqx:pathExpr>
                        </xqx:returnClause>
                      </xqx:flworExpr>
                    </xqx:returnClause>
                  </xqx:flworExpr>
                </xqx:functionBody>
              </xqx:inlineFunctionItemExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:elementConstructor>
        <xqx:tagName>out</xqx:tagName>
        <xqx:elementContent>
          <xqx:flworExpr>
            <xqx:forClause>
              <xqx:forClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>f</xqx:varName>
                  <xqx:typeDeclaration>
                    <xqx:anyFunctionTest/>
                  </xqx:typeDeclaration>
                </xqx:typedVariableBinding>
                <xqx:forExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="local">splitter</xqx:functionName>
                    <xqx:arguments>
                      <xqx:stringConstantExpr>
                        <xqx:value>How nice! Thank you, I enjoyed that.</xqx:value>
                      </xqx:stringConstantExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:forExpr>
              </xqx:forClauseItem>
            </xqx:forClause>
            <xqx:returnClause>
              <xqx:elementConstructor>
                <xqx:tagName>tokens</xqx:tagName>
                <xqx:elementContent>
                  <xqx:flworExpr>
                    <xqx:forClause>
                      <xqx:forClauseItem>
                        <xqx:typedVariableBinding>
                          <xqx:varName>t</xqx:varName>
                        </xqx:typedVariableBinding>
                        <xqx:forExpr>
                          <xqx:pathExpr>
                            <xqx:stepExpr>
                              <xqx:filterExpr>
                                <xqx:dynamicFunctionInvocationExpr>
                                  <xqx:functionItem>
                                    <xqx:varRef>
                                      <xqx:name>f</xqx:name>
                                    </xqx:varRef>
                                  </xqx:functionItem>
                                </xqx:dynamicFunctionInvocationExpr>
                              </xqx:filterExpr>
                            </xqx:stepExpr>
                          </xqx:pathExpr>
                        </xqx:forExpr>
                      </xqx:forClauseItem>
                    </xqx:forClause>
                    <xqx:returnClause>
                      <xqx:elementConstructor>
                        <xqx:tagName>token</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:varRef>
                            <xqx:name>t</xqx:name>
                          </xqx:varRef>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:returnClause>
                  </xqx:flworExpr>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:elementContent>
      </xqx:elementConstructor>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
