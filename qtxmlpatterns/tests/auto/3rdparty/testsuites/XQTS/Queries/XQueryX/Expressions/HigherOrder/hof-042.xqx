<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:versionDecl>
    <xqx:version>1.1</xqx:version>
    <!-- encoding: null -->
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">lower-case</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>x</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:functionCallExpr>
            <xqx:functionName>concat</xqx:functionName>
            <xqx:arguments>
              <xqx:stringConstantExpr>
                <xqx:value>'</xqx:value>
              </xqx:stringConstantExpr>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="fn">lower-case</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>x</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
              <xqx:stringConstantExpr>
                <xqx:value>'</xqx:value>
              </xqx:stringConstantExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">ops</xqx:functionName>
        <xqx:paramList/>
        <xqx:typeDeclaration>
          <xqx:parenthesizedItemType>
            <xqx:typedFunctionTest>
              <xqx:paramTypeList>
                <xqx:sequenceType>
                  <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
                </xqx:sequenceType>
              </xqx:paramTypeList>
              <xqx:sequenceType>
                <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
              </xqx:sequenceType>
            </xqx:typedFunctionTest>
          </xqx:parenthesizedItemType>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:sequenceExpr>
            <xqx:literalFunctionItemExpr>
              <xqx:QName>upper-case</xqx:QName>
              <xqx:integerConstantExpr>
                <xqx:value>1</xqx:value>
              </xqx:integerConstantExpr>
            </xqx:literalFunctionItemExpr>
            <xqx:literalFunctionItemExpr>
              <xqx:QName xqx:prefix="local">lower-case</xqx:QName>
              <xqx:integerConstantExpr>
                <xqx:value>1</xqx:value>
              </xqx:integerConstantExpr>
            </xqx:literalFunctionItemExpr>
            <xqx:inlineFunctionItemExpr>
              <xqx:paramList>
                <xqx:param>
                  <xqx:varName>x</xqx:varName>
                </xqx:param>
              </xqx:paramList>
              <xqx:functionBody>
                <xqx:functionCallExpr>
                  <xqx:functionName>translate</xqx:functionName>
                  <xqx:arguments>
                    <xqx:varRef>
                      <xqx:name>x</xqx:name>
                    </xqx:varRef>
                    <xqx:stringConstantExpr>
                      <xqx:value>e</xqx:value>
                    </xqx:stringConstantExpr>
                    <xqx:stringConstantExpr>
                      <xqx:value>i</xqx:value>
                    </xqx:stringConstantExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:functionBody>
            </xqx:inlineFunctionItemExpr>
            <xqx:functionCallExpr>
              <xqx:functionName>partial-apply</xqx:functionName>
              <xqx:arguments>
                <xqx:literalFunctionItemExpr>
                  <xqx:QName>substring-before</xqx:QName>
                  <xqx:integerConstantExpr>
                    <xqx:value>2</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:literalFunctionItemExpr>
                <xqx:stringConstantExpr>
                  <xqx:value> </xqx:value>
                </xqx:stringConstantExpr>
                <xqx:integerConstantExpr>
                  <xqx:value>2</xqx:value>
                </xqx:integerConstantExpr>
              </xqx:arguments>
            </xqx:functionCallExpr>
          </xqx:sequenceExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:functionCallExpr>
        <xqx:functionName>string-join</xqx:functionName>
        <xqx:arguments>
          <xqx:flworExpr>
            <xqx:forClause>
              <xqx:forClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>f</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:forExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="local">ops</xqx:functionName>
                    <xqx:arguments>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:forExpr>
              </xqx:forClauseItem>
            </xqx:forClause>
            <xqx:returnClause>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:dynamicFunctionInvocationExpr>
                      <xqx:functionItem>
                        <xqx:varRef>
                          <xqx:name>f</xqx:name>
                        </xqx:varRef>
                      </xqx:functionItem>
                      <xqx:arguments>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:elementConstructor>
                                <xqx:tagName>a</xqx:tagName>
                                <xqx:attributeList>
                                  <xqx:attributeConstructor>
                                    <xqx:attributeName>name</xqx:attributeName>
                                    <xqx:attributeValue>Michael Kay</xqx:attributeValue>
                                  </xqx:attributeConstructor>
                                </xqx:attributeList>
                              </xqx:elementConstructor>
                            </xqx:filterExpr>
                          </xqx:stepExpr>
                          <xqx:stepExpr>
                            <xqx:xpathAxis>attribute</xqx:xpathAxis>
                            <xqx:nameTest>name</xqx:nameTest>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:arguments>
                    </xqx:dynamicFunctionInvocationExpr>
                  </xqx:filterExpr>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
          <xqx:stringConstantExpr>
            <xqx:value>~</xqx:value>
          </xqx:stringConstantExpr>
        </xqx:arguments>
      </xqx:functionCallExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
