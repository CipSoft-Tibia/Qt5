<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:versionDecl>
    <xqx:version>1.1</xqx:version>
    <!-- encoding: null -->
  </xqx:versionDecl>
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">children</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>n</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:anyKindTest/>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:pathExpr>
            <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:varRef>
                  <xqx:name>n</xqx:name>
                </xqx:varRef>
              </xqx:filterExpr>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>child</xqx:xpathAxis>
              <xqx:anyKindTest/>
            </xqx:stepExpr>
          </xqx:pathExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">attributes</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>e</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:anyKindTest/>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:pathExpr>
            <xqx:stepExpr>
              <xqx:filterExpr>
                <xqx:varRef>
                  <xqx:name>e</xqx:name>
                </xqx:varRef>
              </xqx:filterExpr>
            </xqx:stepExpr>
            <xqx:stepExpr>
              <xqx:xpathAxis>attribute</xqx:xpathAxis>
              <xqx:anyKindTest/>
            </xqx:stepExpr>
          </xqx:pathExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">self</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>e</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:anyKindTest/>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:varRef>
            <xqx:name>e</xqx:name>
          </xqx:varRef>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">union</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>f</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:typedFunctionTest>
                <xqx:paramTypeList>
                  <xqx:sequenceType>
                    <xqx:anyKindTest/>
                  </xqx:sequenceType>
                </xqx:paramTypeList>
                <xqx:sequenceType>
                  <xqx:anyKindTest/>
                  <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
                </xqx:sequenceType>
              </xqx:typedFunctionTest>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>g</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:typedFunctionTest>
                <xqx:paramTypeList>
                  <xqx:sequenceType>
                    <xqx:anyKindTest/>
                  </xqx:sequenceType>
                </xqx:paramTypeList>
                <xqx:sequenceType>
                  <xqx:anyKindTest/>
                  <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
                </xqx:sequenceType>
              </xqx:typedFunctionTest>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:typedFunctionTest>
            <xqx:paramTypeList>
              <xqx:sequenceType>
                <xqx:anyKindTest/>
              </xqx:sequenceType>
            </xqx:paramTypeList>
            <xqx:sequenceType>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:sequenceType>
          </xqx:typedFunctionTest>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:inlineFunctionItemExpr>
            <xqx:paramList>
              <xqx:param>
                <xqx:varName>a</xqx:varName>
              </xqx:param>
            </xqx:paramList>
            <xqx:functionBody>
              <xqx:unionOp>
                <xqx:firstOperand>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:dynamicFunctionInvocationExpr>
                          <xqx:functionItem>
                            <xqx:varRef>
                              <xqx:name>f</xqx:name>
                            </xqx:varRef>
                          </xqx:functionItem>
                          <xqx:arguments>
                            <xqx:varRef>
                              <xqx:name>a</xqx:name>
                            </xqx:varRef>
                          </xqx:arguments>
                        </xqx:dynamicFunctionInvocationExpr>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:dynamicFunctionInvocationExpr>
                          <xqx:functionItem>
                            <xqx:varRef>
                              <xqx:name>g</xqx:name>
                            </xqx:varRef>
                          </xqx:functionItem>
                          <xqx:arguments>
                            <xqx:varRef>
                              <xqx:name>a</xqx:name>
                            </xqx:varRef>
                          </xqx:arguments>
                        </xqx:dynamicFunctionInvocationExpr>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:secondOperand>
              </xqx:unionOp>
            </xqx:functionBody>
          </xqx:inlineFunctionItemExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>data</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>a</xqx:tagName>
                <xqx:attributeList>
                  <xqx:attributeConstructor>
                    <xqx:attributeName>aid</xqx:attributeName>
                    <xqx:attributeValue>a</xqx:attributeValue>
                  </xqx:attributeConstructor>
                </xqx:attributeList>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>b</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>bid</xqx:attributeName>
                        <xqx:attributeValue>b</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>b1</xqx:tagName>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>c</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>cid</xqx:attributeName>
                        <xqx:attributeValue>c</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>c1</xqx:tagName>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>f</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="local">union</xqx:functionName>
                <xqx:arguments>
                  <xqx:literalFunctionItemExpr>
                    <xqx:QName xqx:prefix="local">children</xqx:QName>
                    <xqx:integerConstantExpr>
                      <xqx:value>1</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:literalFunctionItemExpr>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="local">union</xqx:functionName>
                    <xqx:arguments>
                      <xqx:literalFunctionItemExpr>
                        <xqx:QName xqx:prefix="local">attributes</xqx:QName>
                        <xqx:integerConstantExpr>
                          <xqx:value>1</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:literalFunctionItemExpr>
                      <xqx:literalFunctionItemExpr>
                        <xqx:QName xqx:prefix="local">self</xqx:QName>
                        <xqx:integerConstantExpr>
                          <xqx:value>1</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:literalFunctionItemExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:elementConstructor>
            <xqx:tagName>out</xqx:tagName>
            <xqx:elementContent>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName>map</xqx:functionName>
                      <xqx:arguments>
                        <xqx:varRef>
                          <xqx:name>f</xqx:name>
                        </xqx:varRef>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:varRef>
                                <xqx:name>data</xqx:name>
                              </xqx:varRef>
                            </xqx:filterExpr>
                          </xqx:stepExpr>
                          <xqx:stepExpr>
                            <xqx:xpathAxis>child</xqx:xpathAxis>
                            <xqx:Wildcard/>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:filterExpr>
                  <xqx:predicates>
                    <xqx:functionCallExpr>
                      <xqx:functionName>not</xqx:functionName>
                      <xqx:arguments>
                        <xqx:instanceOfExpr>
                          <xqx:argExpr>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:filterExpr>
                                  <xqx:contextItemExpr/>
                                </xqx:filterExpr>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:argExpr>
                          <xqx:sequenceType>
                            <xqx:attributeTest/>
                          </xqx:sequenceType>
                        </xqx:instanceOfExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:predicates>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:elementContent>
          </xqx:elementConstructor>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
