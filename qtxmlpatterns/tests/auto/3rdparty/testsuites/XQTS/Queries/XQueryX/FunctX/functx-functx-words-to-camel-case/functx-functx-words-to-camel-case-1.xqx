<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">capitalize-first</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>arg</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
          <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:functionCallExpr>
            <xqx:functionName>concat</xqx:functionName>
            <xqx:arguments>
              <xqx:functionCallExpr>
                <xqx:functionName>upper-case</xqx:functionName>
                <xqx:arguments>
                  <xqx:functionCallExpr>
                    <xqx:functionName>substring</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>arg</xqx:name>
                      </xqx:varRef>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
              <xqx:functionCallExpr>
                <xqx:functionName>substring</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>arg</xqx:name>
                  </xqx:varRef>
                  <xqx:integerConstantExpr>
                    <xqx:value>2</xqx:value>
                  </xqx:integerConstantExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">words-to-camel-case</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>arg</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:functionCallExpr>
            <xqx:functionName>string-join</xqx:functionName>
            <xqx:arguments>
              <xqx:sequenceExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:functionCallExpr>
                        <xqx:functionName>tokenize</xqx:functionName>
                        <xqx:arguments>
                          <xqx:varRef>
                            <xqx:name>arg</xqx:name>
                          </xqx:varRef>
                          <xqx:stringConstantExpr>
                            <xqx:value>\s+</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:filterExpr>
                    <xqx:predicates>
                      <xqx:integerConstantExpr>
                        <xqx:value>1</xqx:value>
                      </xqx:integerConstantExpr>
                    </xqx:predicates>
                  </xqx:stepExpr>
                </xqx:pathExpr>
                <xqx:flworExpr>
                  <xqx:forClause>
                    <xqx:forClauseItem>
                      <xqx:typedVariableBinding>
                        <xqx:varName>word</xqx:varName>
                      </xqx:typedVariableBinding>
                      <xqx:forExpr>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:functionCallExpr>
                                <xqx:functionName>tokenize</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>arg</xqx:name>
                                  </xqx:varRef>
                                  <xqx:stringConstantExpr>
                                    <xqx:value>\s+</xqx:value>
                                  </xqx:stringConstantExpr>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:filterExpr>
                            <xqx:predicates>
                              <xqx:greaterThanOp>
                                <xqx:firstOperand>
                                  <xqx:functionCallExpr>
                                    <xqx:functionName>position</xqx:functionName>
                                    <xqx:arguments>
                                    </xqx:arguments>
                                  </xqx:functionCallExpr>
                                </xqx:firstOperand>
                                <xqx:secondOperand>
                                  <xqx:integerConstantExpr>
                                    <xqx:value>1</xqx:value>
                                  </xqx:integerConstantExpr>
                                </xqx:secondOperand>
                              </xqx:greaterThanOp>
                            </xqx:predicates>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:forExpr>
                    </xqx:forClauseItem>
                  </xqx:forClause>
                  <xqx:returnClause>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="functx">capitalize-first</xqx:functionName>
                      <xqx:arguments>
                        <xqx:varRef>
                          <xqx:name>word</xqx:name>
                        </xqx:varRef>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:returnClause>
                </xqx:flworExpr>
              </xqx:sequenceExpr>
              <xqx:stringConstantExpr>
                <xqx:value></xqx:value>
              </xqx:stringConstantExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:functionCallExpr>
        <xqx:functionName xqx:prefix="functx">words-to-camel-case</xqx:functionName>
        <xqx:arguments>
          <xqx:stringConstantExpr>
            <xqx:value>this Is A Term</xqx:value>
          </xqx:stringConstantExpr>
        </xqx:arguments>
      </xqx:functionCallExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
