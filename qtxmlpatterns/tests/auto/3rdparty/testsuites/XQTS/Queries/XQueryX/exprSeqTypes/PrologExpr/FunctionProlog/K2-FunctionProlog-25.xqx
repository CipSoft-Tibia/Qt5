<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">myFunc</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>recurse</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:functionBody>
          <xqx:sequenceExpr>
            <xqx:computedAttributeConstructor>
              <xqx:tagNameExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName>concat</xqx:functionName>
                  <xqx:arguments>
                    <xqx:stringConstantExpr>
                      <xqx:value>name</xqx:value>
                    </xqx:stringConstantExpr>
                    <xqx:varRef>
                      <xqx:name>recurse</xqx:name>
                    </xqx:varRef>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:tagNameExpr>
              <xqx:valueExpr>
                <xqx:sequenceExpr/>
              </xqx:valueExpr>
            </xqx:computedAttributeConstructor>
            <xqx:ifThenElseExpr>
              <xqx:ifClause>
                <xqx:equalOp>
                  <xqx:firstOperand>
                    <xqx:varRef>
                      <xqx:name>recurse</xqx:name>
                    </xqx:varRef>
                  </xqx:firstOperand>
                  <xqx:secondOperand>
                    <xqx:integerConstantExpr>
                      <xqx:value>0</xqx:value>
                    </xqx:integerConstantExpr>
                  </xqx:secondOperand>
                </xqx:equalOp>
              </xqx:ifClause>
              <xqx:thenClause>
                <xqx:sequenceExpr/>
              </xqx:thenClause>
              <xqx:elseClause>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="local">myFunc</xqx:functionName>
                  <xqx:arguments>
                    <xqx:subtractOp>
                      <xqx:firstOperand>
                        <xqx:varRef>
                          <xqx:name>recurse</xqx:name>
                        </xqx:varRef>
                      </xqx:firstOperand>
                      <xqx:secondOperand>
                        <xqx:integerConstantExpr>
                          <xqx:value>1</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:secondOperand>
                    </xqx:subtractOp>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:elseClause>
            </xqx:ifThenElseExpr>
          </xqx:sequenceExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:elementConstructor>
        <xqx:tagName>e</xqx:tagName>
        <xqx:elementContent>
          <xqx:functionCallExpr>
            <xqx:functionName xqx:prefix="local">myFunc</xqx:functionName>
            <xqx:arguments>
              <xqx:treatExpr>
                <xqx:argExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:sequenceExpr>
                          <xqx:sequenceExpr>
                            <xqx:integerConstantExpr>
                              <xqx:value>2</xqx:value>
                            </xqx:integerConstantExpr>
                            <xqx:functionCallExpr>
                              <xqx:functionName>current-time</xqx:functionName>
                              <xqx:arguments>
                              </xqx:arguments>
                            </xqx:functionCallExpr>
                          </xqx:sequenceExpr>
                        </xqx:sequenceExpr>
                      </xqx:filterExpr>
                      <xqx:predicates>
                        <xqx:integerConstantExpr>
                          <xqx:value>1</xqx:value>
                        </xqx:integerConstantExpr>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:argExpr>
                <xqx:sequenceType>
                  <xqx:atomicType xqx:prefix="xs">integer</xqx:atomicType>
                </xqx:sequenceType>
              </xqx:treatExpr>
            </xqx:arguments>
          </xqx:functionCallExpr>
        </xqx:elementContent>
      </xqx:elementConstructor>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
