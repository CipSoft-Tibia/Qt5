<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:varDecl>
        <xqx:varName>input-context1</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
      <xqx:varDecl>
        <xqx:varName>input-context2</xqx:varName>
        <xqx:external/>
      </xqx:varDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="local">partners</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>company</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">string</xqx:atomicType>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:elementTest/>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:flworExpr>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>c</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:pathExpr>
                    <xqx:stepExpr>
                      <xqx:filterExpr>
                        <xqx:varRef>
                          <xqx:name>input-context2</xqx:name>
                        </xqx:varRef>
                      </xqx:filterExpr>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                      <xqx:anyKindTest/>
                    </xqx:stepExpr>
                    <xqx:stepExpr>
                      <xqx:xpathAxis>child</xqx:xpathAxis>
                      <xqx:nameTest>company</xqx:nameTest>
                      <xqx:predicates>
                        <xqx:equalOp>
                          <xqx:firstOperand>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>child</xqx:xpathAxis>
                                <xqx:nameTest>name</xqx:nameTest>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                          </xqx:firstOperand>
                          <xqx:secondOperand>
                            <xqx:varRef>
                              <xqx:name>company</xqx:name>
                            </xqx:varRef>
                          </xqx:secondOperand>
                        </xqx:equalOp>
                      </xqx:predicates>
                    </xqx:stepExpr>
                  </xqx:pathExpr>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>c</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>partner</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>foobar_partners</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="local">partners</xqx:functionName>
                <xqx:arguments>
                  <xqx:stringConstantExpr>
                    <xqx:value>Foobar Corporation</xqx:value>
                  </xqx:stringConstantExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:forClause>
          <xqx:forClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>item</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:forExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>input-context1</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                  <xqx:anyKindTest/>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>news_item</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:forExpr>
          </xqx:forClauseItem>
        </xqx:forClause>
        <xqx:whereClause>
          <xqx:quantifiedExpr>
            <xqx:quantifier>some</xqx:quantifier>
            <xqx:quantifiedExprInClause>
              <xqx:typedVariableBinding>
                <xqx:varName>t</xqx:varName>
              </xqx:typedVariableBinding>
              <xqx:sourceExpr>
                <xqx:pathExpr>
                  <xqx:stepExpr>
                    <xqx:filterExpr>
                      <xqx:varRef>
                        <xqx:name>item</xqx:name>
                      </xqx:varRef>
                    </xqx:filterExpr>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                    <xqx:anyKindTest/>
                  </xqx:stepExpr>
                  <xqx:stepExpr>
                    <xqx:xpathAxis>child</xqx:xpathAxis>
                    <xqx:nameTest>title</xqx:nameTest>
                  </xqx:stepExpr>
                </xqx:pathExpr>
              </xqx:sourceExpr>
            </xqx:quantifiedExprInClause>
            <xqx:predicateExpr>
              <xqx:orOp>
                <xqx:firstOperand>
                  <xqx:andOp>
                    <xqx:firstOperand>
                      <xqx:functionCallExpr>
                        <xqx:functionName>contains</xqx:functionName>
                        <xqx:arguments>
                          <xqx:functionCallExpr>
                            <xqx:functionName>exactly-one</xqx:functionName>
                            <xqx:arguments>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:varRef>
                                      <xqx:name>t</xqx:name>
                                    </xqx:varRef>
                                  </xqx:filterExpr>
                                </xqx:stepExpr>
                                <xqx:stepExpr>
                                  <xqx:xpathAxis>child</xqx:xpathAxis>
                                  <xqx:textTest/>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                          <xqx:stringConstantExpr>
                            <xqx:value>Foobar Corporation</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:arguments>
                      </xqx:functionCallExpr>
                    </xqx:firstOperand>
                    <xqx:secondOperand>
                      <xqx:quantifiedExpr>
                        <xqx:quantifier>some</xqx:quantifier>
                        <xqx:quantifiedExprInClause>
                          <xqx:typedVariableBinding>
                            <xqx:varName>partner</xqx:varName>
                          </xqx:typedVariableBinding>
                          <xqx:sourceExpr>
                            <xqx:varRef>
                              <xqx:name>foobar_partners</xqx:name>
                            </xqx:varRef>
                          </xqx:sourceExpr>
                        </xqx:quantifiedExprInClause>
                        <xqx:predicateExpr>
                          <xqx:functionCallExpr>
                            <xqx:functionName>contains</xqx:functionName>
                            <xqx:arguments>
                              <xqx:functionCallExpr>
                                <xqx:functionName>exactly-one</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:pathExpr>
                                    <xqx:stepExpr>
                                      <xqx:filterExpr>
                                        <xqx:varRef>
                                          <xqx:name>t</xqx:name>
                                        </xqx:varRef>
                                      </xqx:filterExpr>
                                    </xqx:stepExpr>
                                    <xqx:stepExpr>
                                      <xqx:xpathAxis>child</xqx:xpathAxis>
                                      <xqx:textTest/>
                                    </xqx:stepExpr>
                                  </xqx:pathExpr>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:varRef>
                                      <xqx:name>partner</xqx:name>
                                    </xqx:varRef>
                                  </xqx:filterExpr>
                                </xqx:stepExpr>
                                <xqx:stepExpr>
                                  <xqx:xpathAxis>child</xqx:xpathAxis>
                                  <xqx:textTest/>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:predicateExpr>
                      </xqx:quantifiedExpr>
                    </xqx:secondOperand>
                  </xqx:andOp>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:quantifiedExpr>
                    <xqx:quantifier>some</xqx:quantifier>
                    <xqx:quantifiedExprInClause>
                      <xqx:typedVariableBinding>
                        <xqx:varName>par</xqx:varName>
                      </xqx:typedVariableBinding>
                      <xqx:sourceExpr>
                        <xqx:pathExpr>
                          <xqx:stepExpr>
                            <xqx:filterExpr>
                              <xqx:varRef>
                                <xqx:name>item</xqx:name>
                              </xqx:varRef>
                            </xqx:filterExpr>
                          </xqx:stepExpr>
                          <xqx:stepExpr>
                            <xqx:xpathAxis>descendant-or-self</xqx:xpathAxis>
                            <xqx:anyKindTest/>
                          </xqx:stepExpr>
                          <xqx:stepExpr>
                            <xqx:xpathAxis>child</xqx:xpathAxis>
                            <xqx:nameTest>par</xqx:nameTest>
                          </xqx:stepExpr>
                        </xqx:pathExpr>
                      </xqx:sourceExpr>
                    </xqx:quantifiedExprInClause>
                    <xqx:predicateExpr>
                      <xqx:andOp>
                        <xqx:firstOperand>
                          <xqx:functionCallExpr>
                            <xqx:functionName>contains</xqx:functionName>
                            <xqx:arguments>
                              <xqx:functionCallExpr>
                                <xqx:functionName>string</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>par</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                              <xqx:stringConstantExpr>
                                <xqx:value>Foobar Corporation</xqx:value>
                              </xqx:stringConstantExpr>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:firstOperand>
                        <xqx:secondOperand>
                          <xqx:quantifiedExpr>
                            <xqx:quantifier>some</xqx:quantifier>
                            <xqx:quantifiedExprInClause>
                              <xqx:typedVariableBinding>
                                <xqx:varName>partner</xqx:varName>
                              </xqx:typedVariableBinding>
                              <xqx:sourceExpr>
                                <xqx:varRef>
                                  <xqx:name>foobar_partners</xqx:name>
                                </xqx:varRef>
                              </xqx:sourceExpr>
                            </xqx:quantifiedExprInClause>
                            <xqx:predicateExpr>
                              <xqx:functionCallExpr>
                                <xqx:functionName>contains</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:functionCallExpr>
                                    <xqx:functionName>string</xqx:functionName>
                                    <xqx:arguments>
                                      <xqx:varRef>
                                        <xqx:name>par</xqx:name>
                                      </xqx:varRef>
                                    </xqx:arguments>
                                  </xqx:functionCallExpr>
                                  <xqx:pathExpr>
                                    <xqx:stepExpr>
                                      <xqx:filterExpr>
                                        <xqx:varRef>
                                          <xqx:name>partner</xqx:name>
                                        </xqx:varRef>
                                      </xqx:filterExpr>
                                    </xqx:stepExpr>
                                    <xqx:stepExpr>
                                      <xqx:xpathAxis>child</xqx:xpathAxis>
                                      <xqx:textTest/>
                                    </xqx:stepExpr>
                                  </xqx:pathExpr>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:predicateExpr>
                          </xqx:quantifiedExpr>
                        </xqx:secondOperand>
                      </xqx:andOp>
                    </xqx:predicateExpr>
                  </xqx:quantifiedExpr>
                </xqx:secondOperand>
              </xqx:orOp>
            </xqx:predicateExpr>
          </xqx:quantifiedExpr>
        </xqx:whereClause>
        <xqx:returnClause>
          <xqx:elementConstructor>
            <xqx:tagName>news_item</xqx:tagName>
            <xqx:elementContent>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>item</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>title</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
              <xqx:pathExpr>
                <xqx:stepExpr>
                  <xqx:filterExpr>
                    <xqx:varRef>
                      <xqx:name>item</xqx:name>
                    </xqx:varRef>
                  </xqx:filterExpr>
                </xqx:stepExpr>
                <xqx:stepExpr>
                  <xqx:xpathAxis>child</xqx:xpathAxis>
                  <xqx:nameTest>date</xqx:nameTest>
                </xqx:stepExpr>
              </xqx:pathExpr>
            </xqx:elementContent>
          </xqx:elementConstructor>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
