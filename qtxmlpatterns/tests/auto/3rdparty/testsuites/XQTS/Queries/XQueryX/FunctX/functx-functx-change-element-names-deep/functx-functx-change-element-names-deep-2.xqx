<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:namespaceDecl>
        <xqx:prefix>dty</xqx:prefix>
        <xqx:uri>http://datypic.com</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">change-element-names-deep</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>nodes</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>oldNames</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">QName</xqx:atomicType>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>newNames</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:atomicType xqx:prefix="xs">QName</xqx:atomicType>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:anyKindTest/>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:notEqualOp>
                <xqx:firstOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>count</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>oldNames</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>count</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>newNames</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:secondOperand>
              </xqx:notEqualOp>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:functionCallExpr>
                <xqx:functionName>error</xqx:functionName>
                <xqx:arguments>
                  <xqx:functionCallExpr>
                    <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                    <xqx:arguments>
                      <xqx:stringConstantExpr>
                        <xqx:value>functx:Different_number_of_names</xqx:value>
                      </xqx:stringConstantExpr>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:flworExpr>
                <xqx:forClause>
                  <xqx:forClauseItem>
                    <xqx:typedVariableBinding>
                      <xqx:varName>node</xqx:varName>
                    </xqx:typedVariableBinding>
                    <xqx:forExpr>
                      <xqx:varRef>
                        <xqx:name>nodes</xqx:name>
                      </xqx:varRef>
                    </xqx:forExpr>
                  </xqx:forClauseItem>
                </xqx:forClause>
                <xqx:returnClause>
                  <xqx:ifThenElseExpr>
                    <xqx:ifClause>
                      <xqx:instanceOfExpr>
                        <xqx:argExpr>
                          <xqx:varRef>
                            <xqx:name>node</xqx:name>
                          </xqx:varRef>
                        </xqx:argExpr>
                        <xqx:sequenceType>
                          <xqx:elementTest/>
                        </xqx:sequenceType>
                      </xqx:instanceOfExpr>
                    </xqx:ifClause>
                    <xqx:thenClause>
                      <xqx:computedElementConstructor>
                        <xqx:tagNameExpr>
                          <xqx:functionCallExpr>
                            <xqx:functionName xqx:prefix="functx">if-empty</xqx:functionName>
                            <xqx:arguments>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:varRef>
                                      <xqx:name>newNames</xqx:name>
                                    </xqx:varRef>
                                  </xqx:filterExpr>
                                  <xqx:predicates>
                                    <xqx:functionCallExpr>
                                      <xqx:functionName>index-of</xqx:functionName>
                                      <xqx:arguments>
                                        <xqx:varRef>
                                          <xqx:name>oldNames</xqx:name>
                                        </xqx:varRef>
                                        <xqx:functionCallExpr>
                                          <xqx:functionName>node-name</xqx:functionName>
                                          <xqx:arguments>
                                            <xqx:varRef>
                                              <xqx:name>node</xqx:name>
                                            </xqx:varRef>
                                          </xqx:arguments>
                                        </xqx:functionCallExpr>
                                      </xqx:arguments>
                                    </xqx:functionCallExpr>
                                  </xqx:predicates>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                              <xqx:functionCallExpr>
                                <xqx:functionName>node-name</xqx:functionName>
                                <xqx:arguments>
                                  <xqx:varRef>
                                    <xqx:name>node</xqx:name>
                                  </xqx:varRef>
                                </xqx:arguments>
                              </xqx:functionCallExpr>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:tagNameExpr>
                        <xqx:contentExpr>
                          <xqx:sequenceExpr>
                            <xqx:pathExpr>
                              <xqx:stepExpr>
                                <xqx:filterExpr>
                                  <xqx:varRef>
                                    <xqx:name>node</xqx:name>
                                  </xqx:varRef>
                                </xqx:filterExpr>
                              </xqx:stepExpr>
                              <xqx:stepExpr>
                                <xqx:xpathAxis>attribute</xqx:xpathAxis>
                                <xqx:Wildcard/>
                              </xqx:stepExpr>
                            </xqx:pathExpr>
                            <xqx:functionCallExpr>
                              <xqx:functionName xqx:prefix="functx">change-element-names-deep</xqx:functionName>
                              <xqx:arguments>
                                <xqx:pathExpr>
                                  <xqx:stepExpr>
                                    <xqx:filterExpr>
                                      <xqx:varRef>
                                        <xqx:name>node</xqx:name>
                                      </xqx:varRef>
                                    </xqx:filterExpr>
                                  </xqx:stepExpr>
                                  <xqx:stepExpr>
                                    <xqx:xpathAxis>child</xqx:xpathAxis>
                                    <xqx:anyKindTest/>
                                  </xqx:stepExpr>
                                </xqx:pathExpr>
                                <xqx:varRef>
                                  <xqx:name>oldNames</xqx:name>
                                </xqx:varRef>
                                <xqx:varRef>
                                  <xqx:name>newNames</xqx:name>
                                </xqx:varRef>
                              </xqx:arguments>
                            </xqx:functionCallExpr>
                          </xqx:sequenceExpr>
                        </xqx:contentExpr>
                      </xqx:computedElementConstructor>
                    </xqx:thenClause>
                    <xqx:elseClause>
                      <xqx:ifThenElseExpr>
                        <xqx:ifClause>
                          <xqx:instanceOfExpr>
                            <xqx:argExpr>
                              <xqx:varRef>
                                <xqx:name>node</xqx:name>
                              </xqx:varRef>
                            </xqx:argExpr>
                            <xqx:sequenceType>
                              <xqx:documentTest/>
                            </xqx:sequenceType>
                          </xqx:instanceOfExpr>
                        </xqx:ifClause>
                        <xqx:thenClause>
                          <xqx:functionCallExpr>
                            <xqx:functionName xqx:prefix="functx">change-element-names-deep</xqx:functionName>
                            <xqx:arguments>
                              <xqx:pathExpr>
                                <xqx:stepExpr>
                                  <xqx:filterExpr>
                                    <xqx:varRef>
                                      <xqx:name>node</xqx:name>
                                    </xqx:varRef>
                                  </xqx:filterExpr>
                                </xqx:stepExpr>
                                <xqx:stepExpr>
                                  <xqx:xpathAxis>child</xqx:xpathAxis>
                                  <xqx:anyKindTest/>
                                </xqx:stepExpr>
                              </xqx:pathExpr>
                              <xqx:varRef>
                                <xqx:name>oldNames</xqx:name>
                              </xqx:varRef>
                              <xqx:varRef>
                                <xqx:name>newNames</xqx:name>
                              </xqx:varRef>
                            </xqx:arguments>
                          </xqx:functionCallExpr>
                        </xqx:thenClause>
                        <xqx:elseClause>
                          <xqx:varRef>
                            <xqx:name>node</xqx:name>
                          </xqx:varRef>
                        </xqx:elseClause>
                      </xqx:ifThenElseExpr>
                    </xqx:elseClause>
                  </xqx:ifThenElseExpr>
                </xqx:returnClause>
              </xqx:flworExpr>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">if-empty</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>arg</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyItemType/>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>value</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyItemType/>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:anyItemType/>
          <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:ifThenElseExpr>
            <xqx:ifClause>
              <xqx:notEqualOp>
                <xqx:firstOperand>
                  <xqx:functionCallExpr>
                    <xqx:functionName>string</xqx:functionName>
                    <xqx:arguments>
                      <xqx:varRef>
                        <xqx:name>arg</xqx:name>
                      </xqx:varRef>
                    </xqx:arguments>
                  </xqx:functionCallExpr>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:stringConstantExpr>
                    <xqx:value></xqx:value>
                  </xqx:stringConstantExpr>
                </xqx:secondOperand>
              </xqx:notEqualOp>
            </xqx:ifClause>
            <xqx:thenClause>
              <xqx:functionCallExpr>
                <xqx:functionName>data</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>arg</xqx:name>
                  </xqx:varRef>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:thenClause>
            <xqx:elseClause>
              <xqx:varRef>
                <xqx:name>value</xqx:name>
              </xqx:varRef>
            </xqx:elseClause>
          </xqx:ifThenElseExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>in-xml-1</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>in-xml</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>a</xqx:tagName>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>b</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>b</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                      <xqx:elementConstructor>
                        <xqx:tagName>c</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:stringConstantExpr>
                            <xqx:value>c</xqx:value>
                          </xqx:stringConstantExpr>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:flworExpr>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>in-xml-2</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:elementConstructor>
                    <xqx:tagName>in-xml</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:namespaceDeclaration>
                        <xqx:prefix>dty</xqx:prefix>
                        <xqx:uri>http://datypic.com</xqx:uri>
                      </xqx:namespaceDeclaration>
                    </xqx:attributeList>
                    <xqx:elementContent>
                      <xqx:elementConstructor>
                        <xqx:tagName>a</xqx:tagName>
                        <xqx:elementContent>
                          <xqx:elementConstructor>
                            <xqx:tagName xqx:prefix="dty">b</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:stringConstantExpr>
                                <xqx:value>b</xqx:value>
                              </xqx:stringConstantExpr>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                          <xqx:elementConstructor>
                            <xqx:tagName>c</xqx:tagName>
                            <xqx:elementContent>
                              <xqx:stringConstantExpr>
                                <xqx:value>c</xqx:value>
                              </xqx:stringConstantExpr>
                            </xqx:elementContent>
                          </xqx:elementConstructor>
                        </xqx:elementContent>
                      </xqx:elementConstructor>
                    </xqx:elementContent>
                  </xqx:elementConstructor>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:functionCallExpr>
                <xqx:functionName xqx:prefix="functx">change-element-names-deep</xqx:functionName>
                <xqx:arguments>
                  <xqx:varRef>
                    <xqx:name>in-xml-1</xqx:name>
                  </xqx:varRef>
                  <xqx:sequenceExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>a</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>b</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>c</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:sequenceExpr>
                  <xqx:sequenceExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>x</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>y</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                    <xqx:functionCallExpr>
                      <xqx:functionName xqx:prefix="xs">QName</xqx:functionName>
                      <xqx:arguments>
                        <xqx:stringConstantExpr>
                          <xqx:value>z</xqx:value>
                        </xqx:stringConstantExpr>
                      </xqx:arguments>
                    </xqx:functionCallExpr>
                  </xqx:sequenceExpr>
                </xqx:arguments>
              </xqx:functionCallExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
