<?xml version="1.0"?>
<xqx:module xmlns:xqx="http://www.w3.org/2005/XQueryX"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2005/XQueryX
                                http://www.w3.org/2005/XQueryX/xqueryx.xsd">
  <xqx:mainModule>
    <xqx:prolog>
      <xqx:namespaceDecl>
        <xqx:prefix>functx</xqx:prefix>
        <xqx:uri>http://www.example.com/</xqx:uri>
      </xqx:namespaceDecl>
      <xqx:functionDecl>
        <xqx:functionName xqx:prefix="functx">is-node-in-sequence</xqx:functionName>
        <xqx:paramList>
          <xqx:param>
            <xqx:varName>node</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>?</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
          <xqx:param>
            <xqx:varName>seq</xqx:varName>
            <xqx:typeDeclaration>
              <xqx:anyKindTest/>
              <xqx:occurrenceIndicator>*</xqx:occurrenceIndicator>
            </xqx:typeDeclaration>
          </xqx:param>
        </xqx:paramList>
        <xqx:typeDeclaration>
          <xqx:atomicType xqx:prefix="xs">boolean</xqx:atomicType>
        </xqx:typeDeclaration>
        <xqx:functionBody>
          <xqx:quantifiedExpr>
            <xqx:quantifier>some</xqx:quantifier>
            <xqx:quantifiedExprInClause>
              <xqx:typedVariableBinding>
                <xqx:varName>nodeInSeq</xqx:varName>
              </xqx:typedVariableBinding>
              <xqx:sourceExpr>
                <xqx:varRef>
                  <xqx:name>seq</xqx:name>
                </xqx:varRef>
              </xqx:sourceExpr>
            </xqx:quantifiedExprInClause>
            <xqx:predicateExpr>
              <xqx:isOp>
                <xqx:firstOperand>
                  <xqx:varRef>
                    <xqx:name>nodeInSeq</xqx:name>
                  </xqx:varRef>
                </xqx:firstOperand>
                <xqx:secondOperand>
                  <xqx:varRef>
                    <xqx:name>node</xqx:name>
                  </xqx:varRef>
                </xqx:secondOperand>
              </xqx:isOp>
            </xqx:predicateExpr>
          </xqx:quantifiedExpr>
        </xqx:functionBody>
      </xqx:functionDecl>
    </xqx:prolog>
    <xqx:queryBody>
      <xqx:flworExpr>
        <xqx:letClause>
          <xqx:letClauseItem>
            <xqx:typedVariableBinding>
              <xqx:varName>in-xml</xqx:varName>
            </xqx:typedVariableBinding>
            <xqx:letExpr>
              <xqx:elementConstructor>
                <xqx:tagName>prices</xqx:tagName>
                <xqx:elementContent>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>29.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue>10.00</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>39.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue>6.00</xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>49.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue></xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                </xqx:elementContent>
              </xqx:elementConstructor>
            </xqx:letExpr>
          </xqx:letClauseItem>
        </xqx:letClause>
        <xqx:returnClause>
          <xqx:flworExpr>
            <xqx:letClause>
              <xqx:letClauseItem>
                <xqx:typedVariableBinding>
                  <xqx:varName>aPrice</xqx:varName>
                </xqx:typedVariableBinding>
                <xqx:letExpr>
                  <xqx:elementConstructor>
                    <xqx:tagName>price</xqx:tagName>
                    <xqx:attributeList>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>value</xqx:attributeName>
                        <xqx:attributeValue>49.99</xqx:attributeValue>
                      </xqx:attributeConstructor>
                      <xqx:attributeConstructor>
                        <xqx:attributeName>discount</xqx:attributeName>
                        <xqx:attributeValue></xqx:attributeValue>
                      </xqx:attributeConstructor>
                    </xqx:attributeList>
                  </xqx:elementConstructor>
                </xqx:letExpr>
              </xqx:letClauseItem>
            </xqx:letClause>
            <xqx:returnClause>
              <xqx:sequenceExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="functx">is-node-in-sequence</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>in-xml</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>price</xqx:nameTest>
                        <xqx:predicates>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:predicates>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>in-xml</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>price</xqx:nameTest>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="functx">is-node-in-sequence</xqx:functionName>
                  <xqx:arguments>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>in-xml</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>price</xqx:nameTest>
                        <xqx:predicates>
                          <xqx:integerConstantExpr>
                            <xqx:value>1</xqx:value>
                          </xqx:integerConstantExpr>
                        </xqx:predicates>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                    <xqx:varRef>
                      <xqx:name>in-xml</xqx:name>
                    </xqx:varRef>
                  </xqx:arguments>
                </xqx:functionCallExpr>
                <xqx:functionCallExpr>
                  <xqx:functionName xqx:prefix="functx">is-node-in-sequence</xqx:functionName>
                  <xqx:arguments>
                    <xqx:varRef>
                      <xqx:name>aPrice</xqx:name>
                    </xqx:varRef>
                    <xqx:pathExpr>
                      <xqx:stepExpr>
                        <xqx:filterExpr>
                          <xqx:varRef>
                            <xqx:name>in-xml</xqx:name>
                          </xqx:varRef>
                        </xqx:filterExpr>
                      </xqx:stepExpr>
                      <xqx:stepExpr>
                        <xqx:xpathAxis>child</xqx:xpathAxis>
                        <xqx:nameTest>price</xqx:nameTest>
                      </xqx:stepExpr>
                    </xqx:pathExpr>
                  </xqx:arguments>
                </xqx:functionCallExpr>
              </xqx:sequenceExpr>
            </xqx:returnClause>
          </xqx:flworExpr>
        </xqx:returnClause>
      </xqx:flworExpr>
    </xqx:queryBody>
  </xqx:mainModule>
</xqx:module>
