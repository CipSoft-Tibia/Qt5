/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example quickplayer
    \title Quick Player
    \ingroup examples-qtwinextras
    \brief Demonstrates using QtWinExtras in Qt Quick.

    \image qtwinextras-quickplayer-composited.png Screenshot of the Quick Player example

    The Quick Player example demonstrates how to use the various features
    provided by the QtWinExtras module in Qt Quick.

    \note This example is a simplified Qt Quick-based version of the \l {Music Player} example.

    \section1 DWM Features

    The example uses Windows DWM (Desktop Window Manager) features to visually
    integrate the window content to the window frame and to make the window
    translucent and blurred.

    The example applies a different look based on whether composition is enabled
    or not. When composition is enabled, the window is made translucent and
    the window frame is extended to the client area to make the window content
    integrate seamlessly to the window frame as shown above.

    \snippet quickplayer/qml/main.qml dwm

    When composition is disabled, the colorization color is used as a background
    color for the window.

    \snippet quickplayer/qml/main.qml color

    The following screenshot illustrates how the Quick Player example looks when
    composition is disabled.

    \image qtwinextras-quickplayer-non-composited.png Screenshot of the Quick Player example

    \section1 Taskbar Overlay and Progress

    The example uses Windows Taskbar for two things; it sets an overlay icon
    that represents the current music playback state, and it indicates the
    playback progress in the taskbar button.

    \image qtwinextras-quickplayer-taskbar.png Screenshot of the Quick Player taskbar

    The following snippet shows how the taskbar button is prepared. The taskbar progress
    indicator and the overlay icon are bound to the music playback, and will automatically
    change whenever the state or attributes of the music playback change.

    \snippet quickplayer/qml/main.qml taskbar

    \section1 Thumbnail Toolbar

    \image qtwinextras-quickplayer-thumbnail.png Screenshot of the Quick Player thumbnail

    The Windows Thumbnail Toolbar is used for providing basic music playback
    controls. These controls can be used to control the application without
    having to activate the application. The thumbnail toolbar buttons are bound
    to the music playback, and will automatically change whenever the state or
    attributes of the music playback changes.

    \snippet quickplayer/qml/main.qml thumbbar
*/
