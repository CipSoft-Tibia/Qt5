/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \group qtquickextras-examples
    \ingroup all-examples
    \title Qt Quick Extras Examples
    \brief A collection of examples for \l{Qt Quick Extras}.

    Below you will find a list with examples for \l{Qt Quick Extras}.
*/

/*!
    \example gallery
    \title Qt Quick Extras - Gallery
    \ingroup qtquickextras-examples
    \brief An interactive showcase of the various controls.
    \image qtquickextras-example-gallery.png

    This example project demonstrates the various UI controls provided by
    \l{Qt Quick Extras}.
*/

/*!
    \example dashboard
    \title Qt Quick Extras - Dashboard
    \ingroup qtquickextras-examples
    \brief A car dashboard created using several CircularGauge controls.
    \image qtquickextras-example-dashboard.png

    This example project demonstrates the use of \l CircularGauge to create a car dashboard.


    The ValueSource type generates random data for testing the dashboard.
    The data is random but there is a logical link between some of them,
    for example, \c kph and \c rpm.


    \snippet dashboard/qml/ValueSource.qml 0

    It runs a looping SequentialAnimation that sets the values of
    the properties over time.

    The SequentialAnimation object consists of several ParallelAnimation
    objects, which in turn consist of two NumberAnimations, one for
    \c kph and one for \c rpm. Both let the value develop to a certain
    value over a specified \c duration with the Easing type \c Easing.InOutSine

    \snippet dashboard/qml/ValueSource.qml 1

    The flashTimer object switches the turn signals \c on or \c off.

    \snippet dashboard/qml/TurnIndicator.qml 1

    The \c paintOutlinePath(ctx) method does the actual painting of the arrow
    for the turn signal.

    \snippet dashboard/qml/TurnIndicator.qml 2

    The screen consists of a \c foregroundCanvas and a \c backgroundCanvas.
    \c foregroundCanvas displays the green turn signal if the \c on and
    \c flashing booleans are \c true.

    \snippet dashboard/qml/TurnIndicator.qml 3
*/

*/

/*!
    \example flat
    \title Qt Quick Extras - Flat
    \ingroup qtquickextras-examples
    \brief An interactive showcase of the flat style.
    \image qtquickextras-example-flat.png

    This example project demonstrates the Flat style, a modern look for
    both the Qt Quick Controls and Qt Quick Extras.
*/
