/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtquickcontrols-platformnotes.html
    \title Qt Quick Controls 1 Platform Notes
    \brief Platform specific notes for Qt Quick Controls.

    This page contains platform specific notes for creating applications
    that use \l{Qt Quick Controls 1}.

    \section1 Android Style

    Qt 5.4 introduced a native Android style for Qt Quick Controls.

    \image qtquickcontrols-example-gallery-android.png

    \note The Android style requires Android 3.0 (API level 11) or later.

    The style is automatically selected and deployed on Android. See \l{Getting Started
    with Qt for Android} and \l{Deploying an Application on Android} for
    more details on the Android essentials.

    \section2 Android Themes

    Applications may choose a specific \l{http://developer.android.com/design/style/themes.html}
    {Android theme} by specifying it in \l{AndroidManifest.xml}.

    \image qtquickcontrols-example-gallery-android-dark.png

    The following example sets a dark Holo theme, and the result can be
    seen in the screenshot above.

    \code
    <manifest ...>
      <application ... android:theme="@android:style/Theme.Holo">
        ...
      </application>
      ...
    </manifest>
    \endcode

    \section2 Action Bar

    The \l{http://developer.android.com/guide/topics/ui/actionbar.html}
    {Action Bar} is a special Android control that provides many key features
    including various navigation modes, actions, an options menu, a back
    button, and also displays the application icon and title.

    Unlike \l{Qt Widgets}, Qt Quick Controls 1 do not use the native action
    bar on Android. ToolBar and MenuBar are offered as a cross-platform
    replacement. They are unified to a single "action bar" when assigned to
    the appropriate ApplicationWindow properties.

    The advantage of a non-native ToolBar is that it can contain any child
    items declared in QML. Just to name a few possibilities:
    \list
    \li ToolButton actions,
    \li a TextField as a search field,
    \li a ComboBox for navigation, and
    \li a ProgressBar for displaying progress.
    \endlist
*/
