// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \class QDesignerOptionsPageInterface

    \brief The QDesignerOptionsPageInterface provides an interface for integrating \QD's
           options pages into IDE option dialogs.

    Plugin-based IDE's typically have options dialogs for which the plugins can provide
    widgets to be shown for example in a tab-widget. The widgets are created on
    demand when the user activates a page.

    In order to do this for \QD, a list of QDesignerOptionsPageInterface objects
    can be obtained from QDesignerFormEditorInterface and registered with the option
    dialog. When the respective tab is activated, createPage() is invoked to
    create the widget. To apply the modified settings, apply() is called.
    finish() is called when the dialog closes.

    \sa QDesignerFormEditorInterface::optionsPages(), QDesignerFormEditorInterface::setOptionsPages()

    \internal
    \inmodule QtDesigner
    \since 5.0
*/

/*!
    \fn QDesignerOptionsPageInterface::~QDesignerOptionsPageInterface()

    Destroys the QDesignerOptionsPageInterface object.
*/

/*!
    \fn QString QDesignerOptionsPageInterface::name() const

    Returns the name of the page, which can for example be used as a tab title.
*/

/*!
    \fn QWidget *QDesignerOptionsPageInterface::createPage(QWidget *parent)

    Creates the widget of the page parented on \a parent.
*/

/*!
    \fn QDesignerOptionsPageInterface::apply()

    This function should be called when the user clicks \gui{OK} or \gui{Apply} to
    apply the modified settings.
*/

/*!
    \fn QDesignerOptionsPageInterface::finish()

    This function should be called when the option dialog is closed.
*/
