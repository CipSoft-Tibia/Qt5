<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <class name="TemplatedClass" href="templatedclass.html" status="active" access="public" location="templated_callables.h" documented="true" module="TestQDoc">
            <description>
                <para>Containing record for the tested methods.</para>
            </description>
            <function name="templated_method_with_defaulted_non_type_template_parameter" fullname="TemplatedClass::templated_method_with_defaulted_non_type_template_parameter" href="templatedclass.html#templated_method_with_defaulted_non_type_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_defaulted_non_type_template_parameter()">
                <description>
                    <para>A templated method under a templated class with a defaulted non type template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_defaulted_template_template_parameter" fullname="TemplatedClass::templated_method_with_defaulted_template_template_parameter" href="templatedclass.html#templated_method_with_defaulted_template_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_defaulted_template_template_parameter(Container&lt;U, size&gt;)">
                <parameter type="Container&lt;U, size&gt;" name="" default=""/>
                <description>
                    <para>A templated method under a templated class with a defaulted template template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_defaulted_type_template_parameter" fullname="TemplatedClass::templated_method_with_defaulted_type_template_parameter" href="templatedclass.html#templated_method_with_defaulted_type_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_defaulted_type_template_parameter(U)">
                <parameter type="U" name="" default=""/>
                <description>
                    <para>A templated method under a templated class with a defaulted type template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_non_type_template_parameter" fullname="TemplatedClass::templated_method_with_non_type_template_parameter" href="templatedclass.html#templated_method_with_non_type_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_non_type_template_parameter()">
                <description>
                    <para>A templated method under a templated class with a non-defaulted non type template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_non_type_template_parameter_pack" fullname="TemplatedClass::templated_method_with_non_type_template_parameter_pack" href="templatedclass.html#templated_method_with_non_type_template_parameter_pack" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_non_type_template_parameter_pack()">
                <description>
                    <para>A templated method under a templated class with a non type template parameter pack.</para>
                </description>
            </function>
            <function name="templated_method_with_placeholder_non_type_template_parameter" fullname="TemplatedClass::templated_method_with_placeholder_non_type_template_parameter" href="templatedclass.html#templated_method_with_placeholder_non_type_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_placeholder_non_type_template_parameter()">
                <description>
                    <para>A templated method under a templated class with a placeholder non type template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_template_template_parameter" fullname="TemplatedClass::templated_method_with_template_template_parameter" href="templatedclass.html#templated_method_with_template_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_template_template_parameter(X&lt;U&gt;)">
                <parameter type="X&lt;U&gt;" name="" default=""/>
                <description>
                    <para>A templated method under a templated class with a non-defaulted template template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_template_template_parameter_pack" fullname="TemplatedClass::templated_method_with_template_template_parameter_pack" href="templatedclass.html#templated_method_with_template_template_parameter_pack" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_template_template_parameter_pack(Container&lt;U&gt;...)">
                <parameter type="Container&lt;U&gt;..." name="" default=""/>
                <description>
                    <para>A templated method under a templated class with a template template parameter pack.</para>
                </description>
            </function>
            <function name="templated_method_with_type_template_parameter" fullname="TemplatedClass::templated_method_with_type_template_parameter" href="templatedclass.html#templated_method_with_type_template_parameter" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_type_template_parameter(U)">
                <parameter type="U" name="" default=""/>
                <description>
                    <para>A templated method under a templated class with a non-defaulted type template parameter.</para>
                </description>
            </function>
            <function name="templated_method_with_type_template_parameter_pack" fullname="TemplatedClass::templated_method_with_type_template_parameter_pack" href="templatedclass.html#templated_method_with_type_template_parameter_pack" status="active" access="public" location="templated_callables.h" documented="true" meta="plain" type="void" signature="void templated_method_with_type_template_parameter_pack(Ts...)">
                <parameter type="Ts..." name="" default=""/>
                <description>
                    <para>A templated method under a templated class with a type template parameter pack.</para>
                </description>
            </function>
        </class>
    </document>
</WebXML>
