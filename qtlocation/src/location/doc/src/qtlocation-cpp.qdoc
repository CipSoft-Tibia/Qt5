/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtlocation-cpp.html
\title Qt Location C++ API
\brief Information about the Qt Location C++ API

The Location API provides a library for mapping, navigation and place information.

\tableofcontents

The Qt Location API provides the developer with a set of functions to interact
with maps, navigational data and places of interest. This is particularly useful
when associated with current position information which can be retrieved via the
\l QtPositioning module.

With the Maps API we can associate a position with a map in various formats supplied by a backend.
Then the Places API could be used to populate places on the Map or even
specify the current position as a place of interest and associate it with
an icon, contact details and other information.

The following table provides links to more detailed information on sections of the
Qt Location C++ API.

\table
    \row
        \li \l {Maps and Navigation (C++)}{Maps and Navigation}
        \li Displaying maps and finding routes.
    \row
        \li \l {Places (C++)} {Places}
        \li Searching for and managing points of interest.
    \row
        \li \l {Qt Location GeoServices}{Geoservices Plugin Implementation}
        \li Implement new geoservices and positioning plugins.
\endtable


\section1 Geoservice Provider Classes

    \annotatedlist QtLocation-common


\section1 Maps and Navigation Classes

Currently it is not possible to interact with maps data via C++. The only available interface is the \l {Maps and Navigation (QML)} API.

    \annotatedlist QtLocation-maps

    \annotatedlist QtLocation-routing

    \annotatedlist QtLocation-geocoding


\section1 Places Classes

    \annotatedlist QtLocation-places


\section1 Geoservices and Positioning Plugin Classes

    \annotatedlist QtLocation-impl

*/

