/****************************************************************************
**
** Copyright (C) 2014 NVIDIA Corporation.
** Copyright (C) 2019 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt 3D Studio.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#ifndef VERTEX_FRAGMENT_BASE_GLSLLIB
#define VERTEX_FRAGMENT_BASE_GLSLLIB

 //FRAGMENT_SHADER
 uniform vec3 cameraPosition; //position in world space of the camera

// add global variables
vec3 normal;
vec3 surfNormal;
vec3 texCoord0;
vec3 tangent;
vec3 binormal;
vec3 viewDir;


// add shader input

void initializeBaseFragmentVariables()
{
  normal = normalize( varNormal );
  surfNormal = normalize( varNormal );

  texCoord0 = vec3( varTexCoord0.xy, 1.0 );
  tangent = normalize( varTangent );

  binormal  = normalize( varBinormal );

  viewDir = normalize( cameraPosition - varWorldPos );
}

#endif
