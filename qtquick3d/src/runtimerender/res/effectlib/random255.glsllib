/****************************************************************************
**
** Copyright (C) 2014 NVIDIA Corporation.
** Copyright (C) 2019 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt 3D Studio.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

// random [0..255] calculated by some simple Linear Congruential Generator (LCG)
// Verfied, that each function is just a permutation of {0,...,255}, that is, with 0<=x<=255, each value in [0,255] is returned once
int random255X( in int x )
{
  return( ( ( 8365 * ( x & 0xFF ) + 32285 ) >> 0 ) & 0xFF );
}

int random255Y( in int x )
{
  return( ( ( 3152 * ( x & 0xFF ) + 11819 ) >> 4 ) & 0xFF );
}

int random255Z( in int x )
{
  return( ( ( 119 * ( x & 0xFF ) + 18747 ) >> 0 ) & 0xFF );
}

int random255W( in int x )
{
  return( ( ( 26814 * ( x & 0xFF ) + 9642 ) >> 1 ) & 0xFF );
}

ivec3 random255XYZ( in ivec3 xyz )
{
  return( ivec3( random255X( xyz.x ), random255Y( xyz.y ), random255Z( xyz.z ) ) );
}
