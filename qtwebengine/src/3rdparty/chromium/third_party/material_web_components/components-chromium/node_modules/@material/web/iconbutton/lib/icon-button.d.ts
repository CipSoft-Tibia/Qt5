/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import '../../focus/focus-ring.js';
import '../../ripple/ripple.js';
import { LitElement } from 'lit';
export declare class IconButton extends LitElement {
    /**
     * Disables the icon button and makes it non-interactive.
     */
    disabled: boolean;
    /**
     * Flips the icon if it is in an RTL context at startup.
     */
    flipIconInRtl: boolean;
    /**
     * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.
     */
    href: string;
    /**
     * Sets the underlying `HTMLAnchorElement`'s `target` attribute.
     */
    target: string;
    /**
     * The `aria-label` of the button when the button is toggleable and selected.
     */
    selectedAriaLabel: string;
    /**
     * When true, the button will toggle between selected and unselected
     * states
     */
    toggle: boolean;
    /**
     * Sets the selected state. When false, displays the default icon. When true,
     * displays the `selectedIcon`, or the default icon If no `selectedIcon` is
     * provided.
     */
    selected: boolean;
    private flipIcon;
    /**
     * Link buttons cannot be disabled.
     */
    willUpdate(): void;
    protected render(): import("lit-html").TemplateResult<2 | 1>;
    private renderLink;
    protected getRenderClasses(): {
        'flip-icon': boolean;
        selected: boolean;
    };
    private renderIcon;
    private renderSelectedIcon;
    private renderTouchTarget;
    private renderFocusRing;
    private renderRipple;
    connectedCallback(): void;
    private handleClick;
}
