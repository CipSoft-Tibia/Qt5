/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { __decorate } from "tslib";
import { html, nothing } from 'lit';
import { property } from 'lit/decorators.js';
import { classMap } from 'lit/directives/class-map.js';
import { ListItemEl } from '../listitem/list-item.js';
// tslint:disable-next-line:enforce-comments-on-exported-symbols
export class ListItemLink extends ListItemEl {
    constructor() {
        super(...arguments);
        this.type = 'none';
    }
    renderListItem(content) {
        return html `
      <a
        id="item"
        tabindex=${this.disabled ? -1 : this.itemTabIndex}
        role=${this.type === 'none' ? nothing : this.type}
        aria-selected=${this.ariaSelected || nothing}
        aria-checked=${this.ariaChecked || nothing}
        class="list-item ${classMap(this.getRenderClasses())}"
        href=${this.href}
        target=${this.target || nothing}
        @click=${this.onClick}
        @pointerenter=${this.onPointerenter}
        @pointerleave=${this.onPointerleave}
        @keydown=${this.onKeydown}
      >${content}</a>
    `;
    }
}
__decorate([
    property()
], ListItemLink.prototype, "href", void 0);
__decorate([
    property()
], ListItemLink.prototype, "target", void 0);
//# sourceMappingURL=list-item-link.js.map