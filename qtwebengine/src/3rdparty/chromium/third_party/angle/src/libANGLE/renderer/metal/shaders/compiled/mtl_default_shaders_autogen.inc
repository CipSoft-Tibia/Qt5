// GENERATED FILE - DO NOT EDIT.
// Generated by gen_mtl_internal_shaders.py
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//

// Compiled binary for Metal default shaders.


#include <TargetConditionals.h>


// clang-format off
#if TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_mac_autogen.inc"

#elif TARGET_OS_IOS && TARGET_OS_SIMULATOR  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_ios_sim_autogen.inc"

#elif TARGET_OS_IOS  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_ios_autogen.inc"
#endif  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#if TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_debug_mac_autogen.inc"

#elif TARGET_OS_IOS && TARGET_OS_SIMULATOR  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_debug_ios_sim_autogen.inc"

#elif TARGET_OS_IOS  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_debug_ios_autogen.inc"
#endif  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#if TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_2_1_mac_autogen.inc"

#elif TARGET_OS_IOS && TARGET_OS_SIMULATOR  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_2_1_ios_sim_autogen.inc"

#elif TARGET_OS_IOS  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_2_1_ios_autogen.inc"
#endif  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#if TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_2_1_debug_mac_autogen.inc"

#elif TARGET_OS_IOS && TARGET_OS_SIMULATOR  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_2_1_debug_ios_sim_autogen.inc"

#elif TARGET_OS_IOS  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

#include "compiled_default_metallib_2_1_debug_ios_autogen.inc"
#endif  // TARGET_OS_OSX || TARGET_OS_MACCATALYST

// clang-format on
