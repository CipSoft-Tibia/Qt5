# Copyright 2016 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("sessions") {
  sources = [
    "ios_chrome_session_tab_helper.h",
    "ios_chrome_session_tab_helper.mm",
    "ios_chrome_tab_restore_service_client.h",
    "ios_chrome_tab_restore_service_client.mm",
    "ios_chrome_tab_restore_service_factory.cc",
    "ios_chrome_tab_restore_service_factory.h",
    "live_tab_context_browser_agent.h",
    "live_tab_context_browser_agent.mm",
  ]
  public_deps = [ "//components/sessions" ]
  deps = [
    ":serialisation",
    "//base",
    "//components/keyed_service/ios",
    "//components/tab_groups",
    "//ios/chrome/browser/shared/model/application_context",
    "//ios/chrome/browser/shared/model/browser",
    "//ios/chrome/browser/shared/model/browser_state",
    "//ios/chrome/browser/shared/model/url:constants",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/chrome/browser/tabs",
  ]
  frameworks = [ "UIKit.framework" ]
}

source_set("restoration_observer") {
  sources = [ "session_restoration_observer.h" ]
  deps = [ "//base" ]
}

source_set("restoration_agent") {
  sources = [
    "session_restoration_browser_agent.h",
    "session_restoration_browser_agent.mm",
  ]
  deps = [
    ":restoration_observer",
    ":serialisation",
    ":session_service",
    "//base",
    "//components/favicon/ios",
    "//components/previous_session_info",
    "//ios/chrome/browser/shared/model/browser",
    "//ios/chrome/browser/shared/model/browser_state",
    "//ios/chrome/browser/shared/model/url:constants",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/chrome/browser/web:feature_flags",
    "//ios/chrome/browser/web:page_placeholder",
    "//ios/chrome/browser/web/session_state",
    "//ios/chrome/browser/web_state_list/web_usage_enabler",
    "//ios/web/public",
    "//ios/web/public:web_state_observer",
    "//ios/web/public/navigation",
    "//ios/web/public/session",
  ]
}

source_set("session_service") {
  sources = [
    "session_service_ios.h",
    "session_service_ios.mm",
    "session_window_ios_factory.h",
    "session_window_ios_factory.mm",
  ]
  deps = [
    ":serialisation",
    ":session_constants",
    ":session_internal_util",
    "//base",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/web/public/session",
  ]
}

source_set("serialisation") {
  sources = [
    "NSCoder+Compatibility.h",
    "NSCoder+Compatibility.mm",
    "session_ios.h",
    "session_ios.mm",
    "session_util.h",
    "session_util.mm",
    "session_window_ios.h",
    "session_window_ios.mm",
    "web_state_list_serialization.h",
    "web_state_list_serialization.mm",
  ]
  deps = [
    ":session_constants",
    "//base",
    "//components/sessions",
    "//ios/chrome/browser/shared/model/browser_state",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/web/public",
    "//ios/web/public/navigation",
    "//ios/web/public/session",
    "//net",
  ]
}

source_set("session_saving") {
  sources = [
    "session_saving_scene_agent.h",
    "session_saving_scene_agent.mm",
  ]
  deps = [
    ":restoration_agent",
    "//ios/chrome/browser/shared/coordinator/scene:observing_scene_agent",
    "//ios/chrome/browser/shared/model/browser",
    "//ios/chrome/browser/shared/model/browser_state",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/chrome/browser/snapshots",
    "//ios/chrome/browser/web_state_list/web_usage_enabler",
    "//ios/web/common:features",
  ]
}

source_set("session_restoration_service") {
  sources = [
    "session_restoration_service.cc",
    "session_restoration_service.h",
  ]
  deps = [
    "//base",
    "//components/keyed_service/core",
    "//ios/web/common:features",
  ]
}

source_set("session_restoration_service_impl") {
  visibility = [
    ":session_restoration_service_factory",
    ":unit_tests",
  ]
  sources = [
    "session_restoration_scroll_observer.h",
    "session_restoration_scroll_observer.mm",
    "session_restoration_service_impl.h",
    "session_restoration_service_impl.mm",
    "session_restoration_web_state_list_observer.h",
    "session_restoration_web_state_list_observer.mm",
    "session_restoration_web_state_observer.h",
    "session_restoration_web_state_observer.mm",
  ]
  deps = [
    ":session_restoration_service",
    "//base",
    "//components/sessions:session_id",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/web/public",
    "//ios/web/public:web_state_observer",
    "//ios/web/public/js_messaging",
    "//ios/web/public/navigation",
    "//ios/web/public/ui",
  ]
}

source_set("session_restoration_service_factory") {
  sources = [
    "session_restoration_service_factory.cc",
    "session_restoration_service_factory.h",
  ]
  deps = [
    ":session_restoration_service_impl",
    "//base",
    "//components/keyed_service/ios",
    "//ios/chrome/browser/shared/model/browser_state",
  ]
}

source_set("session_constants") {
  sources = [
    "session_constants.h",
    "session_constants.mm",
  ]
  deps = [ "//base" ]
}

source_set("session_internal_util") {
  visibility = [ ":*" ]
  sources = [
    "session_internal_util.h",
    "session_internal_util.mm",
  ]
  deps = [
    ":serialisation",
    "//base",
    "//third_party/protobuf:protobuf_lite",
  ]
}

source_set("test_support") {
  testonly = true
  sources = [
    "proto_util.cc",
    "proto_util.h",
    "test_session_service.h",
    "test_session_service.mm",
  ]
  deps = [
    ":session_service",
    "//base",
    "//ios/chrome/browser/sessions/proto",
    "//third_party/protobuf:protobuf_lite",
  ]
}

source_set("fake") {
  testonly = true
  sources = [
    "fake_tab_restore_service.h",
    "fake_tab_restore_service.mm",
  ]
  deps = [
    "//base",
    "//components/sessions",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "proto_util_unittest.cc",
    "session_internal_util_unittest.mm",
    "session_restoration_browser_agent_unittest.mm",
    "session_restoration_scroll_observer_unittest.mm",
    "session_restoration_service_factory_unittest.cc",
    "session_restoration_web_state_list_observer_unittest.mm",
    "session_restoration_web_state_observer_unittest.mm",
    "session_service_ios_unittest.mm",
    "session_window_ios_unittest.mm",
  ]
  deps = [
    ":resources_unit_tests",
    ":restoration_agent",
    ":restoration_observer",
    ":serialisation",
    ":session_internal_util",
    ":session_restoration_service_factory",
    ":session_restoration_service_impl",
    ":session_service",
    ":sessions",
    ":test_support",
    "//base",
    "//base/test:test_support",
    "//components/sessions:session_id",
    "//ios/chrome/browser/main",
    "//ios/chrome/browser/ntp",
    "//ios/chrome/browser/sessions/proto",
    "//ios/chrome/browser/shared/model/browser",
    "//ios/chrome/browser/shared/model/browser/test:test_support",
    "//ios/chrome/browser/shared/model/browser_state:test_support",
    "//ios/chrome/browser/shared/model/paths",
    "//ios/chrome/browser/shared/model/url:constants",
    "//ios/chrome/browser/shared/model/web_state_list",
    "//ios/chrome/browser/shared/model/web_state_list/test:test_support",
    "//ios/chrome/browser/signin",
    "//ios/chrome/browser/signin:test_support",
    "//ios/chrome/browser/tabs:features",
    "//ios/chrome/browser/web_state_list/web_usage_enabler",
    "//ios/chrome/test:test_support",
    "//ios/web/common:features",
    "//ios/web/public/navigation",
    "//ios/web/public/session",
    "//ios/web/public/test",
    "//ios/web/public/test/fakes",
    "//ios/web/public/thread",
    "//ios/web/public/ui",
    "//testing/gtest",
    "//third_party/ocmock",
  ]
  frameworks = [ "Foundation.framework" ]
}

bundle_data("resources_unit_tests") {
  visibility = [ ":unit_tests" ]
  testonly = true
  sources = [
    "//ios/chrome/test/data/sessions/corrupted.plist",
    "//ios/chrome/test/data/sessions/session_m57.plist",
    "//ios/chrome/test/data/sessions/session_m58.plist",
  ]
  outputs = [ "{{bundle_resources_dir}}/ios/chrome/test/data/sessions/{{source_file_part}}" ]
}
