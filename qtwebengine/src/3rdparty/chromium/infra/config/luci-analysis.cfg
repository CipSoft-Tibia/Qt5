# Schema for this config file: ProjectConfig in:
# https://luci-config.appspot.com/schemas/projects:luci-analysis.cfg

bug_filing_thresholds {
  metric_id: "critical-failures-exonerated"
  threshold {
    three_day: 75
  }
}
bug_filing_thresholds {
  metric_id: "builds-failed-due-to-flaky-tests"
  threshold {
    one_day: 10 # OR
    seven_day: 20
  }
}

clustering {
  test_name_rules {
    name: "Blink Web Tests"
    # To match blink_web_tests as well as webgpu_blink_web_tests and any others.
    pattern: "^ninja://:(?P<target>\\w*blink_web_tests)/(virtual/[^/]+/)?(?P<test>([^/]+/)+[^/]+\\.[a-zA-Z]+).*$"
    like_template: "ninja://:${target}/%${test}%"
  }
  test_name_rules {
    name: "Google Test (Value-parameterized)"
    pattern: "^ninja:(?P<target>[\\w/]+:\\w+)/(\\w+/)?(?P<suite>\\w+)\\.(?P<test>\\w+)/[\\w.]+$"
    like_template: "ninja:${target}/%${suite}.${test}%"
  }
  test_name_rules {
    name: "Google Test (Type-parameterized)"
    pattern: "^ninja:(?P<target>[\\w/]+:\\w+)/(\\w+/)?(?P<suite>\\w+)/\\w+\\.(?P<test>\\w+)$"
    like_template: "ninja:${target}/%${suite}/%.${test}"
  }
  test_name_rules {
    name: "JUnit Test (Parameterized)"
    # Matches parameterized JUnit tests like:
    # ninja://android_webview/test:webview_instrumentation_test_apk/org.chromium.android_webview.test.MyTest#testFoo__parameter1
    # Also matches tests parameterized with different command line flags,
    # as constructed by https://source.chromium.org/chromium/chromium/src/+/main:build/android/pylib/instrumentation/instrumentation_test_instance.py?q=%22def%20GetUniqueTestName(%22
    # E.g. ninja://chrome/android:chrome_public_test_apk/org.chromium.chrome.browser.omnibox.OmniboxTest#testDefaultText_with___disable_features=SpannableInlineAutocomplete
    pattern: "^ninja:(?P<target>[\\w/]+:\\w+)/(?P<class>[\\w$.]+)#(?P<test>\\w+?)(?P<sep>__|_with_)[\\w.=,]+$"
    like_template: "ninja:${target}/${class}#${test}${sep}%"
  }
}

metrics {
  overrides {
    metric_id: "failures"
    is_default: false
  }
  overrides {
    metric_id: "builds-failed-due-to-flaky-tests"
    is_default: true
  }
}

monorail {
  project: "chromium"
  default_field_values {
    # Type field.
    field_id: 10
    value: "Bug"
  }
  priority_field_id: 11
  priorities {
    priority: "0"
    thresholds {
      metric_id: "human-cls-failed-presubmit"
      threshold {
        one_day: 20
      }
    }
  }
  priorities {
    priority: "1"
    thresholds {
      metric_id: "human-cls-failed-presubmit"
      threshold {
        one_day: 10
      }
    }
  }
  priorities {
    priority: "2"
    thresholds {
      metric_id: "human-cls-failed-presubmit"
      threshold {
        seven_day: 1
      }
    }
    thresholds {
      metric_id: "critical-failures-exonerated"
      threshold {
        seven_day: 1
      }
    }
    thresholds {
      metric_id: "builds-failed-due-to-flaky-tests"
      threshold {
        seven_day: 1
      }
    }
  }
  priority_hysteresis_percent: 50
  monorail_hostname: "bugs.chromium.org"
  display_prefix: "crbug.com"
  file_without_restrict_view_google: true
}

realms {
  name: "ci"
  test_variant_analysis {
    update_test_variant_task {
      update_test_variant_task_interval {
        seconds: 3600 # 1 hour
      }
      test_variant_status_update_duration {
        seconds: 86400 # 24 hours
      }
    }
    bq_exports {
      table {
        cloud_project: "chrome-flakiness"
        dataset: "weetbix"
        table: "ci_flaky_test_variants"
      }
      predicate {
        status: FLAKY
      }
    }
  }
}

realms {
  name: "try"
  test_variant_analysis {
    update_test_variant_task {
      update_test_variant_task_interval {
        seconds: 3600 # 1 hour
      }
      test_variant_status_update_duration {
        seconds: 86400 # 24 hours
      }
    }
    bq_exports {
      table {
        cloud_project: "chrome-flakiness"
        dataset: "weetbix"
        table: "try_flaky_test_variants"
      }
      predicate {
        status: FLAKY
      }
    }
  }
}
