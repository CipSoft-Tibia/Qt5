# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//components/safe_browsing/buildflags.gni")

# This file depends on the legacy global sources assignment filter. It should
# be converted to check target platform before assigning source files to the
# sources variable. Remove this import and set_sources_assignment_filter call
# when the file has been converted. See https://crbug.com/1018739 for details.
import("//build/config/deprecated_default_sources_assignment_filter.gni")
set_sources_assignment_filter(deprecated_default_sources_assignment_filter)

source_set("cpp") {
  deps = [ "//chrome/common/safe_browsing:archive_analyzer_results" ]
  public_deps = [ "//chrome/services/file_util/public/mojom" ]

  if (safe_browsing_mode == 1) {
    sources = [
      "sandboxed_dmg_analyzer_mac.cc",
      "sandboxed_dmg_analyzer_mac.h",
      "sandboxed_rar_analyzer.cc",
      "sandboxed_rar_analyzer.h",
      "sandboxed_zip_analyzer.cc",
      "sandboxed_zip_analyzer.h",
    ]
    if (is_chromeos) {
      sources += [
        "zip_file_creator.cc",
        "zip_file_creator.h",
      ]
    }

    deps += [
      "//components/services/filesystem:lib",
      "//content/public/browser",
    ]

    public_deps += [ "//chrome/common/safe_browsing" ]
  }
}

if (safe_browsing_mode == 1) {
  source_set("unit_tests") {
    testonly = true

    sources = [
      "sandboxed_dmg_analyzer_mac_unittest.cc",
      "sandboxed_rar_analyzer_unittest.cc",
      "sandboxed_zip_analyzer_unittest.cc",
    ]

    deps = [
      ":cpp",
      "//base/test:test_support",
      "//chrome/common:constants",
      "//chrome/common/safe_browsing:archive_analyzer_results",
      "//chrome/services/file_util",
      "//components/safe_browsing/core:features",
      "//components/safe_browsing/core:file_type_policies",
      "//content/test:test_support",
      "//crypto:platform",
      "//skia",
      "//testing/gmock",
      "//testing/gtest",
    ]
  }
}

if (is_chromeos) {
  source_set("browser_tests") {
    testonly = true

    sources = [ "zip_file_creator_browsertest.cc" ]
    defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]

    deps = [
      ":cpp",
      "//base",
      "//chrome/test:test_support",
      "//chrome/test:test_support_ui",
      "//content/public/browser",
      "//content/public/common",
      "//content/test:test_support",
      "//testing/gtest",
      "//third_party/zlib",
    ]
  }
}
