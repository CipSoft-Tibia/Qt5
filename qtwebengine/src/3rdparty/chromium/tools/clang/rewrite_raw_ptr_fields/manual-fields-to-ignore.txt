# File that lists fields that should be ignored when running the
# rewrite_raw_ptr_fields tool on Chromium sources.
#
# Each non-comment, non-empty line should specify a fully-namespace qualified
# field like:
#     my_namespace::my_subnamespace::MyStruct::my_field_
#
# There is no need to specify template arguments:
#     my_namespace::my_subnamespace::MyTemplate::my_field_

# Populated manually - need to keep it constexpr:
base::BasicStringPiece::ptr_
base::CheckedContiguousIterator::current_
base::CheckedContiguousIterator::end_
base::CheckedContiguousIterator::start_
base::CheckedContiguousRange::container_
base::FeatureParam<base::TimeDelta, false>::feature
base::FeatureParam<bool, false>::feature
base::FeatureParam<double, false>::feature
base::FeatureParam<int, false>::feature
base::FeatureParam<std::__1::basic_string<char>, false>::feature
base::FeatureParam<type-parameter-0-0, true>::feature
base::FeatureParam<type-parameter-0-0, true>::options
base::span::data_
crash_reporter::internal::CrashKeyStringCombinedImpl::breakpad_key_
crash_reporter::internal::CrashKeyStringCombinedImpl::crashpad_key_
crash_reporter::internal::CrashKeyStringImpl::index_array_
crash_reporter::internal::CrashKeyStringImpl::index_array_
flags_ui::FeatureEntry::FeatureVariation::params
gfx::VectorIcon::reps
gfx::VectorIconRep::path
safe_browsing::(anonymous namespace)::(anonymous struct)::feature
tracing::MessageInfo::accepted_field_ids
tracing::MessageInfo::sub_messages
ui::(anonymous namespace)::I18nTestParam::test

# Populated manually - double implicit-cast required.
PaintManager::instance_

# Populated manually - needed to avoid global constructors
base::(anonymous namespace)::Provider::next

# Populated manually - needed for lock annotations
base::trace_event::TraceLog::OptionalAutoLock::lock_

# Populated manually to avoid hitting tokens limit explicitly
# enforced in check.cc:
# // check.h is a widely included header and its size has significant impact on
# // build time. Try not to raise this limit unless absolutely necessary. See
# // https://chromium.googlesource.com/chromium/src/+/HEAD/docs/wmax_tokens.md
# #pragma clang max_tokens_here 17000
logging::CheckError::log_message_

# Populated manually - templates make it difficult for the rewriter to see that
# |.get()| needs to be appended.
blink::xpath::EvaluationContext::node
WTF::HashTableAddResult::container_
WTF::HashTableAddResult::stored_value

# Populated manually - conflicting types in an initializer list
WebUITabStripContainerView::tab_counter_

# Populated manually to avoid returning a reference to a temporary T* (result of
# implicitly casting CheckedPtr<T> to T*).  This covers functions that return
# |SomeClass*&| and local variables with that type.
AllTabContentsesList::Iterator::cur_
blink::NormalPage::CompactionContext::current_page_
blink::Worklist::PrivateSegmentHolder::private_pop_segment
blink::Worklist::PrivateSegmentHolder::private_push_segment
content::(anonymous namespace)::AudioStreamMonitorTest::monitor_
content::AudioStreamMonitor::clock_
remoting::ChromotingHostTest::client1_
remoting::ChromotingHostTest::client2_
WTF::ICUConverterWrapper::converter

# Populated manually - always holds a pointer to an OilPan-allocated memory.
blink::PersistentBase::raw_
blink::SVGFilterBuilder::last_effect_

# Populated manually - the rewriter has trouble appending |.get()| inside macros
# that work with |XDisplay*|.
extensions::GlobalShortcutListenerX11::x_display_
gl::GLVisualPickerGLX::display_
media::(anonymous namespace)::UserInputMonitorLinuxCore::x_record_display_
media::cast::test::LinuxOutputWindow::display_
remoting::(anonymous namespace)::InputInjectorX11::Core::display_
remoting::(anonymous namespace)::LocalHotkeyInputMonitorX11::Core::x_record_display_
remoting::(anonymous namespace)::LocalMouseInputMonitorX11::Core::x_record_display_
remoting::ClipboardX11::display_
remoting::XServerClipboard::display_
Simulator::display_
ui::ClipboardX11::X11Details::x_display_
ui::SelectionRequestorTest::x_display_
ui::X11EventSource::display_
ui::X11MenuRegistrar::xdisplay_
ui::X11WorkspaceHandler::xdisplay_
ui::XDisplayManager::xdisplay_
ui::XOSExchangeDataProvider::x_display_
ui::XVisualManager::display_
ui::XWindow::xdisplay_
views::test::(anonymous namespace)::UIControlsDesktopX11::x_display_
viz::SkiaOutputDeviceX11::display_
x11::Connection::display_

# Populated manually - static_cast not related by inheritance.
gtk::GtkKeyBindingsHandler::fake_window_
gtk::GtkKeyBindingsHandler::handler_
gtk::SelectFileDialogImplGTK::preview_
net::(anonymous namespace)::SettingGetterImplGSettings::client_
net::(anonymous namespace)::SettingGetterImplGSettings::http_client_
net::(anonymous namespace)::SettingGetterImplGSettings::https_client_
net::(anonymous namespace)::SettingGetterImplGSettings::ftp_client_
net::(anonymous namespace)::SettingGetterImplGSettings::socks_client_
remoting::(anonymous namespace)::DisconnectWindowGtk::disconnect_window_
remoting::(anonymous namespace)::DisconnectWindowGtk::message_
remoting::(anonymous namespace)::GtkFileChooserOnUiThread::file_dialog_
remoting::(anonymous namespace)::It2MeConfirmationDialogLinux::confirmation_window_
remoting::ContinueWindowGtk::continue_window_
ui::AXPlatformNodeAuraLinux::atk_hyperlink_
PrintDialogGtk::dialog_

# Populated manually - using nmap or base::AllocPages directly
blink::GCInfoTable::table_
disk_cache::MappedFile::buffer_

# Populated manually:
# 1. This guarantees that both fields of the union are skipped
#    (otherwise, |characters8| might be skipped because of anyCharType
#     heuristic, but |characters16| might be rewritte)
# 2. Note that this is one of the cases where the code may write one
#    field of the union and then read another.  According to the spec
#    this may result in undefined behavior.
#    https://en.cppreference.com/w/cpp/language/union: "It's undefined behavior
#    to read from the member of the union that wasn't most recently written."
blink::VTTScanner::(anonymous union)::characters8
blink::VTTScanner::(anonymous union)::characters16

# Populated manually, because of in-out-arg usage.
blink::PaintController::IdAsHashKey::client
ui::AXPlatformNodeAuraLinux::document_parent_
ui::AXPlatformNodeAuraLinux::atk_object_

# Populated manually - problems related to passing to a templated && parameter,
# which is later forwarded to something that doesn't vibe with CheckedPtr. The
# rewriter has no visibility into where the parameter is forwarded to.
ProfileDestroyer::profile_
(anonymous namespace)::BluetoothLowEnergyApiTest::mock_adapter_
base::trace_event::TraceValue::as_convertable
content::RenderProcessHostImpl::browser_context_
device::BluetoothDevice::adapter_

# Populated manually - problems related to lambdas with no return type, where
# the return value is CheckedPtr, but variable/parameter receiving the lambda
# expects the raw pointer type.
vr::LocationBarState::vector_icon
vr::OmniboxSuggestion::icon

# Populated manually - assigned to |auto*| in ranged loop on an array
# initializer literal comprising of those pointers.
DownloadItemView::discard_button_
DownloadItemView::open_now_button_
DownloadItemView::save_button_
DownloadItemView::scan_button_

# Populated manually - other compile-time reasons
logging::CheckOpResult::message_  # cyclic #include
views::internal::ClassPropertySetter::property_  # passed to templated param T*

#######
# CheckedPtr2/MTECheckedPtr-specific sections
#######

# Populated manually - these pointers are assigned invalid address (with top
# bits sets), which CheckedPtr is unable to handle, leading to run-time crashes.
(anonymous namespace)::TlsVectorEntry::data
blink::(anonymous namespace)::ThreadMarker::creating_thread_
blink::ControlKey::name_
performance_manager::frame_priority::BoostingVoteAggregator::Edge::src_
performance_manager::frame_priority::BoostingVoteAggregator::Edge::dst_

# Populated manually - these pointers crash due to a mismatching tag.
# Under investigation.
base::internal::UnretainedWrapper::ptr_
blink::NGPhysicalContainerFragment::buffer_
blink::DisplayItem::client_
cc::FrameSequenceMetrics::throughput_ukm_reporter_
cc::(anonymous namespace)::RasterTaskImpl::tile_tracing_id_
content::MediaPlayerId::render_frame_host
content::RenderViewImpl::webview_
mojo::core::WatcherDispatcher::last_watch_to_block_arming_
net::IOBuffer::data_
safe_browsing::RemoteSafeBrowsingDatabaseManager::ClientRequest::client_

# Populated manually - this pointer crashes, because assigned address appears
# unallocated.
x11::ReadBuffer::fds

#######
# End of CheckedPtr2/MTECheckedPtr-specific sections
#######

#######
# BackupRefPtr-specific sections
#######

# Populated manually - std::is_trivially_destructible static_assert failure
blink::HTMLElementEquivalent::tag_name_
blink::PrerendererClient::client_
blink::weakness_marking_test::EphemeronCallbacksCounter::count_holder_
sql::recover::InnerPageDecoder::db_reader_
sql::recover::LeafPageDecoder::db_reader_
WTF::ListHashSet::head_
WTF::ListHashSet::tail_

# Populated manually - exit-time destructor
gpu::GpuControlList::Conditions::devices
gpu::GpuControlList::Conditions::driver_info
gpu::GpuControlList::Conditions::gl_strings
gpu::GpuControlList::Conditions::machine_model_info
gpu::GpuControlList::Conditions::intel_gpu_series_list
gpu::GpuControlList::Conditions::more
gpu::GpuControlList::Entry::features
gpu::GpuControlList::Entry::disabled_extensions
gpu::GpuControlList::Entry::disabled_webgl_extensions
gpu::GpuControlList::Entry::cr_bugs
gpu::GpuControlList::Entry::exceptions
media::ListElementInfo::id_info_
media::SupportedTypeInfo::codecs
tracing::(anonymous namespace)::AllowlistEntry::arg_name_filter
net::(anonymous namespace)::CTRequiredPolicy::roots
net::(anonymous namespace)::CTRequiredPolicy::exceptions
net::HttpCache::Transaction::SetRequest(const net::NetLogWithSource &)::(anonymous struct)::search
net::TransportSecurityStateSource::Pinset::accepted_pins
net::TransportSecurityStateSource::Pinset::rejected_pins
net::TransportSecurityStateSource::expect_ct_report_uris
net::TransportSecurityStateSource::pinsets
WTF::StaticSingleton::InstanceStorage::pointer_

# Populated manually - attempt to use a deleted function (union's destructor is
# deleted, because an inner struct has CheckedPtr field)
flags_ui::FeatureEntry::(anonymous union)::(anonymous struct)::feature
ui::NativeTheme::MenuSeparatorExtraParams::paint_rect

# Populated manually - flexible array with non-trivial destruction
blink::ShapeResultView::(anonymous struct)::alignment

# Populated manually - these pointers crash, because a base class ctor accesses
# child class ptr fields before they're initialized.
blink::CacheEntry::next_
blink::CacheEntry::prev_
WTF::LruCache::next_
WTF::LruCache::prev_

# Populated manually - these pointers crash, due to use-after-move.
gpu::gles2::PassthroughProgramCache::ProgramCacheValue::program_cache_
gpu::gles2::ProgramCache::ScopedCacheUse::cache_

#######
# End of BackupRefPtr-specific sections
#######
