<!--
Copyright 2020 The Chromium Authors. All rights reserved.
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
-->

<!--
This file is used to generate a comprehensive list of BackForwardCache histograms
along with a detailed description for each histogram.

For best practices on writing histogram descriptions, see
https://chromium.googlesource.com/chromium/src.git/+/HEAD/tools/metrics/histograms/README.md

Please send CLs to chromium-metrics-reviews@google.com rather than to specific
individuals. These CLs will be automatically reassigned to a reviewer within
about 5 minutes. This approach helps the metrics team to load-balance incoming
reviews. Googlers can read more about this at go/gwsq-gerrit.
-->

<histogram-configuration>

<histograms>

<histogram name="BackForwardCache.AllSites.EvictedAfterDocumentRestoredReason"
    enum="BackForwardCacheEvictedAfterDocumentRestoredReason"
    expires_after="2020-10-01">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records the reason why the page is evicted from the back-forward cache but
    after the document is restored. This happens when there is a race between
    eviction and restoring. This also records when the page is restored to
    calculate how often this eviction happens.

    This is recorded for all websites regardless whether back-forward cache is
    enabled or not.
  </summary>
</histogram>

<histogram name="BackForwardCache.AllSites.HistoryNavigationOutcome"
    enum="BackForwardCacheHistoryNavigationOutcome" expires_after="2021-02-14">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history, this records whether
    the page was restored from the BackForwardCache or not.

    This is recorded for all websites regardless whether back-forward cache is
    enabled or not.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.AllSites.HistoryNavigationOutcome.BlocklistedFeature"
    enum="WebSchedulerTrackedFeature" expires_after="2021-02-21">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history, this records what
    blocklisted features were used when the page was loaded and prevented this
    page from being stored in the back-forward cache. Multiple blocklisted
    features can be recorded for the same page.

    This is recorded for all websites regardless whether back-forward cache is
    enabled or not.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.AllSites.HistoryNavigationOutcome.BrowsingInstanceNotSwappedReason"
    enum="BackForwardCacheBrowsingInstanceNotSwappedReason"
    expires_after="2021-02-07">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history and the
    BackForwardCache wasn't used because of the related browsing instances, this
    records the reason why the browsing instance wasn't swapped.

    This is recorded for all websites regardless whether back-forward cache is
    enabled or not.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.AllSites.HistoryNavigationOutcome.DisabledForRenderFrameHostReason"
    enum="BackForwardCacheDisabledForRenderFrameHostReason"
    expires_after="2020-10-01">
  <owner>carlscab@chromium.org</owner>
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    For history navigations, records the reasons passed to
    BackForwardCache::DisableForRenderFrameHost calls. These reasons are
    specified as strings, so this histograms contains their hashes computed as
    base::HashMetricName.

    The metric is recorded when a history navigation commits and emits a sample
    for each reason. Compare this with
    BackForwardCache.HistoryNavigationOutcome, which contains the total number
    of navigations which where not cached

    This is recorded for all websites regardless whether back-forward cache is
    enabled or not.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.AllSites.HistoryNavigationOutcome.NotRestoredReason"
    enum="BackForwardCacheNotRestoredReason" expires_after="2021-02-07">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history, record why it wasn't
    restored from the cache. The page might not have entered the back-forward in
    the first place based on the features used, or it might have been evicted
    while being in the cache.

    This is recorded for all websites regardless whether back-forward cache is
    enabled or not.
  </summary>
</histogram>

<histogram name="BackForwardCache.EvictedAfterDocumentRestoredReason"
    enum="BackForwardCacheEvictedAfterDocumentRestoredReason"
    expires_after="2021-02-07">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records the reason why the page is evicted from the back-forward cache but
    after the document is restored. This happens when there is a race between
    eviction and restoring. This also records when the page is restored to
    calculate how often this eviction happens.

    This is recorded when back-forward cache is enabled for this navigation
    (back-forward cache feature is enabled and the domain is in the scope of the
    experiment).
  </summary>
</histogram>

<histogram name="BackForwardCache.Eviction.TimeUntilProcessKilled" units="ms"
    expires_after="2020-10-01">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records the time duration between the last time when the entry goes to the
    back-forward cache and the time when the process is killed.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.Experimental.UnexpectedIPCMessagePostedToCachedFrame.MethodHash"
    enum="MojoInterfaceName" expires_after="2021-03-28">
  <owner>hbolaria@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Track number of times an unexpected IPC message is posted to frames in the
    renderer process while they are frozen in the back-forward cache. IPC tasks
    are denoted by md5 hash of the mojo bindings method name or message hash for
    legacy IPCs.

    Recorded when an IPC task is posted to frames that have already been stored
    in the back-forward cache, after a 15 second delay to account for completion
    of all freezing-related operations.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.Experimental.UnexpectedIPCMessagePostedToCachedFrame.TimeUntilIPCReceived"
    units="ms" expires_after="2021-03-28">
  <owner>hbolaria@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Duration between start of page being stored in the back-forward cache and
    when the unexpected IPC call is received by a frame while in the cache.

    Recorded when an IPC task is posted to frames that have already been stored
    in the back-forward cache, after a 15 second delay to account for completion
    of all freezing-related operations.
  </summary>
</histogram>

<histogram name="BackForwardCache.HistoryNavigationOutcome"
    enum="BackForwardCacheHistoryNavigationOutcome" expires_after="2020-10-01">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history, this records whether
    the page was restored from the BackForwardCache or not.

    This is recorded when back-forward cache is enabled for this navigation
    (back-forward cache feature is enabled and the domain is in the scope of the
    experiment).
  </summary>
</histogram>

<histogram name="BackForwardCache.HistoryNavigationOutcome.BlocklistedFeature"
    enum="WebSchedulerTrackedFeature" expires_after="2021-02-07">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history, this records what
    blocklisted features were used when the page was loaded and prevented this
    page from being stored in the back-forward cache. Multiple blocklisted
    features can be recorded for the same page.

    This is recorded when back-forward cache is enabled for this navigation
    (back-forward cache feature is enabled and the domain is in the scope of the
    experiment).
  </summary>
</histogram>

<histogram
    name="BackForwardCache.HistoryNavigationOutcome.BrowsingInstanceNotSwappedReason"
    enum="BackForwardCacheBrowsingInstanceNotSwappedReason"
    expires_after="2021-02-07">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history and the
    BackForwardCache wasn't used because of the related browsing instances, this
    records the reason why the browsing instance wasn't swapped.

    This is recorded when back-forward cache is enabled for this navigation
    (back-forward cache feature is enabled and the domain is in the scope of the
    experiment).
  </summary>
</histogram>

<histogram
    name="BackForwardCache.HistoryNavigationOutcome.DisabledForRenderFrameHostReason"
    enum="BackForwardCacheDisabledForRenderFrameHostReason"
    expires_after="2021-02-07">
  <owner>carlscab@chromium.org</owner>
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    For history navigations, records the reasons passed to
    BackForwardCache::DisableForRenderFrameHost calls. These reasons are
    specified as strings, so this histograms contains their hashes computed as
    base::HashMetricName.

    The metric is recorded when a history navigation commits and emits a sample
    for each reason. Compare this with
    BackForwardCache.HistoryNavigationOutcome, which contains the total number
    of navigations which where not cached

    This is recorded when back-forward cache is enabled for this navigation
    (back-forward cache feature is enabled and the domain is in the scope of the
    experiment).
  </summary>
</histogram>

<histogram name="BackForwardCache.HistoryNavigationOutcome.NotRestoredReason"
    enum="BackForwardCacheNotRestoredReason" expires_after="2021-02-07">
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    When navigating back to a page in the session history, record why it wasn't
    restored from the cache. The page might not have entered the back-forward in
    the first place based on the features used, or it might have been evicted
    while being in the cache.

    This is recorded when back-forward cache is enabled for this navigation
    (back-forward cache feature is enabled and the domain is in the scope of the
    experiment).
  </summary>
</histogram>

<histogram name="BackForwardCache.MainFrameHasPageshowListenersOnRestore"
    enum="BooleanPresent" expires_after="M82">
  <owner>altimin@chromium.org</owner>
  <owner>hajimehoshi@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records whether a page restored from the back-forward cache has pageshow
    handlers installed in its main frame. Recorded when the renderer resumes
    page when restoring it from the back-forward cache.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.ProactiveSameSiteBISwap.EligibilityDuringCommit"
    enum="BackForwardCacheEligibilityDuringCommit" expires_after="M88">
  <owner>rakina@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records whether a page where we did a same-site proactive BrowsingInstance
    swap on (with the intention on storing it in the back-forward cache later)
    is still eligible for back-forward cache when swapping out the old page
    during navigation commit. Recorded when we have just finished committing the
    new page on the renderer side, and during the commit of the new page in the
    browser side.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.ProactiveSameSiteBISwap.SameSiteNavigationDidSwap"
    enum="BackForwardCacheSameSiteNavigationDidSwap" expires_after="M88">
  <owner>rakina@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records whether we did a same-site proactive BrowsingInstance swap or not
    for a same-site cross-document navigation. Recorded when we are committing
    the navigation.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.ProactiveSameSiteBISwap.UnloadRunsAfterCommit"
    enum="BackForwardCacheUnloadRunsAfterCommit" expires_after="M88">
  <owner>rakina@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records whether a page where we did a same-site proactive BrowsingInstance
    swap on (with the intention on storing it in the back-forward cache later)
    is no longer eligible for back-forward cache after the navigation committed
    and the page has unload handlers that will run after commit, which is a
    web-observable behavior change for same-site navigations. Recorded when we
    have just finished committing the new page on the renderer side, and during
    the commit of the new page in the browser side.
  </summary>
</histogram>

<histogram name="BackForwardCache.ReloadsAfterHistoryNavigation"
    enum="BackForwardCacheReloadsAfterHistoryNavigation"
    expires_after="2020-10-01">
  <owner>sreejakshetty@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records the number of reloads after a history navigation both for the cases
    when page is served and not served from back-forward cache.

    This is recorded when navigation is committed, only for the domains which
    are in the scope of back-forward cache experiment and they are of same
    NavigationEntry (e.g. back and reload in different tab do not count).
  </summary>
</histogram>

<histogram name="BackForwardCache.ReloadsAndHistoryNavigations"
    enum="BackForwardCacheReloadsAndHistoryNavigations"
    expires_after="2020-10-01">
  <owner>sreejakshetty@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records the total number of history navigations along with the number of
    reloads if the previous navigation was a history one.

    This is recorded when navigation is committed, only for the domains which
    are in the scope of back-forward cache experiment.
  </summary>
</histogram>

<histogram name="BackForwardCache.Restore.NavigationToFirstPaint" units="ms"
    expires_after="2020-12-06">
  <owner>sreejakshetty@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Duration between start of navigation restoring a document from back-forward
    cache and the first paint.

    This is recorded when a history navigation is served from back-forward cache
    but in a foreground tab.
  </summary>
</histogram>

<histogram name="BackForwardCache.SameSite.ActionAfterPagehide2"
    enum="BackForwardCacheActionAfterPagehide" expires_after="M88">
  <owner>rakina@chromium.org</owner>
  <owner>altimin@chromium.org</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Records occurences of certain actions triggered by script running on a page
    after the pagehide event gets dispatched in the page, which might be
    possible if we dispatch the pagehide event without unloading/freezing the
    page (only happens when we're doing a same-site navigation and we did a
    proactive BrowsingInstance swap but we're reusing the old page's process).

    Note: We will only track actions that might affect the user after we've
    navigated away from the old page, such as modifications to storage,
    navigations, or sending/receiving postMessage.

    Note 2: We will not track actions taken when the unload event is currently
    in progress, which means the page is not actually stored in the back-forward
    cache and the actions are expected to happen after pagehide.
  </summary>
</histogram>

<histogram
    name="BackForwardCache.UnexpectedRendererToBrowserMessage.InterfaceName"
    enum="MojoInterfaceName" expires_after="2021-03-07">
  <owner>carlscab@google.com</owner>
  <owner>bfcache-dev@chromium.org</owner>
  <summary>
    Hash (base::HashMetricName) of a mojo interface name.

    A sample is recorded for every message the browser receives from a renderer
    for a page that is in the back-forward cache. Logging can be disabled via
    the back-forward cache feature parameter
    &quot;message_handling_when_cached&quot;.

    Renderers should not be sending messages back to the browser for pages that
    are in the back-forward cache. Eventually we will be killing such renderers
    (as we could assume that it is misbehaving because it got compromised). But
    first we must make sure that we are not sending messages by mistake (i.e.
    bugs in the renderer).
  </summary>
</histogram>

</histograms>

</histogram-configuration>
