/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtquickcontrols2-highdpi.html
    \title High-DPI Support in Qt Quick Controls 2

    Qt Quick Controls 2 support Qt's cross-platform high-DPI scaling introduced in Qt 5.6.
    The feature is opt-in, and can be enabled by setting the \c Qt::AA_EnableHighDpiScaling
    application attribute in C++ before QGuiApplication is constructed:

    \code
    #include <QGuiApplication>
    #include <QQmlApplicationEngine>

    int main(int argc, char *argv[])
    {
        QGuiApplication::setAttribute(Qt::AA_EnableHighDpiScaling); // <--
        QGuiApplication app(argc, argv);
        QQmlApplicationEngine engine;
        engine.load(QUrl(QStringLiteral("qrc:/main.qml")));
        return app.exec();
    }
    \endcode

    Alternatively, an environment variable \c QT_AUTO_SCREEN_SCALE_FACTOR=1 can be set
    to enable automatic high-DPI scaling.

    \warning \l {Qt Quick Controls}{Qt Quick Controls 1.x} are not compatible with Qt's
    automatic high-DPI scaling. There is currently no available solution for high-DPI
    support in applications wishing to mix Qt Quick Controls and Qt Quick Controls 2.

    \section1 Related Information
    \list
    \li \l {High DPI Displays}
    \li \l {Scalability}
    \endlist
*/
