/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example simplecustommaterial
    \title Qt 3D: Simple Custom Material QML Example
    \ingroup qt3d-examples-qml
    \brief Demonstrates creating a custom material in Qt 3D.

    \image simple-custom-material.jpg

    \e This example demonstrates creating a simple custom material.

    \include examples-run.qdocinc

    \section1 Specifying the Scene

    The example uses \l Scene3D to render a scene which will use the custom material.
    The scene contains a plane model, which uses the custom material.

    \quotefromfile simplecustommaterial/PlaneModel.qml
    \skipto Entity
    \printto

    \section1 Specifying the Material

    The material is specified in \l{simplecustommaterial/SimpleMaterial.qml}{SimpleMaterial.qml}
    using \l Material type. First the material specifies parameters,
    which are mapped to the corresponding uniforms in the shaders so that they can be
    changed from the qml.

    \snippet simplecustommaterial/SimpleMaterial.qml 0

    Next we specify which shaders are loaded. Separate versions of the shaders are provided
    for OpenGL ES 2 and OpenGL renderers.

    \snippet simplecustommaterial/SimpleMaterial.qml 1

    In the vertex shader we simply transform the position by the transformation matrices.

    \quotefromfile simplecustommaterial/shaders/gl3/simpleColor.vert
    \skipto void main()
    \printto

    In the fragment shader we simply set the fragment color to be the maincolor specified
    in the material.

    \quotefromfile simplecustommaterial/shaders/gl3/simpleColor.frag
    \skipto uniform vec3 maincolor;
    \printuntil ;
    \skipto void main()
    \printto

    Next, we create \l {ShaderProgram}{ShaderPrograms} from the shaders.

    \snippet simplecustommaterial/SimpleMaterial.qml 2

    Finally the shader programs are used in the Techniques corresponding to a specific
    Api profile.

    \snippet simplecustommaterial/SimpleMaterial.qml 3
*/
