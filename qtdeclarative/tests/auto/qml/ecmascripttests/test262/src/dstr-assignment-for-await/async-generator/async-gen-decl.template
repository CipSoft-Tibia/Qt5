// Copyright (C) 2017 the V8 project authors. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.
/*---
path: language/statements/for-await-of/async-gen-decl-dstr-
name: for-await-of statement in an async generator declaration
esid: sec-for-in-and-for-of-statements-runtime-semantics-labelledevaluation
features: [destructuring-binding, async-iteration]
flags: [async]
info: |
  IterationStatement :
    for await ( LeftHandSideExpression of AssignmentExpression ) Statement

  1. Let keyResult be the result of performing ? ForIn/OfHeadEvaluation(« »,
     AssignmentExpression, iterate).
  2. Return ? ForIn/OfBodyEvaluation(LeftHandSideExpression, Statement,
     keyResult, assignment, labelSet).

  13.7.5.13 Runtime Semantics: ForIn/OfBodyEvaluation

  [...]
  5. If destructuring is true and if lhsKind is assignment, then
     a. Assert: lhs is a LeftHandSideExpression.
     b. Let assignmentPattern be the parse of the source text corresponding to
        lhs using AssignmentPattern as the goal symbol.
  [...]
---*/

let iterCount = 0;
async function * fn() {
  for await (/*{ elems }*/ of [/*{ vals }*/]) {
    /*{ body }*/
    iterCount += 1;
  }
}

let iter = fn();
