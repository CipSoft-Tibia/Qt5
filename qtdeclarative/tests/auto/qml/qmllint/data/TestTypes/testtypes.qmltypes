import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "birthdayparty.h"
        name: "BirthDayPartyExtended"
        accessSemantics: "reference"
        prototype: "QObject"
        Property { name: "eee"; type: "int"; read: "eee"; write: "setEee"; notify: "eeeChanged"; index: 0 }
        Signal { name: "eeeChanged" }
    }
    Component {
        file: "birthdayparty.h"
        name: "BirthdayParty"
        accessSemantics: "reference"
        prototype: "QObject"
        extension: "BirthDayPartyExtended"
        exports: ["TestTypes/BirthdayParty 1.0"]
        exportMetaObjectRevisions: [256]
        attachedType: "BirthdayPartyAttached"
        Property {
            name: "host"
            type: "Person"
            isPointer: true
            read: "host"
            write: "setHost"
            notify: "hostChanged"
            index: 0
            isFinal: true
        }
        Property { name: "guests"; type: "Person"; isList: true; read: "guests"; index: 1; isReadonly: true }
        Signal { name: "hostChanged" }
        Method {
            name: "invite"
            Parameter { name: "name"; type: "QString" }
        }
    }
    Component {
        file: "birthdayparty.h"
        name: "BirthdayPartyAttached"
        accessSemantics: "reference"
        prototype: "QObject"
        Property {
            name: "rsvp"
            type: "QDateTime"
            bindable: "rsvpBindable"
            read: "rsvp"
            write: "setRsvp"
            index: 0
        }
    }
    Component {
        file: "cppbaseclass.h"
        name: "CppBaseClass"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["TestTypes/CppBaseClass 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "cppProp"; type: "int"; bindable: "cppPropBindable"; index: 0; isFinal: true }
        Property { name: "cppProp2"; type: "int"; bindable: "cppProp2Bindable"; index: 1; isFinal: true }
        Method {
            name: "doCall"
            Parameter { name: "foo"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        file: "cppbaseclass.h"
        name: "CppSingleton"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["TestTypes/CppSingleton 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256]
    }
    Component {
        file: "birthdayparty.h"
        name: "Nasty"
        accessSemantics: "reference"
        exports: ["TestTypes/Nasty 1.0"]
        exportMetaObjectRevisions: [256]
        attachedType: "Nasty"
    }
    Component {
        file: "objectwithmethod.h"
        name: "ObjectWithMethod"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["TestTypes/ObjectWithMethod 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "fff"; type: "int"; bindable: "theThingBindable"; index: 0; isFinal: true }
        Method { name: "doThing"; type: "int" }
    }
    Component {
        file: "person.h"
        name: "Person"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["TestTypes/Person 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "name"
            type: "QString"
            read: "name"
            write: "setName"
            notify: "nameChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "shoeSize"
            type: "int"
            read: "shoeSize"
            write: "setShoeSize"
            notify: "shoeSizeChanged"
            index: 1
        }
        Signal { name: "nameChanged" }
        Signal { name: "shoeSizeChanged" }
    }
    Component {
        file: "objectwithmethod.h"
        name: "QObject"
        accessSemantics: "reference"
        Property {
            name: "objectName"
            type: "QString"
            bindable: "bindableObjectName"
            read: "objectName"
            write: "setObjectName"
            notify: "objectNameChanged"
            index: 0
        }
        Signal {
            name: "destroyed"
            Parameter { type: "QObject"; isPointer: true }
        }
        Signal { name: "destroyed" }
        Signal {
            name: "objectNameChanged"
            Parameter { name: "objectName"; type: "QString" }
        }
        Method { name: "deleteLater" }
        Method {
            name: "_q_reregisterTimers"
            Parameter { type: "void"; isPointer: true }
        }
    }
    Component {
        file: "hasbytearray.h"
        name: "HasByteArray"
        exports: ["TestTypes/HasByteArray 1.0"]
        exportMetaObjectRevisions: [256]
        accessSemantics: "reference"
        prototype: "QObject"
        Property {
            name: "byteArray"
            type: "QByteArray"
            read: "byteArray"
            write: "setByteArray"
            notify: "byteArrayChanged"
            index: 1
        }
        Signal { name: "byteArrayChanged" }
    }

    Component {
        file: "somefile.h"
        name: "someType"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["TestTypes/MyComponent 1.0"]
        exportMetaObjectRevisions: [256]
        Method { name: "createObject"; isJavaScriptFunction: true }
    }
    Component {
        file: "variantMapLookup.h"
        name: "VariantMapLookupFoo"
        prototype: "QObject"
        exports: ["TestTypes/VariantMapLookupFoo 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "data"
            type: "QVariantMap"
            read: "data"
            index: 0
        }
    }
    Component {
        file: "foo.h"
        name: "Foo"
        prototype: "QObject"
        exports: ["TestTypes/Foo 1.0"]
        Method { name: "print" }
    }
}
