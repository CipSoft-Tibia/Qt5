// Copyright (C) 2017 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \example swipetoremove
    \keyword Qt Quick Controls - Swipe to Remove
    \title Qt Quick Controls - Swipe to Remove
    \ingroup qtquickcontrols-examples
    \brief Demonstrates removal of list items by swipe gesture.

    This example demonstrates how \l SwipeDelegate can be used to implement
    removal of list items by swiping. This UI pattern is often used in touch
    user interfaces.

    \image qtquickcontrols-swipetoremove.png "Screen shot of the app"

    Each list item can be swiped to the left, which reveals a label on the
    \l {SwipeDelegate::swipe}{right} side indicating that the item will be
    removed if the swipe is completed.

    \image qtquickcontrols-swipetoremove.gif "Animation of the app working"

    The following snippet contains the implementation of the side item.

    \snippet swipetoremove/swipetoremove.qml delegate

    The following snippet presents how the logic of removing items is
    implemented. When the swipe is \l {SwipeDelegate::swipe}{completed}, it
    starts a timer that waits a few seconds to let the user undo the remove
    action. Once the undo timer triggers, the item is removed from the list:

    \snippet swipetoremove/swipetoremove.qml removal

    Finally, the removal of an item triggers the following transitions. The
    \l {ListView::} {remove} transition applies to the item that is removed,
    and the \l {ListView::}{displaced} transition applies to the other items
    that got displaced due to the removal:

    \snippet swipetoremove/swipetoremove.qml transitions

    \include examples-run.qdocinc
*/
