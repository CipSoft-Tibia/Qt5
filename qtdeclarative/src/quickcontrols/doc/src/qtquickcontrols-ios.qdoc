// Copyright (C) 2022 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page qtquickcontrols-ios.html
    \title iOS Style

    The iOS Style is a native-looking style for iOS based on image assets.
    \l{detailed-desc-iOS}{More...}

    \styleimport {QtQuick.Controls.iOS} {Qt 6.4}

    \section1 Detailed Description
    \target detailed-desc-iOS

    The iOS style is designed to look and feel as similar as possible to the native controls in UIKit.
    Most of the controls make use of \l
    {https://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch}{9-patch
    images} to draw their components, in order to accommodate controls of varying sizes.
    For controls that do not have a native counterpart in UIKit, the iOS style
    provides a custom look based on colors and styles following \l
    {https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/color/}
    {iOS' Human Interface Guidelines }.
    The iOS style is not a native iOS style, and as such, can run on platforms other than iOS.
    However, for the time being, it is made available only for applications running on macOS
    and iOS and should look the same on both platforms, besides minor differences that may occur
    due to differences in available system fonts and font rendering engines.

    \include style-screenshots.qdocinc {file} {iOS} {ios}

    To run an application with the iOS style, see
    \l {Using Styles in Qt Quick Controls}.

    \section2 Current state

    The \l Tumbler control is not yet implemented for the iOS style and will fall back
    to use the \l {Basic Style}.

    \section2 Customization

    \section3 Palette

    The iOS style supports palette customization via the \l {Item::}{palette}
    property and the \l {Palette Configuration}{qtquickcontrols2.conf} file.
    As with other styles, the exact \l[QML]{Palette}{palette roles}
    that the iOS style uses are style-dependent. However, as most of the visual
    appearance of controls (for example: backgrounds) is managed through image assets,
    only the roles that are typically used for text will have an effect.
*/
