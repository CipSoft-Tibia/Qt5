/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtqml-modules-cppplugins.html
\title Creating C++ Plugins for QML
\brief Description of how to write C++ plugins for QML

\section1 Creating a Plugin

    The \l{QQmlEngine}{QML engine} loads C++ plugins for QML.
    Such plugins are usually provided in a QML extension module, and can
    provide types for use by clients in QML documents which import the module.
    A module requires at least one type registered in order to be considered
    valid.

    \include qqmlextensionplugin.qdocinc

\section1 Reference

    \list
    \li \l {Writing QML Extensions with C++} - contains a chapter
    on creating QML plugins.
    \li \l{Defining QML Types from C++} - information about registering C++ types into
    the runtime.
    \li \l{How to Create Qt Plugins} - information about Qt plugins
    \endlist


*/
