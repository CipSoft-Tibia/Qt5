// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
  \page sql-types.html
  \title Data Types for Qt-supported Database Systems
  \brief Recommended data types for database systems

  \section1 Recommended Data Types for Qt-Supported Database Systems

  This table shows the recommended data types for extracting data from
  the databases supported in Qt. Note that types used in Qt are not
  necessarily valid as input types to a specific database
  system. e.g., A double might work perfectly as input for floating
  point records in a particular database, but not necessarily as a
  storage format for output from that database, because it would be
  stored with 64-bit precision in C++.

  \tableofcontents

  \section2 IBM DB2 Data Types

  \table 90%
    \header
        \li IBM DB2 data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li SMALLINT
        \li 16-bit signed integer
        \li typedef qint16
    \row
        \li INTEGER
        \li 32-bit signed integer
        \li typedef qint32
    \row
        \li BIGINT
        \li 64-bit signed integer
        \li typedef qint64
    \row
        \li REAL
        \li 32-bit Single-precision floating point
        \li typedef qreal
    \row
        \li DOUBLE PRECISION
        \li 64-bit Double-precision floating point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li FLOAT
        \li 64-bit Double-precision floating point
        \li typedef qreal
    \row
        \li CHAR
        \li Fixed-length, null-terminated character string
        \li Mapped to QString
    \row
        \li VARCHAR
        \li Null-terminated varying length string
        \li Mapped to QString
    \row
        \li LONG VARCHAR
        \li Not null-terminated varying length character string
        \li Mapped to QString
    \row
        \li BLOB
        \li Not null-terminated varying binary string with 4-byte string
        length indicator
        \li Mapped to QByteArray
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li DATE
        \li Null-terminated character string of the following format:
        yyyy-mm-dd
        \li Mapped to QDate
    \row
        \li TIME
        \li Null-terminated character string of the following format: hh.mm.ss
        \li Mapped to QTime
    \row
        \li TIMESTAMP
        \li Null-terminated character string of the following format: yyyy-mm-dd-hh.mm.ss.nnnnnn
        \li Mapped to QDateTime
  \endtable

  \section2 Borland InterBase Data Types

  \table 90%
    \header
        \li Borland InterBase data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li BOOLEAN
        \li Boolean
        \li bool
    \row
        \li TINYINT
        \li 8 bit signed integer
        \li typedef qint8
    \row
        \li SMALLINT
        \li 16-bit signed integer
        \li typedef qint16
    \row
        \li INTEGER
        \li 32-bit signed integer
        \li typedef qint32
    \row
        \li BIGINT LONG
        \li 64-bit signed integer
        \li typedef qint64
    \row
        \li REAL FLOAT
        \li 32-bit floating point
        \li typedef qreal
    \row
        \li FLOAT
        \li 64-bit floating point
        \li typedef qreal
    \row
        \li DOUBLE
        \li 64-bit floating point
        \li typedef qreal
    \row
        \li DOUBLE PRECISION
        \li 64-bit Double-precision floating point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li VARCHAR STRING
        \li Character string, Unicode
        \li Mapped to QString
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li DATE
        \li Displays date. Format: 'yyyy-mm-dd'
        \li Mapped to QDate
    \row
        \li TIME
        \li Displays time. Format is 'hh:mm:ss' in 24-hour format
        \li Mapped to QTime
    \row
        \li TIMESTAMP
        \li Displays a timestamp. Format is 'yyyy-mm-dd hh:mm:ss'
        \li Mapped to QDateTime
  \endtable

  \section2 MySQL Data Types

  \table 90%
    \header
        \li MySQL data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li TINYINT
        \li 8 bit signed integer
        \li typedef qint8
    \row
        \li TINYINT UNSIGNED
        \li 8 bit unsigned integer
        \li typedef quint8
    \row
        \li SMALLINT
        \li 16-bit signed integer
        \li typedef qint16
    \row
        \li SMALLINT UNSIGNED
        \li 16-bit unsigned integer
        \li typedef quint16
    \row
        \li INT
        \li 32-bit signed integer
        \li typedef qint32
    \row
        \li INT UNSIGNED
        \li 32-bit unsigned integer
        \li typedef quint32
    \row
        \li BIGINT
        \li 64-bit signed integer
        \li typedef qint64
    \row
        \li FLOAT
        \li 32-bit Floating Point
        \li typedef qreal
    \row
        \li DOUBLE
        \li 64-bit Floating Point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li CHAR
        \li Character string
        \li Mapped to QString
    \row
        \li VARCHAR
        \li Character string
        \li Mapped to QString
    \row
        \li TINYTEXT
        \li Character string
        \li Mapped to QString
    \row
        \li TEXT
        \li Character string
        \li Mapped to QString
    \row
        \li MEDIUMTEXT
        \li Character string
        \li Mapped to QString
    \row
        \li LONGTEXT
        \li Character string
        \li Mapped to QString
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li all BLOB types
        \li BLOB
        \li Mapped to QByteArray
    \row
        \li DATE
        \li Date without Time
        \li Mapped to QDate
    \row
        \li DATETIME
        \li Date and Time
        \li Mapped to QDateTime
    \row
        \li TIMESTAMP
        \li Date and Time
        \li Mapped to QDateTime
    \row
        \li TIME
        \li Time
        \li Mapped to QTime
    \row
        \li YEAR
        \li Year (int)
        \li Mapped to QDateTime
    \row
        \li ENUM
        \li Enumeration of Value Set
        \li Mapped to QString
  \endtable

  \section2 Oracle Call Interface Data Types

  \table 90%
    \header
        \li Oracle Call Interface data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li NUMBER
        \li FLOAT, DOUBLE, PRECISIONc REAL
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li NUMBER(38)
        \li INTEGER INT SMALLINT
        \li typedef qint8/16/32/64
    \row
        \li NUMBER(p,s)
        \li NUMERIC(p,s) DECIMAL(p,s)a
        \li Mapped to QString
    \row
        \li NVARCHAR2(n)
        \li Character string (NATIONAL CHARACTER VARYING(n) NATIONAL
        CHAR VARYING(n) NCHAR VARYING(n))
        \li Mapped to QString
    \row
        \li NCHAR(n)
        \li Character string (NATIONAL CHARACTER(n) NATIONAL CHAR(n)
        NCHAR(n))
    \li Mapped to QString
    \row
        \li CHAR(n)
        \li Character string (CHARACTER(n) CHAR(n))
        \li Mapped to QString
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li BLOB
        \li A binary large object
        \li Mapped to QByteArray
    \row
        \li TIMESTAMP
        \li Year, month, and day values of date, as well as hour, minute,
        and second values of time
        \li Mapped to QDateTime
  \endtable

  \section2 ODBC Data Types

  \table 90%
    \header
        \li ODBC data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li BIT
        \li Boolean
        \li BOOL
    \row
        \li TINYINT
        \li 8 bit integer
        \li typedef qint8
    \row
        \li SMALLINT
        \li 16-bit signed integer
        \li typedef qint16
    \row
        \li INTEGER
        \li 32-bit signed integer
        \li typedef qint32
    \row
        \li BIGINT
        \li 64-bit signed integer
        \li typedef qint64
    \row
        \li REAL
        \li 32-bit Single-precision floating point
        \li typedef qreal
    \row
        \li FLOAT
        \li 64-bit Double floating point
        \li typedef qreal
    \row
        \li DOUBLE
        \li 64-bit Double floating point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li CHAR
        \li Character string
        \li Mapped to QString
    \row
        \li VARCHAR
        \li Character string
        \li Mapped to QString
    \row
        \li LONGVARCHAR
        \li Character string
        \li Mapped to QString
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li DATE
        \li Character string
        \li Mapped to QDate
    \row
        \li TIME
        \li Character Time, Character string
        \li Mapped to QTime
    \row
        \li TIMESTAMP
        \li Character Time, Character string
        \li Mapped to QDateTime
  \endtable

  \section2 PostgreSQL Data Types

  \table 90%
    \header
        \li PostgreSQL data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li BOOLEAN
        \li Boolean
        \li bool
    \row
        \li SMALLINT
        \li 16-bit signed integer
        \li typedef qint16
    \row
        \li INTEGER
        \li 32-bit signed integer
        \li typedef qint32
    \row
        \li BIGINT
        \li 64-bit signed integer
        \li typedef qint64
    \row
        \li REAL
        \li 32-bit variable-precision floating point
        \li typedef qreal
    \row
        \li DOUBLE PRECISION
        \li 64-bit variable-precision floating point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li DECIMAL VARIABLE
        \li user-specified precision, exact
        \li typedef qreal
    \row
        \li NUMERIC VARIABLE
        \li user-specified precision, exact
        \li typedef qreal
    \row
        \li VARCHAR
        \li variable-length character string
        \li Mapped to QString
    \row
        \li CHARACTER
        \li Character string of fixed-length
        \li Mapped to QString
    \row
        \li TEXT
        \li Character string of variable-length
        \li Mapped to QString
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li TIMESTAMP
        \li 8 bytes, both date and time
        \li Mapped to QDateTime
    \row
        \li TIMESTAMP
        \li 8 bytes, both date and time, with time zone
        \li Mapped to QDateTime
    \row
        \li DATE
        \li 4 bytes, dates only
        \li Mapped to QDate
    \row
        \li TIME
        \li 8 bytes, times of day only 00:00:00.00 - 23:59:59.99
        \li Mapped to QTime
    \row
        \li TIME
        \li 12 bytes times of day only, with time zone 00:00:00.00+12
        \li Mapped to QDateTime
  \endtable

  \section2 QSQLITE SQLite version 3 Data Types

  \table 90%
    \header
        \li QSQLITE SQLite version 3 data type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li NULL
        \li NULL value.
        \li NULL
    \row
        \li INTEGER
        \li Signed integer, stored in 8, 16, 24, 32, 48, or 64-bits
        depending on the magnitude of the value.
        \li typedef qint8/16/32/64
    \row
        \li REAL
        \li 64-bit floating point value.
        \li typedef qreal
    \row
        \li TEXT
        \li Character string (UTF-8, UTF-16BE or UTF-16-LE).
        \li Mapped to QString
    \row
        \li CLOB
        \li Character large string object
        \li Mapped to QString
    \row
        \li BLOB
        \li The value is a BLOB of data, stored exactly as it was input.
        \li Mapped to QByteArray
  \endtable

  \section2 Mimer SQL Data Types

  \table 90%
    \header
        \li Mimer SQL type
        \li SQL type description
        \li Recommended input (C++ or Qt data type)
    \row
        \li SMALLINT
        \li 16-bit signed integer
        \li typedef qint16
    \row
        \li INTEGER
        \li 32-bit signed integer
        \li typedef qint32
    \row
        \li INTEGER(n)
        \li Integer with up to 45 digits precision
        \li Mapped to QString
    \row
        \li BIGINT
        \li 64-bit signed integer
        \li typedef qint64
    \row
        \li REAL
        \li 32-bit Single-precision IEEE floating point
        \li typedef float
    \row
        \li DOUBLE PRECISION
        \li 64-bit Double-precision IEEE floating point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li FLOAT
        \li 64-bit Double-precision IEEE floating point
        \li Mapped to QString for high precision doubles, otherwise qreal
    \row
        \li FLOAT(n)
        \li Floating point with up to 45 digits precision
        \li Mapped to QString
    \row
        \li DECIMAL(p,s)
        \li Decimal with up to 45 digits precision and scale
        \li Mapped to QString
    \row
        \li CHAR
        \li Fixed-length character Latin-1 string (CHAR or character)
        \li Mapped to QString
    \row
        \li VARCHAR
        \li Variable length Latin-1 string (VARCHAR or CHARACTER VARYING)
        \li Mapped to QString
    \row
        \li NCHAR
        \li Fixed-length Unicode string (NCHAR or NATIONAL CHARACTER)
        \li Mapped to QString
    \row
        \li NVARCHAR
        \li Variable length Unicode string (NVARCHAR or NATIONAL CHARACTER VARYING)
        \li Mapped to QString
    \row
        \li BINARY
        \li Fixed length binary data
        \li Mapped to QByteArray
    \row
        \li VARBINARY
        \li Variable length binary data (VARBINARY or BINARY VARYING)
        \li Mapped to QByteArray
    \row
        \li BLOB
        \li Binary large object (BLOB or BINARY LARGE OBJECT)
        \li Mapped to QByteArray
    \row
        \li CLOB
        \li Latin-1 character large object (CLOB or CHARACTER LARGE OBJECT)
        \li Mapped to QString
    \row
        \li NCLOB
        \li Unicode character large object (NCLOB or NATIONAL CHARACTER LARGE OBJECT)
        \li Mapped to QString
    \row
        \li DATE
        \li Date consisting of year, month, and day
        \li Mapped to QDate
    \row
        \li TIME
        \li Time consisting of hours, minute, seconds with optional fractional seconds
        \li Mapped to QTime
    \row
        \li TIMESTAMP
        \li Date and time with optional fractional seconds
        \li Mapped to QDateTime
    \row
        \li BUILTIN.UUID
        \li Universally unique identifier
        \li Mapped to QUuid
    \row
        \li BOOLEAN
        \li Boolean
        \li bool
    \row
        \li INTERVAL YEAR(7)
        \li Year, format '±yyyyyyy' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL YEAR(7) TO MONTH
        \li Year to month, format '±yyyyyyy-mm' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL MONTH(7)
        \li Month, format '±mmmmmmm' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL DAY(7)
        \li Day, format '±ddddddd' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL DAY(7) TO HOUR
        \li Day to hour, format '±ddddddd hh' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL DAY(7) TO MINUTE
        \li Day to minute, format '±ddddddd hh:mm' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL DAY(7) TO SECOND(9)
        \li Day to second, format '±ddddddd hh:mm:ss[.fffffffff]' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL HOUR(8)
        \li Hour, format '±hhhhhhhh' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL HOUR(8) TO MINUTE
        \li Hour to minute, format '±hhhhhhhh:mm' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL HOUR(8) TO SECOND(9)
        \li Hour to second, format '±hhhhhhhh:mm:ss[.fffffffff]' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL MINUTE(10)
        \li Minute, format '±mmmmmmmmmm' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL MINUTE(10) TO SECOND(9)
        \li Minute to second, format '±mmmmmmmmmm:ss[.fffffffff]' (max precision)
        \li Mapped to QString
    \row
        \li INTERVAL SECOND(12,9)
        \li Second, format '±ssssssssssss[.fffffffff]' (max precision)
        \li Mapped to QString
  \endtable
*/
