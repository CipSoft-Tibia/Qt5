// Copyright (C) 2020 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page qtdbus-index.html
    \title Qt D-Bus
    \brief An introduction to Inter-Process Communication and Remote Procedure Calling with D-Bus.

    \keyword QtDBus

    D-Bus is an Inter-Process Communication (IPC) and Remote Procedure
    Calling (RPC) mechanism originally developed for Linux to replace
    existing and competing IPC solutions with one unified protocol. It
    was also designed to allow communication between system-level
    processes (such as printer and hardware driver services) and
    normal user processes.

    It uses a fast, binary message-passing protocol, which is suitable
    for same-machine communication due to its low latency and low
    overhead. Its specification is currently defined by the
    \tt{freedesktop.org} project and is available to all parties.

    Communication, in general, happens through a central server
    application called the "bus" (hence the name), but direct
    application-to-application communication is also possible. When
    communicating on a bus, applications can query which other
    applications and services are available, as well as activate one
    on demand.

    \section1 Using the Module

    \include {module-use.qdocinc} {using the c++ api}

    \include {module-use.qdocinc} {building with cmake} {DBus}

    \section1 Articles and Guides

    The following documents contain information about Qt's D-Bus integration
    features and provide details about the mechanisms used to send and receive
    type information over the bus:

    \list
      \li \l {Qt D-Bus Overview}
      \li \l {Using Qt D-Bus Adaptors}
      \li \l {The Qt D-Bus Type System}
      \li \l {Qt D-Bus XML compiler (qdbusxml2cpp)}
      \li \l{D-Bus Viewer}
    \endlist

    \section1 Examples

    \list
      \li \l{Qt D-Bus Examples}
    \endlist

    \section1 Reference

    \list
      \li \l{Qt D-Bus C++ Classes}
      \li \l{CMake Commands in Qt6 DBus}
    \endlist

    \section1 Module Evolution

    \l{Changes to Qt D-Bus} lists important changes in the module API
    and functionality that were made for the Qt 6 series of Qt.

    \section1 Licenses and Attributions

    The Qt D-Bus module is available under commercial licenses from \l{The Qt Company}.
    In addition, it is available under free software licenses:
    The \l{GNU Lesser General Public License, version 3}, or
    the \l{GNU General Public License, version 2}.
    See \l{Qt Licensing} for further details.

    Furthermore, Qt D-Bus in Qt \QtVersion may contain third party
    modules under the following permissive licenses:

    \generatelist{groupsbymodule attributions-qtdbus}
*/

/*!
  \page qdbusviewer.html
  \title D-Bus Viewer
  \keyword qdbusviewer

  The Qt D-Bus Viewer is a tool that lets you introspect D-Bus objects and messages. You can
  choose between the system bus and the session bus. Click on any service on the list
  on the left side to see all the exported objects.

  You can invoke methods by double-clicking on them. If a method takes one or more IN parameters,
  a property editor opens.

  Right-click on a signal to connect to it. All emitted signals including their parameters
  are output in the message view on the lower side of the window.
*/
