// Copyright (C) 2020 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
\page qt-android-add-apk-target.html
\ingroup cmake-commands-qtcore

\title qt_android_add_apk_target
\keyword qt6_android_add_apk_target

\summary {Defines a build target that runs androiddeployqt to produce an APK.}

\include cmake-find-package-core.qdocinc

\cmakecommandsince 6.0
\warning This command is deprecated since Qt 6.5. Use \l qt_add_executable instead.
\cmakecommandandroidonly

\section1 Synopsis

\badcode
qt_android_add_apk_target(target)
\endcode

\versionlessCMakeCommandsNote qt6_android_add_apk_target()

\section1 Description

The \c{<target>_make_apk} and \c{<target>_make_aab} custom targets created by
this command take an Android deployment settings file and generate APK and
AAB respectively by running \c{androiddeployqt}.
The location of the settings file is taken from the \c{target}'s
\c{QT_ANDROID_DEPLOYMENT_SETTINGS_FILE} property. This file is typically created by
\l{qt6_android_generate_deployment_settings}{qt_android_generate_deployment_settings()}.
The respective Android package will be generated in an \c{android-build}
subdirectory below the CMake build directory of the \c{target}.

The \c{<target>_make_apk} and \c{<target>_make_aab} targets will be
automatically added as dependencies of the \c{apk} and \c{aab} build targets
respectively, which will be created automatically. Creating of the \c{apk} and
\c{aab} targets can be disabled by setting the \c{QT_NO_GLOBAL_APK_TARGET} and
\c{QT_NO_GLOBAL_AAB_TARGET} variables to \c{TRUE}.

\sa {qt6_android_generate_deployment_settings}{qt_android_generate_deployment_settings()},
    {qt6_finalize_target}{qt_finalize_target()},
    {qt6_finalize_project}{qt_finalize_project()}

\section1 Example

\snippet cmake-macros/examples.cmake qt_android_deploy_basic

The above commands define the \c{myapp_make_apk}, \c{myapp_make_aab}, \c{apk},
and \c{aab} build targets which can be used to generate just the
\c{myapp} packages or all APKs and AABs in the project respectively.
*/
