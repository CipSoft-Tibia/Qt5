// Copyright (C) 2020 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
\page qt-generate-moc.html
\ingroup cmake-commands-qtcore

\title qt_generate_moc
\keyword qt6_generate_moc

\summary {Calls moc on an input file.}

\include cmake-find-package-core.qdocinc

\cmakecommandsince 5.0

\section1 Synopsis

\badcode
qt_generate_moc(src_file dest_file
                [TARGET target])
\endcode

\versionlessCMakeCommandsNote qt6_generate_moc()

\section1 Description

Creates a rule to call the \l{moc}{Meta-Object Compiler (moc)} on \c src_file
and store the output in \c dest_file.

\note This is a low-level macro. See the \l{CMake AUTOMOC Documentation} for a
more convenient way to let source files be processed with \c{moc}.
\l qt_wrap_cpp is also similar, but automatically generates a temporary file
path for you.

\section1 Arguments

You can set an explicit \c{TARGET}. This will make sure that the target
properties \c{INCLUDE_DIRECTORIES} and \c{COMPILE_DEFINITIONS} are also used
when scanning the source files with \c{moc}.

\section1 Examples

\snippet cmake-macros/examples.cmake qt_generate_moc
*/
