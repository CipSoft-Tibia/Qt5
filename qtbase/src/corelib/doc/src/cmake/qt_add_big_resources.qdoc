// Copyright (C) 2020 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
\page qt-add-bigresources.html
\ingroup cmake-commands-qtcore

\title qt_add_big_resources
\keyword qt6_add_big_resources

\summary {Compiles big binary resources into object code.}

\include cmake-find-package-core.qdocinc

\cmakecommandsince 5.12

\section1 Synopsis

\badcode
qt_add_big_resources(<VAR> file1.qrc [file2.qrc ...]
                     [OPTIONS ...])
\endcode

\versionlessCMakeCommandsNote qt6_add_big_resources()

\section1 Description

Creates compiled object files from Qt resource files using the
\l{Resource Compiler (rcc)}. Paths to the generated files are added to
\c{<VAR>}.

This is similar to \l qt_add_resources, but directly
generates object files (\c .o, \c .obj) files instead of C++ source code.
This allows to embed bigger resources, where compiling to C++ sources and then
to binaries would be too time consuming or memory intensive.

\note The \c{file1.qrc} will not be treated as a source file by Qt Creator. It
needs to be added as a source file to a CMake target and have the property
\c{SKIP_AUTORCC} set to \c{ON}.

\warning This command is not supported when building for iOS, use
\l qt_add_resources instead.
See \l{https://bugreports.qt.io/browse/QTBUG-103497}{QTBUG-103497} for details.

\section1 Arguments

You can set additional \c{OPTIONS} that should be added to the \c{rcc} calls.
You can find possible options in the \l{rcc}{rcc documentation}.

\section1 Examples

\snippet cmake-macros/examples.cmake qt_add_big_resources
*/
