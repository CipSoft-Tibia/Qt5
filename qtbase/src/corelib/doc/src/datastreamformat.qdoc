/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page datastreamformat.html
    \title Serializing Qt Data Types
    \brief List of data types that can be serialized by QDataStream.

    The \l QDataStream class allows you to serialize the Qt data types
    listed in this section as of \l{QDataStream::setVersion()}{version 18}.

    It is always best to cast integers to a Qt integer type, such as
    \l{qint16} or \l{quint32}, when reading and writing. This ensures that
    you always know exactly what size integers you are reading and
    writing, no matter what the underlying platform and architecture
    the application happens to be running on.

    \list
    \li bool
    \li \l{qint8}
    \li \l{qint16}
    \li \l{qint32}
    \li \l{qint64}
    \li \l{quint8}
    \li \l{quint16}
    \li \l{quint32}
    \li \l{quint64}
    \li \c float
    \li \c double
    \li \c {const char *}
    \li QBitArray
    \li QBrush
    \li QByteArray
    \li QColor
    \li QCursor
    \li QDate
    \li QDateTime
    \li QEasingCurve
    \li QFont
    \li QGenericMatrix
    \li QHash<Key, T>
    \li QIcon
    \li QImage
    \li QKeySequence
    \li QLinkedList<T>
    \li QList<T>
    \li QMap<Key, T>
    \li QMargins
    \li QMatrix4x4
    \li QPair<T1, T2>
    \li QPalette
    \li QPen
    \li QPicture
    \li QPixmap
    \li QPoint
    \li QQuaternion
    \li QRect
    \li QRegExp
    \li QRegularExpression
    \li QRegion
    \li QSize
    \li QString
    \li QTime
    \li QTransform
    \li QUrl
    \li QVariant
    \li QVector2D
    \li QVector3D
    \li QVector4D
    \li QVector<T>
    \endlist

    \sa {JSON Support in Qt}
*/
