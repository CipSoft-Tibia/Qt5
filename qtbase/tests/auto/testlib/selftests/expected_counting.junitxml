<?xml version="1.0" encoding="UTF-8" ?>
<testsuite name="tst_Counting" timestamp="@TEST_START_TIME@" hostname="@HOSTNAME@" tests="32" failures="8" errors="0" skipped="8" time="@TEST_DURATION@">
  <properties>
    <property name="QTestVersion" value="@INSERT_QT_VERSION_HERE@"/>
    <property name="QtVersion" value="@INSERT_QT_VERSION_HERE@"/>
    <property name="QtBuild" value=""/>
  </properties>
  <testcase name="initTestCase" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testPassPass(row 1)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testPassPass(row 2)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testPassSkip(row 1)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testPassSkip(row 2)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skipping"/>
  </testcase>
  <testcase name="testPassFail(row 1)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testPassFail(row 2)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="&apos;false&apos; returned FALSE. ()"/>
  </testcase>
  <testcase name="testSkipPass(row 1)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skipping"/>
  </testcase>
  <testcase name="testSkipPass(row 2)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testSkipSkip(row 1)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skipping"/>
  </testcase>
  <testcase name="testSkipSkip(row 2)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skipping"/>
  </testcase>
  <testcase name="testSkipFail(row 1)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skipping"/>
  </testcase>
  <testcase name="testSkipFail(row 2)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="&apos;false&apos; returned FALSE. ()"/>
  </testcase>
  <testcase name="testFailPass(row 1)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="&apos;false&apos; returned FALSE. ()"/>
  </testcase>
  <testcase name="testFailPass(row 2)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testFailSkip(row 1)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="&apos;false&apos; returned FALSE. ()"/>
  </testcase>
  <testcase name="testFailSkip(row 2)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skipping"/>
  </testcase>
  <testcase name="testFailFail(row 1)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="&apos;false&apos; returned FALSE. ()"/>
  </testcase>
  <testcase name="testFailFail(row 2)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="&apos;false&apos; returned FALSE. ()"/>
  </testcase>
  <testcase name="testFailInInit(before)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testFailInInit(fail)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="Fail in init()"/>
  </testcase>
  <testcase name="testFailInInit(after)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testFailInCleanup(before)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testFailInCleanup(fail)" classname="tst_Counting" time="@TEST_DURATION@">
    <failure type="fail" message="Fail in cleanup()"/>
    <system-out>
      <![CDATA[This test function should execute and then QFAIL in cleanup()]]>
    </system-out>
  </testcase>
  <testcase name="testFailInCleanup(after)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testSkipInInit(before)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testSkipInInit(skip)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skip in init()"/>
  </testcase>
  <testcase name="testSkipInInit(after)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testSkipInCleanup(before)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="testSkipInCleanup(skip)" classname="tst_Counting" time="@TEST_DURATION@">
    <skipped message="Skip in cleanup()"/>
    <system-out>
      <![CDATA[This test function should execute and then QSKIP in cleanup()]]>
    </system-out>
  </testcase>
  <testcase name="testSkipInCleanup(after)" classname="tst_Counting" time="@TEST_DURATION@"/>
  <testcase name="cleanupTestCase" classname="tst_Counting" time="@TEST_DURATION@"/>
</testsuite>
