include($QT_INSTALL_DOCS/global/qt-module-defaults.qdocconf)

# Name of the project which must match the outputdir. Determines the .index file
project = QtScriptTools

exampledirs += snippets

headerdirs += ..
imagedirs += images
sourcedirs += ..

depends += qtcore qtlinguist qtscript qtdoc qtwidgets qtqml qmake

# The following parameters are for creating a qhp file, the qhelpgenerator
# program can convert the qhp file into a qch file which can be opened in
# Qt Assistant and/or Qt Creator.

# Defines the name of the project. You cannot use operators (+, =, -) in
# the name. Properties for this project are set using a qhp.<projectname>.property
# format.
qhp.projects = QtScriptTools

# Sets the name of the output qhp file.
qhp.QtScriptTools.file = qtscripttools.qhp

# Namespace for the output file. This namespace is used to distinguish between
# different documentation files in Creator/Assistant.
qhp.QtScriptTools.namespace = org.qt-project.qtscripttools.$QT_VERSION_TAG

# Title for the package, will be the main title for the package in
# Assistant/Creator.
qhp.QtScriptTools.indexTitle = Qt Script Tools

# Only update the name of the project for the next variables.
qhp.QtScriptTools.virtualFolder  = qtscripttools
qhp.QtScriptTools.subprojects = classes
qhp.QtScriptTools.subprojects.classes.title = C++ Classes
qhp.QtScriptTools.subprojects.classes.indexTitle = Qt Script Tools C++ Classes
qhp.QtScriptTools.subprojects.classes.selectors = class fake:headerfile
qhp.QtScriptTools.subprojects.classes.sortPages = true

navigation.landingpage = "Qt Script Tools"
navigation.cppclassespage = "Qt Script Tools C++ Classes"
