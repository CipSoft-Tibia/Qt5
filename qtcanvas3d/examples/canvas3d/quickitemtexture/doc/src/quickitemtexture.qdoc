/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example quickitemtexture
    \since QtCanvas3D 1.0
    \title Qt Quick Item as Texture Example
    \ingroup qtcanvas3d-examples
    \brief A simple cube with a Qt Quick item as a texture.

    The Qt Quick Item as Texture example shows how to use other Qt Quick items as
    a texture source for Qt Canvas3D textures.

    \image quickitemtexture-example.png

    \section1 Using Qt Quick Item as a Texture

    First we create a \l Rectangle with a label that displays the current frame rate and rotation
    values of the cube:

    \snippet quickitemtexture/qml/quickitemtexture/main.qml 0

    We want to use the above \l Rectangle as the texture on our 3D cube. As a \l Rectangle item
    doesn't implement QQuickItem::textureProvider() by itself, we make it layered by setting the
    \c{layer.enabled} property to \c{true}.

    To create a Canvas3DTexture out of our layered \l{Rectangle}, we create a
    \l{Canvas3DTextureProvider}{QTCANVAS3D_texture_provider} extension and the texture
    in the \c initializeGL() function in our JavaScript implementation:

    \snippet quickitemtexture/qml/quickitemtexture/quickitemtexture.js 0

    Once the \c cubeTexture item is created, it can be used like any other texture item in
    the JavaScript.

    \note The method of creating the texture from a Qt Quick item differs from how one would create
    texture from an HTML item in WebGL API. Textures created with
    \l{Canvas3DTextureProvider}{QTCANVAS3D_texture_provider} extension
    support automatic live updates, without having to call textureImage2D each frame
    to re-upload fresh texture data from the item.
*/
