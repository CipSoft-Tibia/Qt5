/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example interaction
    \since QtCanvas3D 1.0
    \title Interaction Example
    \ingroup qtcanvas3d-examples
    \brief Interact with an object in canvas using Qt Quick Controls.

    The Interaction Example concentrates on the interaction between
    \l {Qt Quick Controls} and the objects displayed in Canvas3D. This
    also demonstrates drawing the same object in three different ways.

    \image interaction-example.png

    \section1 The Controls

    First, we need to import Qt Quick Controls and Layouts:

    \snippet interaction/qml/interaction/main.qml 0

    Then, we add a RowLayout to the main component to easily add the
    controls side-by-side:

    \snippet interaction/qml/interaction/main.qml 1

    And then we add three sliders to the layout. Here's the one for
    controlling x-axis rotation:

    \snippet interaction/qml/interaction/main.qml 2

    \section1 Interaction

    First we need to define some properties in the Canvas3D for the
    rotations:

    \snippet interaction/qml/interaction/main.qml 3

    The \c onValueChanged signal handlers of the \l[QML]{Slider} components
    are connected to the above properties. Here's the connection in x-rotation
    slider as an example:

    \snippet interaction/qml/interaction/main.qml 4

    Then, on the JavaScript side, we just use the Canvas3D properties directly
    when setting the modelview matrix rotations:

    \snippet interaction/qml/interaction/interaction.js 0

    \section1 Three Ways of Drawing

    The actual drawing is no different from any situation where
    the same object is drawn multiple times. Only in this case we use a
    different drawing mode for each:

    \snippet interaction/qml/interaction/interaction.js 1
    \dots 0
    \snippet interaction/qml/interaction/interaction.js 2
    \dots 0
    \snippet interaction/qml/interaction/interaction.js 3
 */
