/****************************************************************************
**
** Copyright (C) 2016 Klar√§lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Milian Wolff <milian.wolff@kdab.com>
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtWebChannel module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example standalone
    \title Qt WebChannel Standalone Example
    \ingroup qtwebchannel-examples
    \image standalone-screenshot.png
    \brief A simple chat between a server and a remote client running in a
    browser.

    \e{Standalone} demonstrates how to use the QWebChannel C++ API to
    communicate with an external client. It is a simple chat between a C++
    application and a remote HTML client running in your default browser.

    \include examples-run.qdocinc

    \section1 Communicating with a Remote Client

    The C++ application sets up a QWebChannel instance and publishes a \c Core object over it.
    For the remote client side, \l {standalone/index.html}{index.html} is opened. Both show a
    dialog with the list of received messages and an input box to send messages to the other end.

    The \c Core emits the \c Core::sendText() signal when the user sends a message. The signal
    automatically gets propagated to the HTML client. When the user enters a message on the HTML
    side, \c Core::receiveText() is called.

    All communication between the HTML client and the C++ server is done over a WebSocket.
    The C++ side instantiates a QWebSocketServer and wraps incoming QWebSocket connections
    in QWebChannelAbstractTransport objects. These objects are
    then connected to the QWebChannel instance.

    \sa {Qt WebChannel JavaScript API}
*/
