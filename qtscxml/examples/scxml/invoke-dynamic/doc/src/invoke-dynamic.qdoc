/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example invoke-dynamic
    \title Qt SCXML Invoke Example (Dynamic)
    \ingroup examples-qtscxml

    \brief Invokes a dynamically loaded nested state machine.

    \image invoke-dynamic.png

    \e{Invoke Example (Dynamic)} demonstrates how to use the \c <invoke> element
    with generated nested state-machines, where the SCXML file is dynamically
    loaded. The \c <invoke> element is used to create an instance of an external
    service.

    \include examples-run.qdocinc

    \section1 Invoking the State Machine

    In \e statemachine.scxml, we specify a state machine with the name
    \e Directions of type \e http://www.w3.org/TR/scxml/ to invoke:

    \quotefromfile invoke-common/statemachine.scxml
    \skipto scxml
    \printuntil

    \section1 Dynamically Loading the State Machine

    We link against the Qt SCXML module by adding the following line to the
    \e invoke-dynamic.pro file:

    \quotefromfile invoke-dynamic/invoke-dynamic.pro
    \skipto QT
    \printline scxml

    We dynamically create the state machine, as follows:

    \quotefromfile invoke-dynamic/invoke-dynamic.qml
    \skipto import
    \printuntil }
*/
