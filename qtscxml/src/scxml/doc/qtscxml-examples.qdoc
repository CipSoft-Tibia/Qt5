/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\group examples-qtscxml
\title Qt SCXML Examples
\brief Examples for the Qt SCXML module.
\ingroup all-examples

The Qt SCXML example applications demonstrate the functionality provided by the
\l{Qt SCXML} module.

There are multiple versions of the \e Invoke, \e {Media Player}, and
\e {Traffic Light} example applications. Each application has some common files
that are stored in a common folder, in addition to the files stored in the
example version folder.

All versions of an example application have the same appearance and
fuctionality. They demonstrate the different options for creating user
interfaces (using \l {Qt Widgets} or \l {Qt Quick}) and for loading the SCXML
dynamically versus first compiling it to a C++ class (the \e static versions).

In addition, the Media Player example versions demonstrate how to access the C++
and ECMAScript data models.
*/
