<?xml version="1.0" ?>
<!--
/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtScxml module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:GPL-EXCEPT$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 as published by the Free Software
** Foundation with exceptions as appearing in the file LICENSE.GPL3-EXCEPT
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/
-->
<scxml xmlns="http://www.w3.org/2005/07/scxml" version="1.0"
       name="EventOccurred" datamodel="ecmascript">
    <state id="top">
        <state id="a">
            <onentry>
                <raise event="internalEvent1"/>
                <send event="internalEvent2"/>
                <send event="externalEvent"/>
                <send event="timeout" delay="1s"/>
            </onentry>
            <transition event="timeout" target="final"/>
        </state>
        <final id="final"/>

        <!--
            The done.state.* events are internal, so expose them to the spy too by re-sending them as
            external events:
        -->
        <transition event="done.state.*" cond="_event.type === 'internal'">
            <send eventexpr="_event.name"/>
        </transition>
    </state>
</scxml>
