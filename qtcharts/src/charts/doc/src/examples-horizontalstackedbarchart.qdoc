/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example horizontalstackedbarchart
    \title HorizontalStackedBarChart Example
    \ingroup qtcharts_examples

    \brief The example shows how to create a simple stacked horizontal bar chart.

    The stacked bar chart shows the data in sets as bars that are
    stacked on top of each other. The stacking is done per category.
    Creating a stacked horizontal bar chart is just like creating a regular \l {BarChart Example} {bar chart}, except that for a
    stacked horizontal bar chart, we use the QHorizontalStackedBarSeries api instead of QBarSeries.

    \image examples_horizontalstackedbarchart.png

    \include examples-run.qdocinc

    \section1 Creating Horizontal Stacked Bar Charts

    The bar sets are used in same way in all bar charts.
    To illustrate the difference between various barcharts, we use the same data in all examples.
    The data that barchart visualizes, is defined by the QBarSet instances. Here we create the sets and append data
    to them. The data is appended here with the << operator. Alternatively, the append method could also be used.

    \snippet horizontalstackedbarchart/main.cpp 1

    We create the series and append the bar sets to it. The series takes ownership of the bar sets. The series groups the data from sets to categories.
    The first values of each set are grouped together in the first category, the second values in the second category and so on.

    \snippet horizontalstackedbarchart/main.cpp 2

    Here we create the chart object and add the series to it. We set the title for the chart with setTitle, and then turn on the animations of the series by calling
    setAnimationOptions(QChart::SeriesAnimations).

    \snippet horizontalstackedbarchart/main.cpp 3

    To have the categories displayed on an axis, we need to create a
    QBarCategoryAxis first. Here we create a category axis with a list of
    categories and add it to the chart on the left-hand side, acting as the
    y-axis. The chart takes ownership of the axis. For x-axis we use a value
    axis, aligned to the bottom.

    \snippet horizontalstackedbarchart/main.cpp 4

    We also want to show the legend. To do that, we get the legend pointer from the chart and
    set it to visible. We also place the legend to the bottom of the chart by setting its alignment
    to Qt::AlignBottom.

    \snippet horizontalstackedbarchart/main.cpp 5

    Finally we add the chart onto a view. We also turn on the antialiasing for the chartView.

    \snippet horizontalstackedbarchart/main.cpp 6

    The chart is ready to be shown. We set the chart to be the central widget of the window.
    We also set the size for the chart window and show it.

    \snippet horizontalstackedbarchart/main.cpp 7
*/
