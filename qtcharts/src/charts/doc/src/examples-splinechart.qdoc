/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example splinechart
    \title SplineChart Example
    \ingroup qtcharts_examples

    \brief The example shows how to create a simple spline chart.

    \image examples_splinechart.png

    \include examples-run.qdocinc

    \section1 Creating Spline Charts

    To create spline charts we need to put our data into QSplineSeries. QSplineSeries automatically
    calculates spline segment control points that are needed to properly draw the spline.

    \snippet splinechart/main.cpp 1

    Now let's add some data points to the series.

    \snippet splinechart/main.cpp 2

    The data series has been populated. To display it on a chart we create a QChart object and add
    the data series to it. We also set the title and the values range on the y-axis, so that our
    chart's visibility is better.

    \snippet splinechart/main.cpp 3

    Then we create a QChartView object with QChart as a parameter. This way we don't need to create
    a QGraphicsView scene ourselves. We also set the Antialiasing on to have the rendered lines
    look nicer.

    \snippet splinechart/main.cpp 4

    Finally, we set the QChartView as the windows's central widget.

    \snippet splinechart/main.cpp 5
*/
