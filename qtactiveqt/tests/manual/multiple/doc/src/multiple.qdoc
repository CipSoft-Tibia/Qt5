// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page qaxserver-demo-multiple.html
    \title Two Simple Qt Widgets

    \input multiple-demo.qdocinc
*/

/*!
    \example activeqt/multiple
    \title Multiple Example (ActiveQt)
    \ingroup activeqt-examples

    \brief The Multiple example demonstrates the implementation of a
    QAxFactory to provide multiple ActiveX controls in a single in
    process ActiveX server using the \c QAXFACTORY_EXPORT() macro.
    The ActiveX controls in this example are simple QWidget
    subclasses that reimplement QWidget::paintEvent().

    \snippet activeqt/multiple/ax1.h 0

    The first control draws a filled rectangle. The fill color is exposed
    as a property. \c Q_CLASSINFO() is used to specify the COM identifiers.

    \snippet activeqt/multiple/ax2.h 0

    The second control draws a circle. The linewith is exposed as a property.
    \c Q_CLASSINFO() is used to specify the COM identifiers, and to set the
    attributes \e ToSuperClass and \e StockEvents to expose only the API of
    the class itself, and to add COM stock events to the ActiveX control.

    \snippet activeqt/multiple/main.cpp 0

    The classes are exported from the server using the QAxFactory macros.

    To build the example you must first build the QAxServer library.
    Then run \c qmake and your make tool in  \c
    examples/activeqt/multiple.

    The \l{Two Simple Qt Widgets} demonstration requires your
    WebBrowser to support ActiveX controls, and scripting to be
    enabled.

    \input  multiple-demo.qdocinc
*/
